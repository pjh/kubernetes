Log file created at: 2019/04/16 21:10:03
Running on machine: e2e-test-peterhornyack-windows-node-group-31ht
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
Log file created at: 2019/04/16 21:10:03
Running on machine: e2e-test-peterhornyack-windows-node-group-31ht
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
W0416 21:10:03.707612    4904 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0416 21:10:03.705691    4904 flags.go:33] FLAG: --alsologtostderr="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --bind-address="0.0.0.0"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --cleanup="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --cleanup-iptables="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --cleanup-ipvs="true"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --cluster-cidr="10.64.0.0/14"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --config=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --config-sync-period="15m0s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --conntrack-max="0"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --conntrack-min="131072"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --enable-dsr="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --feature-gates=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --healthz-port="10256"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --help="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --hostname-override=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --iptables-sync-period="30s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --ipvs-scheduler=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --ipvs-strict-arp="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --ipvs-sync-period="30s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --kube-api-burst="10"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --kube-api-qps="5"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --kubeconfig="C:\\etc\\kubernetes\\kubeproxy.kubeconfig"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --log-backtrace-at=":0"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --log-dir=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --log-file="C:\\etc\\kubernetes\\logs\\kube-proxy.log"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --log-flush-frequency="5s"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --logtostderr="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --masquerade-all="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --master=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --metrics-port="10249"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --network-name=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --nodeport-addresses="[]"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --oom-score-adj="-999"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --profiling="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --proxy-mode="kernelspace"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --proxy-port-range=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --resource-container=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --skip-headers="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --source-vip=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --stderrthreshold="2"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --udp-timeout="250ms"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --v="4"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --version="false"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --vmodule=""
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --windows-service="true"
I0416 21:10:03.706679    4904 flags.go:33] FLAG: --write-config-to=""
I0416 21:10:03.707612    4904 service.go:62] Running kube-proxy as a Windows service!
W0416 21:10:03.707612    4904 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0416 21:10:03.708630    4904 feature_gate.go:226] feature gates: &{map[]}
I0416 21:10:03.730090    4904 service.go:72] Service running
I0416 21:10:03.732058    4904 server_windows.go:102] Using Kernelspace Proxier.
I0416 21:10:03.753535    4904 proxier.go:522] network-name flag not set. Checking environment variable
I0416 21:10:03.762341    4904 proxier.go:534] Hns Network loaded with info = &{l2bridge 981b3102-31d4-4357-8a57-398b3bda1506 L2Bridge []}
I0416 21:10:03.766324    4904 proxier.go:611] minSyncPeriod: 0s, syncPeriod: 30s, burstSyncs: 2
I0416 21:10:03.766324    4904 server.go:557] Version: v1.15.0-alpha.0.1887+bae0630ef897d6-dirty
I0416 21:10:03.766324    4904 server.go:574] setting OOM scores is unsupported in this build
I0416 21:10:03.766324    4904 healthcheck.go:309] Starting goroutine for healthz on 0.0.0.0:10256
I0416 21:10:03.767209    4904 config.go:202] Starting service config controller
I0416 21:10:03.767209    4904 controller_utils.go:1028] Waiting for caches to sync for service config controller
I0416 21:10:03.767209    4904 bounded_frequency_runner.go:170] sync-runner Loop running
I0416 21:10:03.767209    4904 config.go:102] Starting endpoints config controller
I0416 21:10:03.767209    4904 controller_utils.go:1028] Waiting for caches to sync for endpoints config controller
I0416 21:10:03.768184    4904 reflector.go:128] Starting reflector *v1.Endpoints (15m0s) from k8s.io/client-go/informers/factory.go:133
I0416 21:10:03.768184    4904 reflector.go:166] Listing and watching *v1.Endpoints from k8s.io/client-go/informers/factory.go:133
I0416 21:10:03.768184    4904 reflector.go:128] Starting reflector *v1.Service (15m0s) from k8s.io/client-go/informers/factory.go:133
I0416 21:10:03.768184    4904 reflector.go:166] Listing and watching *v1.Service from k8s.io/client-go/informers/factory.go:133
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000581d40]
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000581da0 0xc000581e00]
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000581e60 0xc000581ec0]
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000581f20 0xc000063a40]
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc000063aa0]
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc000063b00]
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc000063b60]
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.772059    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc000063bc0]
I0416 21:10:03.772059    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 21:10:03.773045    4904 config.go:224] Calling handler.OnServiceAdd
I0416 21:10:03.773045    4904 config.go:224] Calling handler.OnServiceAdd
I0416 21:10:03.773045    4904 config.go:224] Calling handler.OnServiceAdd
I0416 21:10:03.773045    4904 config.go:224] Calling handler.OnServiceAdd
I0416 21:10:03.773045    4904 config.go:224] Calling handler.OnServiceAdd
I0416 21:10:03.773045    4904 config.go:224] Calling handler.OnServiceAdd
I0416 21:10:03.867747    4904 shared_informer.go:123] caches populated
I0416 21:10:03.867747    4904 controller_utils.go:1035] Caches are synced for service config controller
I0416 21:10:03.867747    4904 config.go:210] Calling handler.OnServiceSynced()
I0416 21:10:03.867747    4904 proxier.go:949] Not syncing hns until Services and Endpoints have been received from master
I0416 21:10:03.867747    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:10:03.867747    4904 shared_informer.go:123] caches populated
I0416 21:10:03.867747    4904 controller_utils.go:1035] Caches are synced for endpoints config controller
I0416 21:10:03.867747    4904 config.go:110] Calling handler.OnEndpointsSynced()
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "kube-system/heapster:" at 10.0.7.121:80/TCP
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "kube-system/kubernetes-dashboard:" at 10.0.153.141:443/TCP
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "kube-system/metrics-server:" at 10.0.81.173:443/TCP
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "default/kubernetes:https" at 10.0.0.1:443/TCP
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "kube-system/kube-dns:dns" at 10.0.0.10:53/UDP
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.0.0.10:53/TCP
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "kube-system/kube-dns:metrics" at 10.0.0.10:9153/TCP
I0416 21:10:03.867747    4904 proxier.go:332] Adding new service port "kube-system/default-http-backend:http" at 10.0.199.161:80/TCP
I0416 21:10:03.867747    4904 proxier.go:968] Syncing Policies
I0416 21:10:03.867747    4904 proxier.go:1002] ====Applying Policy for default/kubernetes:https====
I0416 21:10:03.886340    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:03.886340    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000581d40)({
 ip: (string) (len=14) "35.224.171.173",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-23-e0-ab-ad",
 hnsID: (string) (len=36) "3d57c631-3535-4472-bfe3-51295414ae27",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.886340    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=14) "35.224.171.173",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-23-e0-ab-ad",
  hnsID: (string) (len=36) "3d57c631-3535-4472-bfe3-51295414ae27",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [default/kubernetes:https]
I0416 21:10:03.887322    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.898052    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:03.912730    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"326b13be-1e1d-4766-9430-2f73d404e633","HostComputeEndpoints":["3d57c631-3535-4472-bfe3-51295414ae27"],"FrontendVIPs":["10.0.0.1"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:03.912730    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.1, Id [326b13be-1e1d-4766-9430-2f73d404e633]
I0416 21:10:03.912730    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.912730    4904 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns====
I0416 21:10:03.935161    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:03.936132    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000581da0)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "17ddd855-d4b0-4c58-a12b-98caa9a748bc",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.951758    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:03.952729    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000581e00)({
 ip: (string) (len=9) "10.64.2.5",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-05",
 hnsID: (string) (len=36) "5b334737-c642-49dd-85e6-86ae87ccb124",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.952729    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "17ddd855-d4b0-4c58-a12b-98caa9a748bc",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.5",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-05",
  hnsID: (string) (len=36) "5b334737-c642-49dd-85e6-86ae87ccb124",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns]
I0416 21:10:03.952729    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.968356    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"acb091c5-8dd6-49f1-8d89-48b5a5ed0e78","HostComputeEndpoints":["17ddd855-d4b0-4c58-a12b-98caa9a748bc","5b334737-c642-49dd-85e6-86ae87ccb124"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":17,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:03.968356    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [acb091c5-8dd6-49f1-8d89-48b5a5ed0e78]
I0416 21:10:03.968356    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.968356    4904 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns-tcp====
I0416 21:10:03.969338    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:03.970327    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000581e60)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "17ddd855-d4b0-4c58-a12b-98caa9a748bc",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.971314    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:03.971314    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000581ec0)({
 ip: (string) (len=9) "10.64.2.5",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-05",
 hnsID: (string) (len=36) "5b334737-c642-49dd-85e6-86ae87ccb124",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.971314    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "17ddd855-d4b0-4c58-a12b-98caa9a748bc",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.5",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-05",
  hnsID: (string) (len=36) "5b334737-c642-49dd-85e6-86ae87ccb124",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns-tcp]
I0416 21:10:03.971314    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.988870    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"09132c34-7a43-42d3-8cad-df9b49e0df7e","HostComputeEndpoints":["17ddd855-d4b0-4c58-a12b-98caa9a748bc","5b334737-c642-49dd-85e6-86ae87ccb124"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:03.988870    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [09132c34-7a43-42d3-8cad-df9b49e0df7e]
I0416 21:10:03.988870    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.988870    4904 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:metrics====
I0416 21:10:03.991803    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:03.991803    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000581f20)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "17ddd855-d4b0-4c58-a12b-98caa9a748bc",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.993916    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:03.993916    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000063a40)({
 ip: (string) (len=9) "10.64.2.5",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-05",
 hnsID: (string) (len=36) "5b334737-c642-49dd-85e6-86ae87ccb124",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:03.993916    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "17ddd855-d4b0-4c58-a12b-98caa9a748bc",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.5",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-05",
  hnsID: (string) (len=36) "5b334737-c642-49dd-85e6-86ae87ccb124",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:metrics]
I0416 21:10:03.994693    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.006454    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"23fa3d56-4609-4c63-b12a-d55d36bdccdb","HostComputeEndpoints":["17ddd855-d4b0-4c58-a12b-98caa9a748bc","5b334737-c642-49dd-85e6-86ae87ccb124"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":9153,"ExternalPort":9153}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:04.006454    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [23fa3d56-4609-4c63-b12a-d55d36bdccdb]
I0416 21:10:04.006454    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.006454    4904 proxier.go:1002] ====Applying Policy for kube-system/default-http-backend:http====
I0416 21:10:04.018230    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:04.018230    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000063aa0)({
 ip: (string) (len=9) "10.64.2.9",
 port: (uint16) 8080,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-09",
 hnsID: (string) (len=36) "d1f4cb41-9787-4701-879f-95e3fec095e1",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.018230    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.9",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-09",
  hnsID: (string) (len=36) "d1f4cb41-9787-4701-879f-95e3fec095e1",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/default-http-backend:http]
I0416 21:10:04.018230    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.028911    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0","HostComputeEndpoints":["d1f4cb41-9787-4701-879f-95e3fec095e1"],"FrontendVIPs":["10.0.199.161"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:04.028911    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.199.161, Id [4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0]
I0416 21:10:04.037698    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"7aef54ad-01c8-4307-a961-1d885a328ced","HostComputeEndpoints":["d1f4cb41-9787-4701-879f-95e3fec095e1"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":30668}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:04.037698    4904 proxier.go:1149] Hns LoadBalancer resource created for nodePort resources 10.0.199.161, Id [7aef54ad-01c8-4307-a961-1d885a328ced]
I0416 21:10:04.038711    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.038711    4904 proxier.go:1002] ====Applying Policy for kube-system/heapster:====
I0416 21:10:04.047463    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:04.047463    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000063b00)({
 ip: (string) (len=10) "10.64.2.11",
 port: (uint16) 8082,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0b",
 hnsID: (string) (len=36) "f408be98-ace6-461c-9494-ee4041993702",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.047463    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.11",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0b",
  hnsID: (string) (len=36) "f408be98-ace6-461c-9494-ee4041993702",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/heapster:]
I0416 21:10:04.047463    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.055264    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"f1d95529-ff5d-4359-bde7-b53b846003dd","HostComputeEndpoints":["f408be98-ace6-461c-9494-ee4041993702"],"FrontendVIPs":["10.0.7.121"],"PortMappings":[{"Protocol":6,"InternalPort":8082,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:04.055264    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.7.121, Id [f1d95529-ff5d-4359-bde7-b53b846003dd]
I0416 21:10:04.055264    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.055264    4904 proxier.go:1002] ====Applying Policy for kube-system/kubernetes-dashboard:====
I0416 21:10:04.068945    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:04.068945    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000063b60)({
 ip: (string) (len=9) "10.64.2.8",
 port: (uint16) 8443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-08",
 hnsID: (string) (len=36) "3735c8ca-5812-4e04-9620-cb6021e9151c",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.068945    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.8",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-08",
  hnsID: (string) (len=36) "3735c8ca-5812-4e04-9620-cb6021e9151c",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kubernetes-dashboard:]
I0416 21:10:04.068945    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.077725    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"423e9baa-d5d0-4fa3-91f9-cf12692d6dcc","HostComputeEndpoints":["3735c8ca-5812-4e04-9620-cb6021e9151c"],"FrontendVIPs":["10.0.153.141"],"PortMappings":[{"Protocol":6,"InternalPort":8443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:04.077725    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.153.141, Id [423e9baa-d5d0-4fa3-91f9-cf12692d6dcc]
I0416 21:10:04.077725    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.077725    4904 proxier.go:1002] ====Applying Policy for kube-system/metrics-server:====
I0416 21:10:04.093400    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 21:10:04.093400    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000063bc0)({
 ip: (string) (len=10) "10.64.2.10",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0a",
 hnsID: (string) (len=36) "ef1a88bb-a4d9-44e5-b483-d47c06f3cd2d",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.093400    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.10",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0a",
  hnsID: (string) (len=36) "ef1a88bb-a4d9-44e5-b483-d47c06f3cd2d",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/metrics-server:]
I0416 21:10:04.093400    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.115128    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"d3dfc7ea-863a-4cbf-a0c1-858882683082","HostComputeEndpoints":["ef1a88bb-a4d9-44e5-b483-d47c06f3cd2d"],"FrontendVIPs":["10.0.81.173"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 21:10:04.115128    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.81.173, Id [d3dfc7ea-863a-4cbf-a0c1-858882683082]
I0416 21:10:04.115128    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:04.115128    4904 proxier.go:945] syncProxyRules took 247.3814ms
I0416 21:10:04.528693    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:05.905987    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:06.536234    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:07.901697    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:08.545603    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:09.911385    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:10.564690    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:11.930949    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:12.573459    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:13.937240    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:14.580940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:15.944938    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:16.590684    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:17.952663    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:18.598473    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:19.959991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:20.607561    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:21.967298    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:22.616490    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:23.974004    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:24.626970    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:25.982093    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:26.633356    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:27.989328    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:28.643668    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:29.996385    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:30.651810    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:32.003942    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:32.661148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:33.767607    4904 proxier.go:968] Syncing Policies
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:10:33.767607    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:10:33.767607    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:10:34.011218    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:34.669025    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:36.020771    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:36.681888    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:38.031570    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:38.699477    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:40.039258    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:40.717469    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:42.048473    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:42.729859    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:44.052901    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:44.738308    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:46.067304    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:46.747122    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:48.076372    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:48.744840    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:50.070136    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:50.762836    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:52.090809    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:52.777031    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:54.093565    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:54.787984    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:56.113617    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:56.797810    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:58.124693    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:10:58.809432    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:00.117895    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:00.807267    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:02.126962    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:02.827602    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:03.781763    4904 proxier.go:968] Syncing Policies
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:03.782159    4904 proxier.go:945] syncProxyRules took 395.4µs
I0416 21:11:03.782159    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:11:04.139497    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:04.831828    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:06.158395    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:06.841427    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:08.169428    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:08.856265    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:10.188102    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:10.865729    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:12.195109    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:12.873656    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:14.204891    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:14.881565    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:16.212532    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:16.889698    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:18.221838    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:18.898852    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:20.229426    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:20.900286    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:22.237664    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:22.917093    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:24.244250    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:24.927077    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:26.252425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:26.937829    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:28.260708    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:28.952352    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:30.269166    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:30.964228    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:32.271362    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:32.974421    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:33.795843    4904 proxier.go:968] Syncing Policies
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:11:33.795843    4904 proxier.go:945] syncProxyRules took 162.1µs
I0416 21:11:33.795843    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:11:34.285348    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:34.986969    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:36.256401    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:36.994728    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:38.304666    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:39.003724    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:40.311927    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:41.012800    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:42.320129    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:43.025991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:44.330882    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:45.042232    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:46.327864    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:47.049996    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:48.344320    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:49.058045    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:50.353565    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:51.080171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:52.345831    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:53.090858    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:54.369571    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:55.097552    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:56.369459    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:57.105335    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:58.384869    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:11:59.113314    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:00.392190    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:01.121944    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:02.399027    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:03.130231    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:03.807309    4904 proxier.go:968] Syncing Policies
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:03.807608    4904 proxier.go:945] syncProxyRules took 298.5µs
I0416 21:12:03.807608    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:12:04.408261    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:05.139201    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:06.404683    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:07.147813    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:08.425460    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:09.156609    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:10.434242    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:11.165557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:12.444299    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:13.175439    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:14.445245    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:15.187300    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:16.463452    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:17.190909    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:18.472870    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:19.203947    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:20.480197    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:21.210153    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:22.480503    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:23.208539    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:24.495940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:25.229577    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:26.503081    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:27.238745    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:28.511155    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:29.253393    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:30.519262    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:31.264487    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:32.525029    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:33.272755    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:33.816225    4904 proxier.go:968] Syncing Policies
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:12:33.816225    4904 proxier.go:945] syncProxyRules took 305.3µs
I0416 21:12:33.816225    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:12:34.533387    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:35.274420    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:36.540159    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:37.281482    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:38.548464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:39.300284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:40.555211    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:41.308464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:41.315351    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:41.315351    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000580f60 0xc000580fc0]
I0416 21:12:41.315351    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000581140 0xc000581380]
I0416 21:12:41.315351    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0005815c0 0xc0005816e0]
I0416 21:12:41.315351    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000581800 0xc000581860]
I0416 21:12:41.315351    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0005818c0 0xc000581980]
I0416 21:12:41.315351    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000581a40 0xc000581b60]
I0416 21:12:42.564780    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:43.316585    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:44.571048    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:45.330746    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:46.578503    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:47.337844    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:48.585192    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:49.344768    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:50.578462    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:51.358848    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:52.602080    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:53.366575    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:54.594441    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:55.374146    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:56.618227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:57.367145    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:58.629746    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:12:59.390344    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:00.630560    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:01.398542    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:02.644517    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:03.398047    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:03.825743    4904 proxier.go:968] Syncing Policies
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:03.825743    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:13:03.825743    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:13:04.654127    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:05.402094    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:06.673075    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:07.421645    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:08.685762    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:09.433428    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:10.693695    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:11.441343    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:12.687676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:13.440576    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:14.708438    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:15.466436    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:16.715552    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:17.475963    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:18.725179    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:19.484616    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:20.733575    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:21.484835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:22.742118    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:23.501582    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:24.750411    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:25.508372    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:26.757800    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:27.522284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:28.753139    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:29.529997    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:30.775447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:31.539444    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:32.772408    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:33.551571    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:33.835755    4904 proxier.go:968] Syncing Policies
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:13:33.836042    4904 proxier.go:945] syncProxyRules took 286.7µs
I0416 21:13:33.836042    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:13:34.810396    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:35.561192    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:36.817687    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:37.570058    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:38.830243    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:39.579766    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:40.835184    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:41.581644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:42.833113    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:43.607140    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:44.855034    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:45.618096    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:46.863982    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:47.626676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:48.871589    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:49.635803    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:50.879206    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:51.649899    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:52.876600    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:53.653364    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:54.894555    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:55.675195    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:56.901654    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:57.683322    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:58.909231    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:13:59.691301    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:00.918064    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:01.699345    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:02.923076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:03.710608    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:03.840016    4904 proxier.go:968] Syncing Policies
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:03.840440    4904 proxier.go:945] syncProxyRules took 423.9µs
I0416 21:14:03.840440    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:14:04.935091    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:05.725232    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:06.948459    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:07.732205    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:08.948442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:09.740335    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:10.963167    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:11.748247    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:12.969640    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:13.761998    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:14.976791    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:15.774272    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:16.988792    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:17.777768    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:19.000826    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:19.794249    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:21.009227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:21.802535    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:23.018888    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:23.816189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:25.027877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:25.826017    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:27.035510    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:27.855770    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:29.043220    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:29.868579    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:31.053055    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:31.877480    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:33.059680    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:33.841367    4904 proxier.go:968] Syncing Policies
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:14:33.841815    4904 proxier.go:945] syncProxyRules took 448µs
I0416 21:14:33.841815    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:14:33.874072    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:35.067417    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:35.893170    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:37.080731    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:37.902567    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:39.087430    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:39.900394    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:41.087919    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:41.919063    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:43.104557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:43.926752    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:45.110875    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:45.925361    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:47.140299    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:47.943882    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:49.154610    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:49.956171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:51.166891    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:51.965123    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:53.162585    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:53.975854    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:55.176593    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:55.983470    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:57.195593    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:57.980414    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:14:59.211260    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:00.002693    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:01.218361    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:02.012279    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:03.228121    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:03.852450    4904 proxier.go:968] Syncing Policies
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:03.852781    4904 proxier.go:945] syncProxyRules took 331µs
I0416 21:15:03.852781    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:15:04.021857    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:05.223923    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:06.035375    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:07.243985    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:08.034253    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:09.253869    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:10.054631    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:11.247374    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:12.053918    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:13.256476    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:14.071068    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:15.277988    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:16.074146    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:17.287209    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:18.088295    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:19.301925    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:20.096131    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:21.314854    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:22.104897    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:23.333269    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:24.113178    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:25.336831    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:26.120799    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:27.351239    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:28.129752    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:29.375386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:30.138635    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:31.375011    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:32.148524    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:33.393399    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:33.864624    4904 proxier.go:968] Syncing Policies
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:15:33.864825    4904 proxier.go:945] syncProxyRules took 201.4µs
I0416 21:15:33.864825    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:15:34.156875    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:35.402712    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:36.165098    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:37.409832    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:38.173229    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:39.416684    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:40.182006    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:41.424243    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:42.198076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:43.432071    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:44.208017    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:45.439572    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:46.221674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:47.446487    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:48.223256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:49.454790    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:50.239287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:51.462189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:52.243483    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:53.471542    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:54.255852    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:55.479537    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:56.253300    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:57.486266    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:58.267861    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:15:59.494594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:00.282284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:01.502728    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:02.290393    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:03.511531    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:03.873759    4904 proxier.go:968] Syncing Policies
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:03.873960    4904 proxier.go:945] syncProxyRules took 201.1µs
I0416 21:16:03.873960    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:16:04.299517    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:05.520044    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:06.310652    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:07.531180    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:08.323074    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:09.533575    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:10.331749    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:11.545984    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:12.346131    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:13.553989    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:14.352348    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:15.561191    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:16.360928    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:17.559561    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:18.374250    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:19.575569    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:20.372336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:21.582252    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:22.393165    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:23.591605    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:24.401263    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:25.600029    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:26.414295    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:27.609203    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:28.423425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:29.613709    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:30.431713    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:31.626368    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:32.441495    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:33.635834    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:33.877826    4904 proxier.go:968] Syncing Policies
I0416 21:16:33.877826    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.877826    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.878472    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.878472    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.878472    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.878472    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.878472    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.878975    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:16:33.878975    4904 proxier.go:945] syncProxyRules took 1.1482ms
I0416 21:16:33.878975    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:16:34.450894    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:35.645336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:36.458250    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:37.654752    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:38.467018    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:39.662664    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:40.476120    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:41.670789    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:42.485042    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:43.678488    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:44.492658    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:45.688719    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:46.501520    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:47.696944    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:48.510641    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:49.705475    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:50.520815    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:51.703650    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:52.530987    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:53.721481    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:54.538636    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:55.719417    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:56.544999    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:57.739361    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:58.555403    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:16:59.750168    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:00.564851    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:01.758713    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:02.572979    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:03.767284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:03.879339    4904 proxier.go:968] Syncing Policies
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:03.879339    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:17:03.879339    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:17:04.582640    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:05.779427    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:06.592325    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:07.789389    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:08.601780    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:09.792385    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:10.605439    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:11.807255    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:12.619881    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:13.816835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:14.627940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:15.826327    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:16.636888    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:17.834410    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:18.651223    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:19.843422    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:20.662591    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:21.852242    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:22.664380    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:23.861307    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:24.685456    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:25.870547    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:26.694409    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:27.873363    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:28.702896    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:29.887158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:30.713249    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:31.899833    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:32.721701    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:33.881174    4904 proxier.go:968] Syncing Policies
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:17:33.881174    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:17:33.881174    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:17:33.909641    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:34.730891    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:35.918213    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:36.740793    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:37.926307    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:38.747443    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:39.930486    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:40.759205    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:41.941036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:42.767622    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:43.746044    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 21:17:43.950123    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:44.774761    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:45.959042    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:46.783637    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:47.966372    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:48.797398    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:49.973674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:50.811382    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:51.981682    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:52.819137    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:53.992241    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:54.827774    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:56.001366    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:56.843077    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:58.008743    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:17:58.863424    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:00.017365    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:00.875210    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:02.024779    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:02.882942    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:03.881538    4904 proxier.go:968] Syncing Policies
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:03.881538    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:18:03.881538    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:18:04.033339    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:04.893261    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:06.041516    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:06.900316    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:08.050115    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:08.910016    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:10.058552    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:10.918338    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:12.074302    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:12.927336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:14.084131    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:14.937757    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:16.093693    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:16.952053    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:18.101964    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:18.962303    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:20.109543    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:20.970425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:22.122897    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:22.980493    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:24.132774    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:24.988638    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:26.139840    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:26.999182    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:28.153311    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:29.009314    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:30.155660    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:31.019529    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:32.169246    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:33.028689    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:33.881936    4904 proxier.go:968] Syncing Policies
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:18:33.881936    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:18:33.881936    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:18:34.177859    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:35.037872    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:36.185786    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:37.042553    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:38.194011    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:39.074303    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:40.192894    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:41.082534    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:42.211501    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:43.089397    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:44.218490    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:45.088076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:46.224982    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:47.106473    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:48.231528    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:49.122157    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:50.238256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:51.117738    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:52.244617    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:53.143229    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:54.251674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:55.160003    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:56.259710    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:57.166100    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:58.266568    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:18:59.175670    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:00.261493    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:01.184079    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:02.280659    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:03.191896    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:03.886181    4904 proxier.go:968] Syncing Policies
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:03.886323    4904 proxier.go:945] syncProxyRules took 141.3µs
I0416 21:19:03.886323    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:19:04.295608    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:05.201511    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:06.302644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:07.209152    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:08.309599    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:09.219256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:10.318079    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:11.223974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:12.325038    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:13.235154    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:14.332557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:15.243171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:16.342056    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:17.238592    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:18.349890    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:19.257464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:20.358920    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:21.269970    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:22.365732    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:23.279041    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:24.374884    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:25.291142    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:26.382979    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:27.303139    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:28.391043    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:29.314739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:30.398341    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:31.323782    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:32.406131    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:33.318279    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:33.728847    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 569 items received
I0416 21:19:33.893556    4904 proxier.go:968] Syncing Policies
I0416 21:19:33.893556    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.893556    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.893556    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.893556    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.893556    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.893556    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.894382    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.894382    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:19:33.894382    4904 proxier.go:945] syncProxyRules took 825.7µs
I0416 21:19:33.894382    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:19:34.413375    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:35.346540    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:36.420840    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:37.354064    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:38.416583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:39.354367    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:40.438797    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:41.375266    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:42.447471    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:43.381835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:44.442827    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:45.389661    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:46.463284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:47.400580    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:48.461499    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:49.402378    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:50.465216    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:51.422132    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:52.481329    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:53.432671    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:54.498889    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:55.439765    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:56.500384    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:57.447539    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:58.515791    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:19:59.448350    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:00.535617    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:01.465963    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:02.533069    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:03.474065    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:03.896211    4904 proxier.go:968] Syncing Policies
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:03.896211    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:20:03.896211    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:20:04.551927    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:05.483471    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:06.560046    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:07.491929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:08.566485    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:09.502179    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:10.579584    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:11.508864    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:12.586904    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:13.518377    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:14.602461    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:15.561651    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:16.672953    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:17.626246    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:18.732457    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:19.684111    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:20.799147    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:21.740854    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:22.848977    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:23.788535    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:24.898986    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:25.829835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:26.941744    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:27.871122    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:28.980043    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:29.904984    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:31.006379    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:31.948549    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:33.041045    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:33.976959    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:34.252615    4904 proxier.go:968] Syncing Policies
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.252862    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:20:34.253345    4904 proxier.go:945] syncProxyRules took 723µs
I0416 21:20:34.253345    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:20:35.066988    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:36.003983    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:37.091329    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:38.027388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:39.113469    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:40.050433    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:41.132240    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:42.071888    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:43.142941    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:44.091314    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:45.171895    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:46.108045    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:47.188763    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:48.124140    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:49.205508    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:50.140319    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:51.207997    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:52.155124    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:53.233200    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:54.166177    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:55.246861    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:56.184963    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:57.258587    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:58.197288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:20:59.259297    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:00.211068    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:01.276710    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:02.224884    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:03.293551    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:04.238313    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:04.387049    4904 proxier.go:968] Syncing Policies
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:04.387049    4904 proxier.go:945] syncProxyRules took 153.5µs
I0416 21:21:04.387049    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:21:05.304133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:06.249604    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:07.313690    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:08.258740    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:09.326245    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:10.269358    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:11.337234    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:12.281084    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:13.348706    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:14.294025    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:15.357972    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:16.309399    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:17.371101    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:18.319621    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:19.354070    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:20.328957    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:21.390953    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:22.325794    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:23.397926    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:24.348653    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:25.409172    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:26.357279    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:27.418801    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:28.366925    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:29.425247    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:30.376093    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:31.436368    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:32.384712    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:33.442978    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:34.393736    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:34.406425    4904 proxier.go:968] Syncing Policies
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:21:34.406425    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:21:34.406425    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:21:35.461258    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:36.405676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:37.473661    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:38.416479    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:39.480829    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:40.425000    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:41.493898    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:42.435372    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:43.503727    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:44.459614    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:45.510626    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:46.474959    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:47.520897    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:48.483795    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:49.533057    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:50.493056    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:51.556990    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:52.502276    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:53.565212    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:54.511004    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:55.573924    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:56.523326    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:57.583221    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:58.522700    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:21:59.593168    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:00.544009    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:01.600705    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:02.555607    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:03.615442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:04.411480    4904 proxier.go:968] Syncing Policies
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:04.411642    4904 proxier.go:945] syncProxyRules took 162.1µs
I0416 21:22:04.411642    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:22:04.564611    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:05.622074    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:06.571472    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:07.632949    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:08.583099    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:09.640011    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:10.591259    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:11.650570    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:12.594590    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:13.657719    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:14.610583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:15.664947    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:16.618161    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:17.672587    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:18.627021    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:19.680479    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:20.622414    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:21.688317    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:22.643475    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:23.694812    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:24.651815    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:25.701606    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:26.658424    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:27.700322    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:28.666085    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:29.720202    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:30.663095    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:31.729404    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:32.682354    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:33.735988    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:34.412189    4904 proxier.go:968] Syncing Policies
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:22:34.412189    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:22:34.412189    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:22:34.690522    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:35.746103    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:36.701556    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:37.755701    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:38.712363    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:39.764814    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:40.721254    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:41.793026    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:42.730400    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:43.800442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:44.740170    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:45.808749    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:46.752500    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:47.817849    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:48.760168    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:49.824015    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:50.767804    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:51.846181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:52.781297    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:53.854457    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:54.790888    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:55.861987    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:56.799041    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:57.871413    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:58.808165    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:22:59.879293    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:00.815311    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:01.888076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:02.824890    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:03.217460    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 21:23:03.896099    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:04.422921    4904 proxier.go:968] Syncing Policies
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:04.423059    4904 proxier.go:945] syncProxyRules took 138.5µs
I0416 21:23:04.423059    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:23:04.832036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:05.891138    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:06.841293    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:07.911202    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:08.848790    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:09.919496    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:10.848149    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:11.925579    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:12.871422    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:13.933161    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:14.884398    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:15.941777    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:16.891557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:17.948618    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:18.900158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:19.955280    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:20.908336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:21.967668    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:22.917642    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:23.974283    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:24.927207    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:25.982589    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:26.936126    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:28.001593    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:28.945341    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:30.010121    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:30.953867    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:32.024395    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:32.962100    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:34.032176    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:34.438404    4904 proxier.go:968] Syncing Policies
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:23:34.438588    4904 proxier.go:945] syncProxyRules took 184.4µs
I0416 21:23:34.438588    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:23:34.970200    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:36.035170    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:36.979529    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:38.050820    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:38.988591    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:40.058041    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:40.997158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:42.068137    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:43.005493    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:44.085506    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:45.013223    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:46.099039    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:47.024148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:48.108158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:49.033090    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:50.120590    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:51.042653    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:52.128329    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:53.051594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:54.130156    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:55.059680    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:56.144637    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:57.067889    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:58.152754    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:23:59.071063    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:00.159872    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:01.083607    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:02.167788    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:03.092335    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:04.176114    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:04.443189    4904 proxier.go:968] Syncing Policies
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:04.443315    4904 proxier.go:945] syncProxyRules took 126µs
I0416 21:24:04.443315    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:24:05.108676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:06.186223    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:07.123644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:08.193378    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:09.134635    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:10.201028    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:11.143299    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:12.211078    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:13.157735    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:14.216796    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:15.166464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:16.225896    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:17.166239    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:18.237929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:19.183245    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:20.246084    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:21.190732    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:22.254191    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:23.198733    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:24.261384    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:25.206689    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:26.269447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:27.214914    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:28.276191    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:29.224237    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:30.284258    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:31.229461    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:32.291373    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:33.239305    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:34.299877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:34.449077    4904 proxier.go:968] Syncing Policies
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:24:34.449077    4904 proxier.go:945] syncProxyRules took 137.7µs
I0416 21:24:34.449077    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:24:35.238917    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:36.303296    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:37.259510    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:38.316768    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:39.268118    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:40.322930    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:41.273069    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:42.319388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:43.285667    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:44.333794    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:45.294293    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:46.348320    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:47.304130    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:48.355397    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:49.312417    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:50.351397    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:51.320098    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:52.361978    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:53.329043    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:54.381284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:55.337741    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:56.388434    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:57.346634    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:58.396803    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:24:59.370482    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:00.409638    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:01.371536    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:02.410421    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:03.398262    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279384    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 21:25:04.279550    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279550    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0000b17a0]
I0416 21:25:04.279550    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:25:04.279550    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc00047e120]
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279550    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:25:04.279550    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc00047e2a0 0xc00047e300]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc00047e360 0xc00047e3c0]
I0416 21:25:04.279550    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc00047e420 0xc00047e480]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc00047e4e0 0xc00047e780]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc00047e7e0 0xc00047e840]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc00047e900 0xc00047e960]
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc00047ea20]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc00047eb40]
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc00047efc0]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc00047f020]
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc00047f140]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc00047f1a0]
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc00047f260]
I0416 21:25:04.279550    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc00047f380]
I0416 21:25:04.279550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.435417    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:04.449338    4904 proxier.go:968] Syncing Policies
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:04.449338    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:25:04.449338    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:25:05.405635    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:06.445065    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:07.414497    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:08.452889    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:09.423728    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:10.462638    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:11.416994    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:12.472546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:13.441699    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:14.478726    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:15.450501    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:16.488300    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:17.463795    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:18.497431    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:19.472459    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:20.506044    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:21.472256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:22.513192    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:23.490168    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:24.519388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:25.497817    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:26.527511    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:27.508706    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:28.534181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:29.516970    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:30.531574    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:31.526393    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:32.549761    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:33.525564    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:34.452570    4904 proxier.go:968] Syncing Policies
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:25:34.452738    4904 proxier.go:945] syncProxyRules took 168.3µs
I0416 21:25:34.452738    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:25:34.556599    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:35.542834    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:36.559880    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:37.548509    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:38.571954    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:39.557198    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:40.570766    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:41.565556    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:42.588208    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:43.574661    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:44.596808    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:45.582029    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:46.606227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:47.593334    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:48.616940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:49.600307    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:50.625942    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:51.613344    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:52.634022    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:53.634401    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:54.640339    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:55.631980    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:56.647964    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:57.642061    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:58.655134    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:25:59.658485    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:00.661325    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:01.670024    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:02.659676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:03.673760    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:04.454447    4904 proxier.go:968] Syncing Policies
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:04.454447    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:26:04.454447    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:26:04.677447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:05.696220    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:06.685525    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:07.704611    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:08.691790    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:09.713143    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:10.699289    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:11.720920    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:12.707716    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:13.731010    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:14.713838    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:15.755782    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:16.720560    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:17.759583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:18.725654    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:19.776466    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:20.721583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:21.785977    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:22.744997    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:23.797554    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:24.752357    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:25.807475    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:26.753890    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:27.814893    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:28.771303    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:29.825346    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:30.779412    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:31.832365    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:32.786646    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:33.840497    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:34.467810    4904 proxier.go:968] Syncing Policies
I0416 21:26:34.467810    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.467810    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.467810    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.467810    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.467810    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.468499    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.468499    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.468499    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:26:34.468499    4904 proxier.go:945] syncProxyRules took 689µs
I0416 21:26:34.468499    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:26:34.780472    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:35.849727    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:36.802140    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:37.858337    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:38.817725    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:39.865947    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:40.826286    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:41.874590    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:42.833482    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:43.882233    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:44.840775    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:45.891310    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:46.849395    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:47.900450    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:48.858405    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:49.910606    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:50.876991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:51.922594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:52.886815    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:53.946635    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:54.896026    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:55.970686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:56.903600    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:57.979208    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:58.913656    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:26:59.990350    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:00.920344    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:01.997870    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:02.929344    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:04.007694    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:04.469505    4904 proxier.go:968] Syncing Policies
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:04.469505    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:27:04.469505    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:27:04.936565    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:06.021446    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:06.941876    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:08.028127    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:08.952796    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:10.037209    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:10.960490    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:12.046336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:12.966676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:14.060802    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:14.975779    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:16.067948    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:16.984851    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:18.077534    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:18.994007    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:20.088123    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:21.002117    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:22.097723    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:23.013652    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:24.107285    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:25.025210    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:26.114480    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:27.033340    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:28.128942    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:29.041932    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:30.136592    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:31.048608    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:32.147263    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:33.056255    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:34.155278    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:34.469694    4904 proxier.go:968] Syncing Policies
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:27:34.469694    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:27:34.469694    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:27:35.064073    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:36.164386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:37.072546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:38.174462    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:39.080174    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:40.184075    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:41.093171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:42.193769    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:43.112512    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:44.201806    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:45.126519    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:46.213339    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:47.136130    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:48.220985    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:49.147667    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:50.233501    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:51.163080    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:52.241153    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:53.175644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:54.251296    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:55.190337    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:56.262793    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:57.198328    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:58.270990    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:27:59.207350    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:00.278543    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:01.216484    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:02.288704    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:03.225080    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:04.300207    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:04.470088    4904 proxier.go:968] Syncing Policies
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:04.470088    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:28:04.470088    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:28:05.229336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:06.308809    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:07.238244    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:08.312531    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:09.234305    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:10.321665    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:11.255671    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:12.334754    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:13.186628    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 516 items received
I0416 21:28:13.262917    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:14.346210    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:15.266071    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:16.352487    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:17.286862    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:18.362464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:19.294576    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:20.381963    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:21.306426    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:22.384089    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:23.301475    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:24.397074    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:25.316458    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:26.406234    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:27.335877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:28.414586    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:29.342269    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:30.576380    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:31.341820    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:32.432383    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:33.353582    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:34.454910    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:34.471942    4904 proxier.go:968] Syncing Policies
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:28:34.471942    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:28:34.471942    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:28:35.367340    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:36.463510    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:37.378931    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:38.484154    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:39.381717    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:40.492409    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:41.393890    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:42.501632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:43.402684    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:44.509164    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:45.414420    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:46.517778    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:47.419079    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:48.528125    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:49.433084    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:50.529192    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:51.454890    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:52.544249    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:53.469796    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:54.553708    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:55.479211    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:56.562384    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:57.494862    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:58.560236    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:28:59.502298    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:00.581797    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:01.539047    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:02.591218    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:03.516950    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:04.472507    4904 proxier.go:968] Syncing Policies
I0416 21:29:04.472507    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.472507    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.472507    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.472507    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.472507    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.472507    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.472507    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.473268    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:04.473268    4904 proxier.go:945] syncProxyRules took 760.3µs
I0416 21:29:04.473268    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:29:04.597801    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:05.532339    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:06.612068    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:07.552153    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:08.605703    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:09.561812    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:10.629932    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:11.562541    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:12.638627    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:13.577961    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:14.884514    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:15.589560    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:16.656792    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:17.603088    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:18.665444    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:19.615458    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:20.676314    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:23.060553    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:23.060553    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:23.632768    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:24.693249    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:25.640666    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:26.699916    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:27.648560    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:28.711564    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:29.656961    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:31.259564    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:31.664823    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:32.728695    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:33.673129    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:35.461833    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:34.473618    4904 proxier.go:968] Syncing Policies
I0416 21:29:35.466738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.466738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.466738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.466738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.466738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.466738    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.467716    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.467716    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:29:35.467716    4904 proxier.go:945] syncProxyRules took 994.0981ms
I0416 21:29:35.467716    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:29:35.682557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:36.744912    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:37.698546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:38.756849    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:39.709765    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:40.765612    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:41.718645    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:42.775590    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:43.725755    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:44.783907    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:45.734884    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:46.792446    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:47.742672    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:48.799594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:49.750797    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:50.805299    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:51.788792    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:52.819200    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:53.795293    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:54.829383    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:55.803392    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:56.838442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:57.813468    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:58.847527    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:29:59.823538    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:00.854197    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:01.832644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:02.855036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:03.840321    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:04.874948    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:05.473449    4904 proxier.go:968] Syncing Policies
I0416 21:30:05.473449    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.473449    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.473449    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.473449    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.474475    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.474475    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.474475    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.474475    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:05.474475    4904 proxier.go:945] syncProxyRules took 1.0256ms
I0416 21:30:05.474475    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:30:05.900166    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:06.889885    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:07.915631    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:08.898943    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:09.921900    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:10.908686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:11.929932    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:12.917666    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:13.937889    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:14.927619    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:15.945670    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:16.935350    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:17.954800    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:18.944930    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:19.962430    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:20.953687    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:21.972857    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:22.962707    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:23.981914    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:24.970991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:25.991220    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:26.980634    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:27.998877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:28.993389    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:30.007353    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:31.004778    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:32.015390    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:33.011068    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:34.012024    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:35.020273    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:35.488005    4904 proxier.go:968] Syncing Policies
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:30:35.488297    4904 proxier.go:945] syncProxyRules took 292.5µs
I0416 21:30:35.488297    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:30:36.034047    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:37.030055    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:38.036095    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:39.037960    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:40.038420    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:41.046669    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:42.058133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:43.056096    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:44.067748    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:45.063770    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:46.076366    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:47.071926    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:48.083849    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:49.090698    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:50.091590    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:51.101864    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:52.106693    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:53.118097    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:54.115441    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:55.129877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:56.123220    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:57.139457    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:58.131583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:30:59.150981    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:00.140851    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:01.145972    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:02.148285    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:03.171762    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:04.159343    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:05.191722    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:05.501576    4904 proxier.go:968] Syncing Policies
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:05.501767    4904 proxier.go:945] syncProxyRules took 190.6µs
I0416 21:31:05.501767    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:31:06.194921    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:07.202053    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:08.203377    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:09.211107    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:10.209434    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:11.218847    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:12.212453    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:13.228940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:14.224158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:15.236686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:16.233523    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:17.245395    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:18.244217    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:19.251819    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:20.251218    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:21.260460    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:22.259442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:23.268062    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:24.267051    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:25.276235    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:26.275624    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:27.283884    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:28.284684    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:29.293424    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:30.294680    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:31.305007    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:32.305385    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:33.314906    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:34.313829    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:35.320786    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:35.504842    4904 proxier.go:968] Syncing Policies
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:31:35.505070    4904 proxier.go:945] syncProxyRules took 227.7µs
I0416 21:31:35.505070    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:31:36.322640    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:37.328473    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:38.331764    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:39.332778    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:40.341908    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:41.353497    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:42.338005    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:43.371369    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:44.345433    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:45.389499    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:46.366195    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:47.401795    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:48.376446    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:49.411338    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:50.383214    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:51.426435    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:52.393084    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:53.425208    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:54.400668    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:55.445988    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:56.407858    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:57.447866    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:58.418784    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:31:59.461781    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:00.428076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:01.471352    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:02.435183    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:03.480193    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:04.444065    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:05.488639    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:05.505195    4904 proxier.go:968] Syncing Policies
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:05.505195    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:32:05.505195    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:32:06.451875    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:07.497686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:08.460530    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:09.504432    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:10.458588    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:11.514440    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:12.474837    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:13.521101    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:14.483519    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:15.528810    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:16.495127    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:17.541788    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:18.503698    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:19.551352    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:20.511725    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:21.547287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:22.518890    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:23.567623    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:24.528097    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:25.578697    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:26.538586    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:27.589110    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:28.548700    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:29.595709    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:30.556380    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:31.595258    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:32.565529    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:33.615739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:34.574427    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:35.507084    4904 proxier.go:968] Syncing Policies
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:32:35.507084    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:32:35.507084    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:32:35.627908    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:36.582876    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:37.639701    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:38.592814    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:39.649619    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:40.601257    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:41.657512    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:42.609221    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:43.666371    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:44.618068    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:45.667329    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:46.627996    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:47.685572    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:48.629955    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:49.693812    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:50.632720    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:51.710241    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:52.191655    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 21:32:52.653732    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:53.719310    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:54.661149    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:55.731123    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:56.670156    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:57.744083    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:58.679131    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:32:59.754555    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:00.690432    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:01.763078    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:02.699543    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:03.775365    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:04.709077    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:05.507397    4904 proxier.go:968] Syncing Policies
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:05.507397    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:33:05.507397    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:33:05.783022    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:06.725216    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:07.776818    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:08.732024    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:09.801151    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:10.745220    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:11.809442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:12.752979    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:13.810983    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:14.760601    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:15.824391    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:16.767901    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:17.822054    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:18.777808    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:19.921204    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:20.786961    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:21.932858    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:22.796960    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:23.943324    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:24.805558    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:25.950517    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:26.823254    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:27.959544    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:28.830641    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:29.969384    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:30.837818    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:31.980281    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:32.850680    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:33.987386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:34.858132    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:35.508259    4904 proxier.go:968] Syncing Policies
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:33:35.508462    4904 proxier.go:945] syncProxyRules took 203.8µs
I0416 21:33:35.508462    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:33:35.997763    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:36.853904    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:38.004997    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:38.861530    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:40.015198    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:40.876009    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:42.033148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:42.889993    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:44.045131    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:44.901958    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:46.055872    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:46.909649    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:48.073619    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:48.915861    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:50.081696    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:50.924506    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:52.089849    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:52.930170    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:54.100425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:54.938891    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:56.110991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:56.937586    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:58.118675    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:33:58.955991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:00.129245    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:00.963843    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:02.133465    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:02.959188    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:04.148449    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:04.986795    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:05.509612    4904 proxier.go:968] Syncing Policies
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:05.509612    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:34:05.509612    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:34:06.154578    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:06.996886    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:08.170133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:09.005007    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:10.180735    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:11.013943    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:12.190907    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:13.013481    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:14.189138    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:15.033336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:16.204504    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:17.042535    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:18.224982    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:19.049109    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:20.234976    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:21.040183    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:22.231523    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:23.076232    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:24.254706    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:25.090331    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:26.257868    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:27.093713    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:28.270745    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:29.108702    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:30.265885    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:31.101715    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:32.289200    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:33.115192    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:34.291853    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:35.128674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:35.519500    4904 proxier.go:968] Syncing Policies
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:34:35.519500    4904 proxier.go:945] syncProxyRules took 188.3µs
I0416 21:34:35.519500    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:34:36.305846    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:37.138805    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:38.315336    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:39.145788    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:40.326503    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:41.150660    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:42.335460    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:43.162539    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:44.342565    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:45.170317    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:46.354756    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:47.179727    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:48.354614    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:49.187563    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:50.366181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:51.197824    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:52.382928    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:53.205737    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:54.399007    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:55.214429    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:56.409273    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:57.222935    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:58.417730    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:34:59.247947    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:00.427356    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:01.256489    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:02.436836    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:03.264403    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:04.458809    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:05.270262    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:05.529919    4904 proxier.go:968] Syncing Policies
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:05.530105    4904 proxier.go:945] syncProxyRules took 185.5µs
I0416 21:35:05.530105    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:35:06.468446    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:07.282039    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:08.476642    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:09.299314    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:10.483148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:11.295101    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:12.492725    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:13.314639    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:14.497119    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:15.324458    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:16.511051    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:17.331349    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:18.521447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:19.336289    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:20.530395    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:21.348861    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:22.540896    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:23.342827    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:24.552932    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:25.366200    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:26.574000    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:27.376425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:28.582851    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:29.157319    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 434 items received
I0416 21:35:29.385064    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:30.583563    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:31.394443    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:32.609984    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:33.403090    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:34.619744    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:35.415219    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:35.545670    4904 proxier.go:968] Syncing Policies
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:35:35.545670    4904 proxier.go:945] syncProxyRules took 277.3µs
I0416 21:35:35.545670    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:35:36.628573    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:37.423710    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:38.637631    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:39.422544    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:40.646965    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:41.444311    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:42.660582    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:43.453173    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:44.656944    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:45.460550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:46.669959    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:47.454154    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:48.685929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:49.474887    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:50.695596    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:51.491594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:52.707029    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:53.500696    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:54.722875    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:55.509713    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:56.721353    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:57.518603    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:58.745542    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:35:59.527227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:00.752863    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:01.534388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:02.768584    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:03.532795    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:04.777793    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:05.547267    4904 proxier.go:968] Syncing Policies
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:05.547494    4904 proxier.go:945] syncProxyRules took 226.9µs
I0416 21:36:05.547494    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:36:05.554075    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:06.787871    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:07.561952    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:08.802742    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:09.569871    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:10.812358    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:11.576877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:12.820905    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:13.587071    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:14.833053    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:15.583593    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:16.841694    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:17.592097    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:18.852242    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:19.609530    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:20.846773    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:21.621556    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:22.867534    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:23.630037    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:24.876145    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:25.640316    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:26.885485    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:27.638122    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:28.893400    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:29.655123    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:30.901847    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:31.660721    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:32.909734    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:33.668377    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:34.917569    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:35.559052    4904 proxier.go:968] Syncing Policies
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:36:35.559052    4904 proxier.go:945] syncProxyRules took 210.1µs
I0416 21:36:35.559052    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:36:35.676102    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:36.927118    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:37.684669    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:38.938145    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:39.699085    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:40.948300    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:41.709205    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:42.948377    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:43.725065    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:44.961503    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:45.727954    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:46.980113    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:47.755569    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:48.980557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:49.760323    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:50.994129    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:51.776259    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:53.005748    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:53.796076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:55.029364    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:55.816284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:57.042095    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:57.830283    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:59.062302    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:36:59.839155    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:01.076171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:01.846369    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:03.085785    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:03.852663    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:05.093425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:05.561175    4904 proxier.go:968] Syncing Policies
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:05.561356    4904 proxier.go:945] syncProxyRules took 181.1µs
I0416 21:37:05.561356    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:37:05.860262    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:07.103976    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:07.869102    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:09.115525    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:09.878191    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:11.130509    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:11.888809    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:13.140832    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:13.884676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:15.157155    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:15.902128    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:17.162373    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:17.911227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:19.180561    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:19.923247    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:21.179112    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:21.934341    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:23.199887    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:23.939169    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:25.209883    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:25.950565    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:27.216572    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:27.961638    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:29.217829    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:29.970710    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:31.227929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:31.977014    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:33.244294    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:33.987929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:35.322811    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:35.566272    4904 proxier.go:968] Syncing Policies
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:37:35.566457    4904 proxier.go:945] syncProxyRules took 185.8µs
I0416 21:37:35.566457    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:37:35.994632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:37.262333    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:38.003448    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:39.293655    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:40.036260    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:41.289593    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:42.022911    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:43.289019    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:44.041870    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:45.298753    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:46.035234    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:47.309815    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:48.054626    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:49.356262    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:50.070093    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:51.328753    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:52.072373    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:53.338370    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:54.080625    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:55.341102    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:56.088577    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:57.356352    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:58.097694    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:37:59.368099    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:00.107788    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:01.376703    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:02.116728    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:03.386455    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:04.125175    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:05.395494    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:05.577057    4904 proxier.go:968] Syncing Policies
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:05.577255    4904 proxier.go:945] syncProxyRules took 198.1µs
I0416 21:38:05.577255    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:38:06.131655    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:07.405741    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:08.139835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:09.412888    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:10.148031    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:11.420833    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:12.155580    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:13.430998    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:14.165644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:15.444934    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:16.176724    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:17.466158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:18.185497    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:19.477775    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:20.213485    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:21.487471    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:22.223301    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:23.496009    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:24.238641    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:25.505732    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:26.242793    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:27.514166    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:28.253346    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:29.523245    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:30.249259    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:31.533813    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:32.270186    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:33.543515    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:34.267479    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:35.548155    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:35.577393    4904 proxier.go:968] Syncing Policies
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:38:35.577393    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:38:35.577393    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:38:36.286058    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:37.564545    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:38.297250    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:39.561950    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:40.303414    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:41.579064    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:42.312438    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:43.586913    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:44.319694    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:45.598430    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:46.327478    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:47.617555    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:48.329866    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:49.631880    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:50.335950    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:51.632141    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:52.357853    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:53.652064    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:54.365343    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:55.659739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:56.376835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:57.668509    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:58.386510    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:38:59.672651    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:00.383008    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:01.689266    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:02.405228    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:03.694658    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:04.414825    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:05.590997    4904 proxier.go:968] Syncing Policies
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:05.591303    4904 proxier.go:945] syncProxyRules took 306µs
I0416 21:39:05.591303    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:39:05.709438    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:06.424962    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:07.730541    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:08.433612    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:09.739245    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:10.458070    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:11.748161    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:12.466622    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:13.756388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:14.474562    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:15.765230    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:16.483636    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:17.775509    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:18.493256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:19.772463    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:20.508222    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:21.792645    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:22.515858    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:23.802488    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:24.523995    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:25.810910    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:26.531559    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:27.819090    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:28.539221    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:29.827472    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:30.545868    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:31.837090    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:32.554997    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:33.845421    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:34.562418    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:35.598003    4904 proxier.go:968] Syncing Policies
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:39:35.598003    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:39:35.598003    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:39:35.853043    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:36.570207    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:37.862183    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:38.577918    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:39.860249    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:40.586578    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:41.880374    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:42.578674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:43.891398    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:44.589590    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:45.899551    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:46.610915    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:47.909183    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:48.619408    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:49.920181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:50.630075    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:51.928387    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:52.637334    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:53.938879    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:54.633481    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:55.948477    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:56.638872    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:57.955646    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:58.647120    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:39:59.964805    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:00.670260    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:01.974051    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:02.683328    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:03.982540    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283266    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 21:40:04.283546    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:40:04.283546    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 21:40:04.283546    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:40:04.283546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283546    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:40:04.283546    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:40:04.283546    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:40:04.283546    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0003107e0]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc000310840]
I0416 21:40:04.283546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc000310900]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc000310960]
I0416 21:40:04.283546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc000310a20]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc000310a80]
I0416 21:40:04.283546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000310ba0]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000310c00]
I0416 21:40:04.283546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000310d20 0xc000310d80]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000310de0 0xc000310e40]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000310ea0 0xc000310f00]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000310f60 0xc000310fc0]
I0416 21:40:04.283546    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000311020 0xc000311080]
I0416 21:40:04.284209    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0003110e0 0xc000311140]
I0416 21:40:04.284209    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:04.284209    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc000311200]
I0416 21:40:04.284209    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc000311260]
I0416 21:40:04.694704    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:05.612261    4904 proxier.go:968] Syncing Policies
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:05.612555    4904 proxier.go:945] syncProxyRules took 294.2µs
I0416 21:40:05.612555    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:40:05.992944    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:06.725990    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:08.006228    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:08.165839    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 21:40:08.733327    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:10.015675    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:10.728584    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:12.030648    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:12.749773    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:14.040415    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:14.743783    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:16.047362    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:16.763184    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:18.056821    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:18.770769    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:20.064217    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:20.766235    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:22.074537    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:22.790067    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:24.085271    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:24.800812    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:26.094963    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:26.806410    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:28.118632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:28.817282    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:30.121361    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:30.830650    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:32.135075    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:32.841514    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:34.138679    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:34.850124    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:35.618637    4904 proxier.go:968] Syncing Policies
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:40:35.618637    4904 proxier.go:945] syncProxyRules took 176.5µs
I0416 21:40:35.618637    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:40:36.155044    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:36.856629    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:38.164118    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:38.866272    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:40.173344    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:40.872376    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:42.182417    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:42.879542    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:44.194945    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:44.887172    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:46.193826    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:46.894368    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:48.198953    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:48.901001    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:50.223552    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:50.920875    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:52.233467    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:52.930967    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:54.241683    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:54.931290    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:56.251734    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:56.949225    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:58.260709    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:40:58.948066    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:00.258469    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:00.964650    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:02.281223    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:02.974958    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:04.290895    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:04.976820    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:05.625669    4904 proxier.go:968] Syncing Policies
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:05.625894    4904 proxier.go:945] syncProxyRules took 224.8µs
I0416 21:41:05.625894    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:41:06.297513    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:06.984461    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:08.307381    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:08.998719    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:10.314223    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:11.004609    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:12.326046    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:13.045478    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:14.335118    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:15.064796    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:16.341852    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:17.072183    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:18.342382    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:19.081750    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:20.358342    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:21.088715    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:22.365943    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:23.096399    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:24.374463    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:25.104041    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:26.386410    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:27.110801    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:28.392984    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:29.118713    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:30.401630    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:31.125326    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:32.411458    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:33.135045    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:34.423591    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:35.146920    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:35.632403    4904 proxier.go:968] Syncing Policies
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:41:35.632684    4904 proxier.go:945] syncProxyRules took 280.2µs
I0416 21:41:35.632684    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:41:36.431158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:37.155969    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:38.440736    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:39.164091    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:40.452277    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:41.171775    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:42.459905    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:43.193274    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:44.468894    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:45.208635    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:46.476182    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:47.220761    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:48.485281    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:49.215709    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:50.494386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:51.236808    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:52.506968    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:53.244659    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:54.514053    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:55.259968    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:56.527550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:57.267746    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:58.537660    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:41:59.278605    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:00.543375    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:01.287021    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:02.556452    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:03.295872    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:04.557325    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:05.293028    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:05.632861    4904 proxier.go:968] Syncing Policies
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:05.632861    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:42:05.632861    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:42:06.575507    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:07.311403    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:08.581034    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:09.320514    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:10.601628    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:11.329244    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:12.616071    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:13.337117    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:14.625683    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:15.346747    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:16.627516    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:17.354471    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:18.642834    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:19.352297    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:20.653095    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:21.371239    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:22.662082    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:23.375909    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:24.117248    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 413 items received
I0416 21:42:24.671255    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:25.383642    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:26.686674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:27.395573    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:28.697883    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:29.410814    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:30.709335    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:31.420867    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:32.717097    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:33.415055    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:34.726297    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:35.436434    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:35.641715    4904 proxier.go:968] Syncing Policies
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:42:35.641715    4904 proxier.go:945] syncProxyRules took 285.3µs
I0416 21:42:35.641715    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:42:36.735859    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:37.444974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:38.744702    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:39.453696    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:40.748456    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:41.461487    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:42.751174    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:43.469896    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:44.757370    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:45.477978    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:46.779462    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:47.494451    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:48.787978    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:49.506268    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:50.796531    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:51.520387    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:52.803906    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:53.514945    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:54.813221    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:55.538181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:56.822853    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:57.545385    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:58.831450    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:42:59.553314    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:00.841603    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:01.562142    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:02.849357    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:03.570686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:04.860614    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:05.578907    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:05.643973    4904 proxier.go:968] Syncing Policies
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:05.643973    4904 proxier.go:945] syncProxyRules took 195.2µs
I0416 21:43:05.643973    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:43:06.869335    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:07.582059    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:08.877697    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:09.596348    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:10.886240    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:11.605851    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:12.896233    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:13.615421    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:14.894960    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:15.615552    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:16.914677    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:17.633629    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:18.921564    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:19.640190    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:20.931405    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:21.648378    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:22.952421    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:23.649049    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:24.970033    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:25.665983    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:26.981797    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:27.688275    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:28.990797    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:29.699435    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:30.999345    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:31.711753    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:33.002273    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:33.719935    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:35.033406    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:35.657126    4904 proxier.go:968] Syncing Policies
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:43:35.657126    4904 proxier.go:945] syncProxyRules took 238.1µs
I0416 21:43:35.657126    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:43:35.729159    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:37.048711    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:37.738388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:39.057096    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:39.739996    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:41.065741    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:41.745661    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:43.075666    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:43.761288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:45.102830    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:45.772703    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:47.114988    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:47.790076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:49.124684    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:49.803961    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:51.138367    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:51.808785    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:53.159543    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:53.822857    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:55.169798    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:55.822595    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:57.180467    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:57.834629    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:59.188584    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:43:59.849098    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:01.200164    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:01.858223    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:03.227714    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:03.868343    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:05.241378    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:05.657711    4904 proxier.go:968] Syncing Policies
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:05.657947    4904 proxier.go:945] syncProxyRules took 236µs
I0416 21:44:05.657947    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:44:05.875672    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:07.249815    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:07.884282    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:09.257411    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:09.892491    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:11.269217    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:11.900080    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:13.279583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:13.908478    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:15.287265    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:15.930974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:17.295305    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:17.944909    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:19.304381    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:19.953591    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:21.313653    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:21.966371    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:23.324824    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:23.973863    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:25.330819    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:25.982450    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:27.326337    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:27.984623    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:29.344326    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:30.000366    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:31.353377    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:32.007441    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:33.363444    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:34.015622    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:35.373914    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:35.672239    4904 proxier.go:968] Syncing Policies
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:44:35.672526    4904 proxier.go:945] syncProxyRules took 287.3µs
I0416 21:44:35.672526    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:44:36.022795    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:37.372418    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:38.029708    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:39.390703    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:40.037106    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:41.399303    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:42.037895    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:43.400158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:44.052271    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:45.416582    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:46.060243    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:47.413961    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:48.067356    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:49.436896    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:50.074710    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:51.458744    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:52.081511    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:53.468548    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:54.088688    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:55.476173    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:56.095318    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:57.479931    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:58.104671    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:44:59.494380    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:00.112108    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:01.502599    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:02.119992    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:03.510170    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:04.127655    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:05.520769    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:05.681264    4904 proxier.go:968] Syncing Policies
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:05.681264    4904 proxier.go:945] syncProxyRules took 341.1µs
I0416 21:45:05.681264    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:45:06.135285    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:07.529368    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:08.148217    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:09.538278    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:10.158939    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:11.547335    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:12.166893    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:13.555680    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:14.175600    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:15.566737    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:16.186067    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:17.576446    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:18.180368    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:19.585632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:20.205595    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:21.595105    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:22.214756    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:23.602715    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:24.221952    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:25.611135    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:26.231286    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:27.617026    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:28.234629    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:29.611959    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:30.233966    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:31.633287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:32.253217    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:33.642135    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:34.261742    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:35.650842    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:35.681274    4904 proxier.go:968] Syncing Policies
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:45:35.681274    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:45:35.681274    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:45:36.271840    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:37.657882    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:38.279673    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:39.668714    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:40.275584    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:41.677120    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:42.295298    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:43.691344    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:44.305177    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:45.693841    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:46.313816    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:47.701272    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:48.321976    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:49.727142    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:50.331594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:51.747307    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:52.323433    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:53.757832    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:54.334483    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:55.766470    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:56.354801    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:57.775083    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:58.353207    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:45:59.769813    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:00.373980    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:01.792571    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:02.383838    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:03.802381    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:04.393734    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:05.690923    4904 proxier.go:968] Syncing Policies
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:05.691218    4904 proxier.go:945] syncProxyRules took 295.2µs
I0416 21:46:05.691218    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:46:05.812241    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:06.401385    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:07.820136    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:08.409447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:09.830583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:10.418574    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:11.838661    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:12.425802    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:13.847011    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:14.434205    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:15.856612    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:16.440953    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:17.864178    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:18.449216    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:19.864517    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:20.455945    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:21.881194    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:22.467015    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:23.875889    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:24.475445    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:25.889407    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:26.484041    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:27.908634    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:28.492857    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:29.917831    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:30.500784    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:31.926605    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:32.508425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:33.933202    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:34.515647    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:35.693491    4904 proxier.go:968] Syncing Policies
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:46:35.693491    4904 proxier.go:945] syncProxyRules took 227.2µs
I0416 21:46:35.693491    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:46:35.941266    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:36.523283    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:37.950181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:38.522172    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:39.960899    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:40.537267    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:41.960843    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:42.544511    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:43.974202    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:44.562094    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:45.983505    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:46.573157    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:48.004376    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:48.590566    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:50.015240    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:50.599643    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:52.022569    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:52.610814    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:54.024393    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:54.618013    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:56.035763    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:56.629150    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:58.056085    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:46:58.639047    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:00.067169    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:00.650311    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:02.079307    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:02.660171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:04.089466    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:04.671592    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:05.708244    4904 proxier.go:968] Syncing Policies
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:05.708409    4904 proxier.go:945] syncProxyRules took 165µs
I0416 21:47:05.708409    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:47:06.096160    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:06.681071    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:08.091345    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:08.665697    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:10.116078    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:10.698414    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:12.115915    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:12.704821    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:14.119413    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:14.717430    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:16.138066    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:16.723559    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:18.134586    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:18.731564    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:20.156976    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:20.740349    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:22.163170    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:22.747758    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:24.171384    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:24.754471    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:26.179574    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:26.762352    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:28.188041    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:28.777146    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:30.193989    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:30.791386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:32.190869    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:32.799748    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:34.213152    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:34.808807    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:35.723611    4904 proxier.go:968] Syncing Policies
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:47:35.723611    4904 proxier.go:945] syncProxyRules took 280.4µs
I0416 21:47:35.723611    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:47:36.232046    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:36.817053    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:38.235287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:38.813054    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:40.254445    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:40.827937    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:42.262929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:42.831570    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:44.272387    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:44.842733    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:46.280056    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:46.861106    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:48.278362    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:48.872371    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:50.298693    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:50.889637    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:52.316839    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:52.897573    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:54.318456    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:54.904912    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:56.341399    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:56.911928    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:58.349821    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:47:58.919541    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:00.358379    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:00.926221    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:02.368273    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:02.934322    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:04.377415    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:04.942799    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:05.728953    4904 proxier.go:968] Syncing Policies
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:05.728953    4904 proxier.go:945] syncProxyRules took 0s
I0416 21:48:05.729558    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:48:06.385030    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:06.949605    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:08.391883    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:08.958522    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:10.386936    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:10.966437    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:12.410572    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:12.980381    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:14.420388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:14.995009    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:16.437166    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:17.011104    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:18.440345    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:19.018783    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:20.454838    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:21.026415    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:22.469277    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:23.046632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:24.473046    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:25.055807    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:26.487077    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:27.069912    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:28.495618    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:29.078699    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:30.503323    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:31.072790    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:32.512308    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:33.097101    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:34.521507    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:35.106496    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:35.736437    4904 proxier.go:968] Syncing Policies
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:48:35.736437    4904 proxier.go:945] syncProxyRules took 228.6µs
I0416 21:48:35.736437    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:48:36.531060    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:37.114672    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:38.539780    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:39.112656    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:40.550260    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:41.132255    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:42.561571    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:43.138447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:44.571063    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:45.147839    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:46.577587    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:47.155834    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:48.586346    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:49.162820    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:50.594531    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:51.171652    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:52.603452    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:53.167866    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:54.602331    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:55.175500    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:56.607032    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:57.184622    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:58.618576    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:48:59.194227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:00.642304    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:01.213420    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:02.663316    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:03.220859    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:04.661026    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:05.220596    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:05.739031    4904 proxier.go:968] Syncing Policies
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:05.739240    4904 proxier.go:945] syncProxyRules took 209.4µs
I0416 21:49:05.739240    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:49:06.682315    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:07.244690    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:08.676352    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:09.239350    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:10.699140    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:11.125810    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 21:49:11.262962    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:12.708110    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:13.271288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:14.713493    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:15.280029    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:16.725067    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:17.289293    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:18.732972    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:19.298431    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:20.743055    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:21.306077    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:22.751008    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:23.314672    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:24.746740    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:25.324287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:26.769127    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:27.329985    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:28.777312    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:29.338099    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:30.783780    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:31.340867    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:32.790570    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:33.366072    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:34.802885    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:35.374730    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:35.751719    4904 proxier.go:968] Syncing Policies
I0416 21:49:35.751719    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:49:35.752332    4904 proxier.go:945] syncProxyRules took 612.5µs
I0416 21:49:35.752332    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:49:36.804805    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:37.398501    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:38.810473    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:39.411965    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:40.829339    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:41.421564    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:42.838615    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:43.429181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:44.850171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:45.437815    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:46.859791    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:47.445877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:48.867210    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:49.453591    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:50.872481    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:51.471156    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:52.875160    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:53.486452    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:54.887268    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:55.493091    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:56.905613    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:57.502178    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:58.914203    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:49:59.509345    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:00.925226    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:01.518585    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:02.934929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:03.527471    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:04.945857    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:05.536841    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:05.768187    4904 proxier.go:968] Syncing Policies
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:05.768187    4904 proxier.go:945] syncProxyRules took 194.9µs
I0416 21:50:05.768187    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:50:06.958152    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:07.547107    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:08.970538    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:09.557295    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:10.980111    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:11.568417    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:13.006990    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:13.578617    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:15.018743    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:15.588261    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:17.029789    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:17.589586    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:19.047389    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:19.607931    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:21.062612    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:21.615026    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:23.074461    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:23.634305    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:25.077896    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:25.644284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:27.096608    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:27.653765    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:29.107230    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:29.665120    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:31.117833    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:31.678248    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:33.129518    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:33.692682    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:35.140395    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:35.704549    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:35.800037    4904 proxier.go:968] Syncing Policies
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:50:35.800037    4904 proxier.go:945] syncProxyRules took 223.6µs
I0416 21:50:35.800037    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:50:37.148464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:37.712886    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:39.160696    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:39.724272    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:41.171114    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:41.733985    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:43.169476    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:43.743777    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:45.186571    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:45.742598    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:47.208881    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:47.761621    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:49.213373    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:49.771447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:51.227877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:51.779810    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:53.236933    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:53.788748    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:55.246236    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:55.797358    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:57.251272    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:57.806431    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:59.266057    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:50:59.815763    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:01.261487    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:01.827324    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:03.285781    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:03.837243    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:05.297737    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:05.836996    4904 proxier.go:968] Syncing Policies
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:05.837160    4904 proxier.go:945] syncProxyRules took 163.5µs
I0416 21:51:05.837160    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:51:05.846072    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:07.301687    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:07.856710    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:09.317766    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:09.865992    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:11.328433    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:11.875178    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:13.342649    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:13.884320    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:15.353624    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:15.883729    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:17.363205    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:17.902703    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:19.374005    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:19.910134    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:21.383981    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:21.928903    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:23.397290    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:23.937505    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:25.407128    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:25.948726    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:27.419491    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:27.958030    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:29.167259    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 542 items received
I0416 21:51:29.428054    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:29.966067    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:31.427464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:31.984166    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:33.432752    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:33.995526    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:35.458046    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:35.870123    4904 proxier.go:968] Syncing Policies
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:51:35.870123    4904 proxier.go:945] syncProxyRules took 235.4µs
I0416 21:51:35.870123    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:51:36.004218    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:37.474960    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:38.013473    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:39.484496    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:40.023193    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:41.492383    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:42.040404    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:43.502022    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:44.048974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:45.510724    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:46.063126    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:47.520974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:48.071481    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:49.529920    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:50.072121    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:51.549721    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:52.091557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:53.563666    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:54.101433    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:55.572341    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:56.111132    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:57.584386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:58.119999    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:51:59.592258    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:00.129202    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:01.601836    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:02.141172    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:03.602945    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:04.151047    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:05.623143    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:05.888223    4904 proxier.go:968] Syncing Policies
I0416 21:52:05.888223    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888223    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888223    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888223    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888223    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888223    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888223    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888845    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:05.888845    4904 proxier.go:945] syncProxyRules took 622.5µs
I0416 21:52:05.888845    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:52:06.144298    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:07.628215    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:08.168442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:09.645989    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:10.176959    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:11.655648    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:12.184831    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:13.664682    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:14.178165    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:15.673467    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:16.200495    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:17.681849    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:18.211359    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:19.691347    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:20.220271    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:21.691135    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:22.228571    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:23.709408    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:24.239074    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:25.722061    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:26.248663    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:27.738914    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:28.248210    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:29.747648    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:30.255539    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:31.759984    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:32.273507    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:33.782000    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:34.277643    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:35.782394    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:35.902977    4904 proxier.go:968] Syncing Policies
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:52:35.903446    4904 proxier.go:945] syncProxyRules took 469.3µs
I0416 21:52:35.903446    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:52:36.298135    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:37.799975    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:38.306929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:39.798950    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:40.316244    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:41.817938    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:42.311280    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:43.827417    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:44.333991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:45.832597    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:46.341877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:47.847184    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:48.350146    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:49.872645    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:50.358844    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:51.881737    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:52.367062    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:53.895138    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:54.365642    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:55.894765    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:56.383626    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:57.912898    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:58.390993    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:52:59.917993    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:00.397580    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:01.930098    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:02.408836    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:03.941217    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:04.422266    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:05.918162    4904 proxier.go:968] Syncing Policies
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:05.918476    4904 proxier.go:945] syncProxyRules took 314.2µs
I0416 21:53:05.918476    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:53:05.949449    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:06.420772    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:07.958501    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:08.442575    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:09.967395    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:10.451873    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:11.977303    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:12.461264    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:13.986469    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:14.472812    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:15.994612    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:16.480975    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:18.005398    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:18.491408    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:20.013288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:20.490435    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:22.024138    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:22.501439    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:24.033464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:24.516710    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:26.041954    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:26.524456    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:28.050073    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:28.532827    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:30.059578    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:30.535870    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:32.068192    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:32.536597    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:34.078187    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:34.556877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:35.939074    4904 proxier.go:968] Syncing Policies
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:53:35.939074    4904 proxier.go:945] syncProxyRules took 236.8µs
I0416 21:53:35.939074    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:53:36.089225    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:36.563390    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:38.096779    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:38.572256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:40.104874    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:40.581435    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:42.115314    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:42.589858    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:44.123409    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:44.596590    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:46.133357    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:46.605556    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:48.144802    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:48.613615    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:50.156256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:50.623617    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:52.164746    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:52.632101    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:54.175739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:54.642035    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:56.186616    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:56.651605    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:58.198534    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:53:58.661541    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:00.206947    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:00.669800    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:02.217951    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:02.662864    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:04.232257    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:04.685690    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:05.957331    4904 proxier.go:968] Syncing Policies
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:05.957331    4904 proxier.go:945] syncProxyRules took 243.9µs
I0416 21:54:05.957331    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:54:06.243712    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:06.692487    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:08.250585    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:08.698709    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:10.258716    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:10.707478    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:12.266147    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:12.703789    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:14.274559    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:14.724109    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:16.267368    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:16.746670    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:18.291919    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:18.759654    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:20.302829    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:20.756974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:22.312532    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:22.776862    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:24.320686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:24.786093    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:26.329046    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:26.796416    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:28.338931    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:28.794040    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:30.348315    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:30.799101    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:32.358686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:32.821133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:34.368053    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:34.831676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:35.977077    4904 proxier.go:968] Syncing Policies
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:54:35.977442    4904 proxier.go:945] syncProxyRules took 365µs
I0416 21:54:35.977442    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:54:36.374985    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:36.838295    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:38.383398    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:38.846621    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:40.391785    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:40.855205    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:42.396401    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:42.863681    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:44.408608    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:44.876428    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:46.418484    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:46.897133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:48.412626    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:48.908393    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:50.433790    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:50.916294    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:52.452979    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:52.920578    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:54.461687    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:54.934606    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:56.477037    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:56.942531    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:58.470550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:54:58.955673    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:00.494689    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:00.966232    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:02.501890    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:02.973599    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 21:55:04.417189    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:55:04.417189    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:55:04.417189    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000581860]
I0416 21:55:04.417189    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0005818c0]
I0416 21:55:04.417189    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000581bc0 0xc000581f80]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc00047e120 0xc00047e180]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc00047e240 0xc00047e2a0]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc00047e300 0xc00047e360]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc00047e3c0 0xc00047e420]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc00047e480 0xc00047e4e0]
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc00047e7e0]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc00047e840]
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc00047e960]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc00047ea20]
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc00047ed20]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc00047efc0]
I0416 21:55:04.417189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc00047f0e0]
I0416 21:55:04.417189    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc00047f140]
I0416 21:55:04.513206    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:04.970879    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:05.995451    4904 proxier.go:968] Syncing Policies
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:05.995451    4904 proxier.go:945] syncProxyRules took 295.5µs
I0416 21:55:05.995451    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:55:06.519070    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:06.988352    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:08.527258    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:09.012413    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:10.534743    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:11.020155    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:12.530031    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:13.027954    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:14.553914    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:15.035477    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:16.564186    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:17.043071    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:18.561301    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:19.053204    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:20.580856    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:21.061296    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:22.590998    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:23.068484    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:24.599494    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:25.078928    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:26.607232    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:27.088432    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:28.617993    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:29.109173    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:30.627255    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:31.130216    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:32.638092    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:33.137579    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:34.645379    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:35.145195    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:36.001086    4904 proxier.go:968] Syncing Policies
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:55:36.001086    4904 proxier.go:945] syncProxyRules took 260.1µs
I0416 21:55:36.001086    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:55:36.655169    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:37.154645    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:38.663887    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:39.163160    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:40.671705    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:41.171855    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:42.691244    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:43.180302    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:44.702454    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:45.188966    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:46.700973    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:47.198111    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:48.721137    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:49.206632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:50.729771    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:51.214652    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:52.741027    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:53.224086    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:54.750711    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:55.222442    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:56.764180    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:57.239462    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:58.772288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:55:59.249267    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:00.782236    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:01.258050    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:02.776031    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:03.266506    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:04.797630    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:05.259169    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:06.003827    4904 proxier.go:968] Syncing Policies
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:06.003827    4904 proxier.go:945] syncProxyRules took 229.3µs
I0416 21:56:06.003827    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:56:06.805532    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:07.279859    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:08.813837    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:09.288755    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:10.822488    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:11.296621    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:12.830786    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:13.305035    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:14.843199    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:15.314895    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:16.850431    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:17.336619    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:18.860292    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:19.344064    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:20.867740    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:21.343014    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:22.877165    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:23.361721    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:24.885583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:25.370330    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:26.895234    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:27.367345    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:28.903284    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:29.400429    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:30.913272    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:31.408101    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:32.913048    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:33.423256    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:34.929927    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:35.427303    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:36.006445    4904 proxier.go:968] Syncing Policies
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:56:36.006445    4904 proxier.go:945] syncProxyRules took 236µs
I0416 21:56:36.006445    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:56:36.938337    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:37.437287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:38.946789    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:39.439686    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:40.955313    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:41.439650    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:42.966070    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:43.465237    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:44.975632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:45.468288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:46.985406    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:47.482500    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:48.229444    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 21:56:48.989171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:49.483809    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:50.997902    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:51.500860    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:53.010478    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:53.520278    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:55.018215    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:55.527975    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:57.027911    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:57.537538    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:59.035171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:56:59.546043    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:01.044571    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:01.554608    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:03.053564    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:03.564176    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:05.061674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:05.572149    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:06.018299    4904 proxier.go:968] Syncing Policies
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:06.018604    4904 proxier.go:945] syncProxyRules took 305µs
I0416 21:57:06.018604    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:57:07.070383    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:07.579274    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:09.079197    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:09.587024    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:11.087349    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:11.595729    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:13.109328    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:13.605050    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:15.125987    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:15.615891    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:17.133163    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:17.623266    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:19.140630    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:19.631493    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:21.150210    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:21.637386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:23.164148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:23.647108    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:25.179181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:25.655347    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:27.188478    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:27.664298    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:29.182320    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:29.673489    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:31.207940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:31.681000    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:33.218893    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:33.688420    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:35.225368    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:35.697977    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:36.031608    4904 proxier.go:968] Syncing Policies
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:57:36.031771    4904 proxier.go:945] syncProxyRules took 163.3µs
I0416 21:57:36.031771    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:57:37.234610    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:37.705981    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:39.243077    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:39.709687    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:41.245340    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:41.722625    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:43.262440    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:43.732003    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:45.271877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:45.740181    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:47.281641    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:47.748420    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:49.290672    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:49.770186    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:51.299227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:51.780287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:53.309051    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:53.789074    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:55.317391    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:55.796616    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:57.324114    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:57.803788    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:59.332595    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:57:59.811926    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:01.342214    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:01.814419    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:03.353253    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:03.827799    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:05.361475    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:05.836962    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:06.043834    4904 proxier.go:968] Syncing Policies
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:06.044067    4904 proxier.go:945] syncProxyRules took 233µs
I0416 21:58:06.044067    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:58:07.362975    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:07.846844    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:09.377343    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:09.862888    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:11.387552    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:11.880304    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:13.382229    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:13.884572    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:15.403037    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:15.898655    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:17.409721    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:17.906643    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:19.418276    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:19.907746    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:21.426312    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:21.919739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:23.433641    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:23.926439    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:25.440124    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:25.933665    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:27.454533    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:27.943780    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:29.461559    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:29.951834    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:31.470411    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:31.960769    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:33.478371    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:33.969031    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:35.487401    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:35.976089    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:36.056828    4904 proxier.go:968] Syncing Policies
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:58:36.056828    4904 proxier.go:945] syncProxyRules took 244µs
I0416 21:58:36.056828    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:58:37.488657    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:37.981378    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:39.500199    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:39.980430    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:41.511580    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:42.004461    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:43.510226    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:44.011158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:45.529004    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:46.020095    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:47.536265    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:48.027379    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:49.528503    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:50.036717    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:51.564630    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:52.046332    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:53.573557    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:54.054487    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:55.583162    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:56.063122    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:57.591372    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:58.071308    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:58:58.200208    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 448 items received
I0416 21:58:59.599866    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:00.067581    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:01.608163    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:02.091676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:03.617377    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:04.099419    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:05.638201    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:06.057725    4904 proxier.go:968] Syncing Policies
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:06.057931    4904 proxier.go:945] syncProxyRules took 205.9µs
I0416 21:59:06.057931    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:59:06.107862    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:07.650772    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:08.115546    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:09.658940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:10.123772    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:11.658813    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:12.130467    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:13.676377    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:14.138815    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:15.684927    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:16.145497    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:17.692905    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:18.153186    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:19.699789    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:20.161144    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:21.708731    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:22.157631    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:23.717698    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:24.177644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:25.728205    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:26.186673    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:27.736103    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:28.186036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:29.752340    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:30.207353    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:31.763732    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:32.215131    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:33.771923    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:34.224966    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:35.780498    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:36.072283    4904 proxier.go:968] Syncing Policies
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 21:59:36.072460    4904 proxier.go:945] syncProxyRules took 177.3µs
I0416 21:59:36.072460    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 21:59:36.235017    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:37.790698    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:38.244861    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:39.795093    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:40.253119    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:41.810090    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:42.261253    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:43.817287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:44.265616    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:45.831112    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:46.266021    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:47.841820    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:48.283766    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:49.837434    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:50.295438    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:51.857805    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:52.311400    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:53.861136    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:54.312245    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:55.872581    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:56.326670    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:57.871069    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:58.342607    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 21:59:59.908920    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:00.351926    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:01.919615    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:02.359800    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:03.930520    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:04.368630    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:05.939860    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:06.083520    4904 proxier.go:968] Syncing Policies
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:06.083520    4904 proxier.go:945] syncProxyRules took 223.2µs
I0416 22:00:06.083520    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:00:06.375603    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:07.948089    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:08.384224    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:09.956234    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:10.391643    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:11.950134    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:12.383624    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:13.975253    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:14.405602    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:15.983606    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:16.413341    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:17.994819    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:18.420380    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:20.002676    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:20.427482    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:22.009697    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:22.428328    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:24.018993    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:24.444076    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:26.027542    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:26.452924    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:28.011502    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:28.459870    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:30.046907    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:30.468296    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:32.069206    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:32.479987    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:34.077357    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:34.487469    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:36.086125    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:36.086125    4904 proxier.go:968] Syncing Policies
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:00:36.086125    4904 proxier.go:945] syncProxyRules took 0s
I0416 22:00:36.086125    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:00:36.496135    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:38.094183    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:38.503287    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:40.085739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:40.501843    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:42.110966    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:42.517649    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:44.120196    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:44.524177    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:46.133577    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:46.532148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:48.140292    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:48.536454    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:50.149410    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:50.547825    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:52.168297    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:52.554103    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:54.193530    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:54.564607    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:56.206104    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:56.573244    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:58.214258    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:00:58.579476    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:00.222373    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:00.589065    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:02.216416    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:02.598191    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:04.245397    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:04.605775    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:06.095737    4904 proxier.go:968] Syncing Policies
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:06.095737    4904 proxier.go:945] syncProxyRules took 0s
I0416 22:01:06.095737    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:01:06.258059    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:06.614013    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:08.260849    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:08.623636    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:10.260722    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:10.623488    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:12.285004    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:12.639912    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:14.292756    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:14.647570    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:16.299917    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:16.656227    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:18.307835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:18.663910    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:20.313798    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:20.672014    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:22.326238    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:22.679230    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:24.334943    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:24.687858    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:26.352772    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:26.696951    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:28.365063    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:28.714721    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:30.379967    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:30.725133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:32.394489    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:32.734591    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:34.403077    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:34.749078    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:36.108863    4904 proxier.go:968] Syncing Policies
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:01:36.109144    4904 proxier.go:945] syncProxyRules took 281.1µs
I0416 22:01:36.109144    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:01:36.413388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:36.757294    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:38.424588    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:38.766951    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:40.433276    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:40.776579    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:42.445221    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:42.786540    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:44.457353    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:44.792799    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:46.456731    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:46.801703    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:48.475328    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:48.811006    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:50.485988    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:50.808423    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:52.495795    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:52.837117    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:54.505909    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:54.848283    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:56.514243    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:56.856776    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:58.523634    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:01:58.864874    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:00.518644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:00.874956    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:02.528739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:02.885151    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:04.552991    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:04.894730    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:06.114192    4904 proxier.go:968] Syncing Policies
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:06.114192    4904 proxier.go:945] syncProxyRules took 271.1µs
I0416 22:02:06.114192    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:02:06.562235    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:06.901753    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:08.560470    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:08.909586    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:10.578128    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:10.917700    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:12.586929    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:12.925070    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:14.597155    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:14.934964    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:16.608241    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:16.942942    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:18.617325    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:18.950777    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:20.625748    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:20.960755    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:22.635048    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:22.967107    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:24.641739    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:24.975808    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:26.651406    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:26.982619    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:28.659038    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:28.990318    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:30.667981    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:31.002365    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:32.676440    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:33.004447    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:34.689804    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:35.012125    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:36.121820    4904 proxier.go:968] Syncing Policies
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:02:36.121820    4904 proxier.go:945] syncProxyRules took 395µs
I0416 22:02:36.121820    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:02:36.703660    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:37.031435    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:38.699270    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:39.039581    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:40.723086    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:41.041371    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:42.759423    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:43.056084    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:44.783303    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:45.066796    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:46.793667    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:47.083421    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:48.802544    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:49.090044    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:50.809677    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:51.108515    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:52.817833    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:53.126596    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:54.825598    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:55.138122    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:56.822872    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:57.148835    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:58.845914    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:02:59.146439    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:00.862277    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:01.166711    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:02.871456    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:03.175770    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:04.887400    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:05.180567    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:06.132392    4904 proxier.go:968] Syncing Policies
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:06.132392    4904 proxier.go:945] syncProxyRules took 226.4µs
I0416 22:03:06.132392    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:03:06.891403    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:07.201149    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:08.909293    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:09.226857    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:10.906692    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:11.237714    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:12.915009    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:13.249103    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:14.944482    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:15.258877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:16.953743    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:17.267042    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:18.949033    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:19.263157    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:20.973054    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:21.276513    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:22.981660    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:23.293294    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:24.989911    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:25.301824    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:26.999105    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:27.310240    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:29.007113    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:29.316089    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:31.015526    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:31.319645    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:33.025145    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:33.342414    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:35.034507    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:35.353666    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:36.137333    4904 proxier.go:968] Syncing Policies
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:03:36.137333    4904 proxier.go:945] syncProxyRules took 223.3µs
I0416 22:03:36.137333    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:03:37.042601    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:37.372866    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:39.051621    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:39.380917    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:41.049343    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:41.379877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:43.070112    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:43.389058    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:45.074992    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:45.410376    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:47.104864    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:47.425770    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:49.113380    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:49.437843    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:51.121399    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:51.441080    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:53.118746    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:53.462581    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:55.130257    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:55.468639    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:57.146852    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:57.464561    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:59.142133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:03:59.482519    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:01.147331    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:01.483264    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:03.172229    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:03.491530    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:05.185234    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:05.508819    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:06.141770    4904 proxier.go:968] Syncing Policies
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:06.141770    4904 proxier.go:945] syncProxyRules took 208.6µs
I0416 22:04:06.141770    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:04:07.193452    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:07.521936    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:09.200022    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:09.530459    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:11.212009    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:11.538129    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:13.220627    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:13.548939    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:15.239200    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:15.558473    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:17.249302    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:17.567398    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:19.245531    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:19.579525    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:21.270274    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:21.572944    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:23.278598    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:23.594551    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:25.274344    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:25.601915    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:27.296464    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:27.611288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:29.293026    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:29.617792    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:31.312836    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:31.625861    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:33.322075    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:33.634010    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:35.342429    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:35.628682    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:36.154052    4904 proxier.go:968] Syncing Policies
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:04:36.154052    4904 proxier.go:945] syncProxyRules took 243.3µs
I0416 22:04:36.154052    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:04:37.352527    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:37.650080    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:39.359921    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:39.656614    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:41.368408    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:41.663397    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:43.375253    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:43.670397    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:45.390173    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:45.677446    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:47.398731    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:47.685128    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:49.406484    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:49.694584    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:51.418633    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:51.707539    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:53.416067    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:53.717382    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:55.438419    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:55.724357    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:57.446565    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:57.730247    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:59.444536    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:04:59.742865    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:01.459735    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:01.741358    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:03.470157    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:03.757123    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:05.463985    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:05.757680    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:06.165353    4904 proxier.go:968] Syncing Policies
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:06.165353    4904 proxier.go:945] syncProxyRules took 276.4µs
I0416 22:05:06.165353    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:05:07.481903    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:07.772887    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:09.495503    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:09.783817    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:11.504159    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:11.791993    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:13.511330    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:13.799106    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:15.518916    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:15.806889    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:17.526774    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:17.814202    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:19.535484    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:19.820847    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:21.543662    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:21.824985    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:23.538701    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:23.836023    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:25.561148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:25.845243    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:27.570132    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:27.855249    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:29.578563    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:29.865632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:31.581508    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:31.865673    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:33.595507    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:33.880629    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:35.599751    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:35.888926    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:36.166108    4904 proxier.go:968] Syncing Policies
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:05:36.168049    4904 proxier.go:945] syncProxyRules took 1.941ms
I0416 22:05:36.168049    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:05:37.612760    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:37.898683    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:39.621876    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:39.905630    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:41.629526    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:41.901039    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:43.641157    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:43.921816    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:45.649603    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:45.931281    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:47.658993    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:47.939208    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:49.670913    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:49.947697    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:51.678096    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:51.967843    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:53.690525    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:53.974594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:55.706550    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:55.983441    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:57.708850    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:57.991682    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:59.718453    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:05:59.998659    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:01.727848    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:01.999484    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:03.726380    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:04.021248    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:05.741862    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:06.025087    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:06.168633    4904 proxier.go:968] Syncing Policies
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:06.168787    4904 proxier.go:945] syncProxyRules took 153.4µs
I0416 22:06:06.168787    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:06:07.214896    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 22:06:07.756291    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:08.031348    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:09.751895    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:10.041158    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:11.771231    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:12.052879    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:13.780288    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:14.060519    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:15.791056    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:16.070620    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:17.799922    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:18.077570    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:19.808118    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:20.086236    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:21.817302    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:22.094003    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:23.825572    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:24.095554    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:25.833684    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:26.106925    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:27.852592    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:28.118372    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:29.862525    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:30.126012    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:31.870622    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:32.133007    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:33.879706    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:34.139608    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:35.887002    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:36.147622    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:36.170084    4904 proxier.go:968] Syncing Policies
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:06:36.170084    4904 proxier.go:945] syncProxyRules took 0s
I0416 22:06:36.170084    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:06:37.896009    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:38.155134    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:39.902184    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:40.161269    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:41.911877    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:42.170748    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:43.920940    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:44.179341    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:45.928579    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:46.186974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:47.937698    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:48.192950    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:49.944425    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:50.199840    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:51.951541    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:52.175178    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 471 items received
I0416 22:06:52.207177    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:53.960148    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:54.224231    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:55.972167    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:56.246095    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:57.979836    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:58.253690    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:06:59.987661    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:00.262579    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:01.996585    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:02.271261    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:04.003318    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:04.276870    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:06.012852    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:06.174022    4904 proxier.go:968] Syncing Policies
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:06.174206    4904 proxier.go:945] syncProxyRules took 184.2µs
I0416 22:07:06.174206    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:07:06.287304    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:08.019151    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:08.288133    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:10.028632    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:10.302577    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:12.025171    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:12.308598    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:14.050881    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:14.315912    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:16.056595    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:16.311908    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:18.053461    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:18.331820    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:20.074595    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:20.339627    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:22.085864    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:22.347110    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:24.095638    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:24.354972    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:26.104576    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:26.362614    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:28.113839    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:28.370823    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:30.124600    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:30.386340    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:32.135772    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:32.394082    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:34.144944    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:34.405202    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:36.148172    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:36.176010    4904 proxier.go:968] Syncing Policies
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:07:36.176010    4904 proxier.go:945] syncProxyRules took 0s
I0416 22:07:36.176010    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:07:36.412554    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:38.163144    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:38.422868    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:40.171808    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:40.431183    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:42.178638    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:42.438293    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:44.192536    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:44.447017    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:46.205624    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:46.453783    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:48.215553    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:48.456333    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:50.220866    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:50.465407    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:52.222554    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:52.476152    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:54.241255    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:54.483592    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:56.249108    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:56.491092    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:58.262594    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:07:58.498768    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:00.261942    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:00.506780    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:02.266399    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:02.503974    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:04.288277    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:04.514544    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:06.176532    4904 proxier.go:968] Syncing Policies
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:06.176532    4904 proxier.go:945] syncProxyRules took 0s
I0416 22:08:06.176532    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:08:06.297074    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:06.533653    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:08.305709    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:08.531845    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:10.316793    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:10.550376    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:12.326603    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:12.558107    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:14.339386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:14.564598    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:16.349520    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:16.572388    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:18.357020    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:18.595114    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:20.357474    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:20.604255    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:22.371881    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:22.609737    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:24.370343    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:24.611555    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:26.390003    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:26.626954    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:28.387587    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:28.633141    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:30.394742    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:30.642753    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:32.427280    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:32.650407    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:34.426176    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:34.658050    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:36.185075    4904 proxier.go:968] Syncing Policies
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:08:36.185075    4904 proxier.go:945] syncProxyRules took 248.3µs
I0416 22:08:36.185075    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:08:36.444582    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:36.667909    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:38.452480    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:38.676324    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:40.463283    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:40.683609    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:42.467144    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:42.690729    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:44.478132    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:44.710203    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:46.487312    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:46.722017    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:48.495094    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:48.730976    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:50.505981    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:50.737325    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:52.499124    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:52.744117    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:54.526552    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:54.751156    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:56.535197    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:56.759221    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:58.542386    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:08:58.766625    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:00.551225    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:00.773702    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:02.558189    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:02.782606    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:04.566349    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:04.774318    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:06.186820    4904 proxier.go:968] Syncing Policies
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:06.187201    4904 proxier.go:945] syncProxyRules took 380.5µs
I0416 22:09:06.187201    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:09:06.573141    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:06.795644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:08.581095    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:08.791072    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:10.589717    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:10.805648    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:12.598545    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:12.822034    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:14.606533    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:14.830428    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:16.614958    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:16.838393    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:18.621381    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:18.847465    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:20.618206    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:20.846882    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:22.638065    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:22.864952    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:24.648155    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:24.873786    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:26.657759    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:26.878174    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:28.665936    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:28.893229    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:30.678411    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:30.902969    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:32.690015    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:32.911581    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:34.703486    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:34.920467    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:36.198834    4904 proxier.go:968] Syncing Policies
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:36.198834    4904 proxier.go:945] syncProxyRules took 243.3µs
I0416 22:09:36.198834    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:09:36.717704    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:36.927610    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:38.723511    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:38.934406    4904 config.go:141] Calling handler.OnEndpointsUpdate
Log file created at: 2019/04/16 22:09:41
Running on machine: e2e-test-peterhornyack-windows-node-group-31ht
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
E0416 22:09:41.867507    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
E0416 22:09:41.867976    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname1. Not applying any policy
E0416 22:09:41.876761    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname1. Not applying any policy
E0416 22:09:41.876761    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
E0416 22:09:41.867507    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
E0416 22:09:41.867976    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname1. Not applying any policy
E0416 22:09:41.876761    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname1. Not applying any policy
E0416 22:09:41.876761    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
I0416 22:09:40.731330    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:40.941528    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:41.866557    4904 config.go:224] Calling handler.OnServiceAdd
I0416 22:09:41.866557    4904 proxier.go:332] Adding new service port "services-1982/multi-endpoint-test:portname2" at 10.0.51.65:81/TCP
I0416 22:09:41.866557    4904 proxier.go:332] Adding new service port "services-1982/multi-endpoint-test:portname1" at 10.0.51.65:80/TCP
I0416 22:09:41.866557    4904 proxier.go:968] Syncing Policies
I0416 22:09:41.866557    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.866557    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.866557    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.866557    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.866557    4904 proxier.go:1002] ====Applying Policy for services-1982/multi-endpoint-test:portname2====
I0416 22:09:41.867507    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1982/multi-endpoint-test:portname2]
E0416 22:09:41.867507    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
I0416 22:09:41.867976    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.867976    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.867976    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.867976    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.867976    4904 proxier.go:1002] ====Applying Policy for services-1982/multi-endpoint-test:portname1====
I0416 22:09:41.867976    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1982/multi-endpoint-test:portname1]
E0416 22:09:41.867976    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname1. Not applying any policy
I0416 22:09:41.867976    4904 proxier.go:945] syncProxyRules took 1.4188ms
I0416 22:09:41.867976    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:09:41.876761    4904 config.go:124] Calling handler.OnEndpointsAdd
I0416 22:09:41.876761    4904 proxier.go:968] Syncing Policies
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:1002] ====Applying Policy for services-1982/multi-endpoint-test:portname1====
I0416 22:09:41.876761    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1982/multi-endpoint-test:portname1]
E0416 22:09:41.876761    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname1. Not applying any policy
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:1002] ====Applying Policy for services-1982/multi-endpoint-test:portname2====
I0416 22:09:41.876761    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1982/multi-endpoint-test:portname2]
E0416 22:09:41.876761    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:41.876761    4904 proxier.go:945] syncProxyRules took 0s
I0416 22:09:41.876761    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:09:42.739968    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:42.948954    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:44.748170    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:44.957139    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:46.759658    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:46.970583    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:48.763644    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:48.971517    4904 config.go:141] Calling handler.OnEndpointsUpdate
E0416 22:09:50.916559    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
E0416 22:09:50.916559    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
I0416 22:09:50.771558    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:50.915996    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:50.915996    4904 proxier.go:907] Setting endpoints for "services-1982/multi-endpoint-test:portname1" to [0xc000581800]
I0416 22:09:50.915996    4904 proxier.go:968] Syncing Policies
I0416 22:09:50.915996    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.81.173,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "d3dfc7ea-863a-4cbf-a0c1-858882683082",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.915996    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbe60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acb091c5-8dd6-49f1-8d89-48b5a5ed0e78",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.915996    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e900)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "23fa3d56-4609-4c63-b12a-d55d36bdccdb",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.916559    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031ea20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.199.161,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30668,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "4d16afe9-ac8d-49d8-bf6c-a36bbccc69d0",
 nodePorthnsID: (string) (len=36) "7aef54ad-01c8-4307-a961-1d885a328ced",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.916559    4904 proxier.go:1002] ====Applying Policy for services-1982/multi-endpoint-test:portname2====
I0416 22:09:50.916559    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1982/multi-endpoint-test:portname2]
E0416 22:09:50.916559    4904 proxier.go:1103] Endpoint information not available for service services-1982/multi-endpoint-test:portname2. Not applying any policy
I0416 22:09:50.916559    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bb9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.7.121,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f1d95529-ff5d-4359-bde7-b53b846003dd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.916559    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.153.141,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "423e9baa-d5d0-4fa3-91f9-cf12692d6dcc",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.916559    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0000bbd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "326b13be-1e1d-4766-9430-2f73d404e633",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.916559    4904 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00031e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "09132c34-7a43-42d3-8cad-df9b49e0df7e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.916559    4904 proxier.go:1002] ====Applying Policy for services-1982/multi-endpoint-test:portname1====
I0416 22:09:50.920955    4904 proxier.go:137] Hns Endpoint resource, {}
I0416 22:09:50.920955    4904 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000581800)({
 ip: (string) (len=9) "10.64.1.6",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-06",
 hnsID: (string) (len=36) "b35e5601-825b-42dc-abab-b0ad769185c0",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.920955    4904 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.1.6",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-B6-AE-C6",
  hnsID: (string) (len=36) "b35e5601-825b-42dc-abab-b0ad769185c0",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-1982/multi-endpoint-test:portname1]
I0416 22:09:50.920955    4904 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0003e99e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.51.65,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:09:50.979462    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:52.779984    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:52.986206    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:54.788308    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:55.021209    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:56.796813    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:56.986836    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:58.807040    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:09:59.009666    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:00.822790    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:01.022528    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:02.830168    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:03.031120    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.440838    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 22:10:04.441036    4904 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0005645a0]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc000564600]
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "services-1982/multi-endpoint-test:portname1" to [0xc0005646c0]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "services-1982/multi-endpoint-test:portname1" to [0xc000564720]
I0416 22:10:04.441036    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 22:10:04.441036    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 22:10:04.441036    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 22:10:04.441036    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 22:10:04.441036    4904 config.go:241] Calling handler.OnServiceUpdate
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0005647e0]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000564840]
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc000564960]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0005649c0]
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc000564a80]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc000564ae0]
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000564ba0 0xc000564c00]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000564c60 0xc000564cc0]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000564d20 0xc000564d80]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000564de0 0xc000564e40]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000564ea0 0xc000564f00]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000564f60 0xc000564fc0]
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc000565080]
I0416 22:10:04.441036    4904 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0005650e0]
I0416 22:10:04.441036    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:04.839166    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:05.058030    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:05.719085    4904 proxier.go:137] Hns loadbalancer policy resource, {"ID":"0d4ed259-985c-4bb7-8ea0-e54f5c996a53","HostComputeEndpoints":["b35e5601-825b-42dc-abab-b0ad769185c0"],"FrontendVIPs":["10.0.51.65"],"PortMappings":[{"Protocol":6,"InternalPort":100,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 22:10:05.719085    4904 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.51.65, Id [0d4ed259-985c-4bb7-8ea0-e54f5c996a53]
I0416 22:10:05.719085    4904 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0003e99e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.51.65,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "0d4ed259-985c-4bb7-8ea0-e54f5c996a53",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:10:05.719085    4904 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-1982/multi-endpoint-test"
I0416 22:10:05.719085    4904 proxier.go:945] syncProxyRules took 14.803026s
I0416 22:10:05.719085    4904 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 22:10:06.846478    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:07.053575    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:08.885326    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:09.073803    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:10.242674    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:10.242674    4904 proxier.go:907] Setting endpoints for "services-1982/multi-endpoint-test:portname1" to [0xc000310780]
I0416 22:10:10.242674    4904 proxier.go:907] Setting endpoints for "services-1982/multi-endpoint-test:portname2" to [0xc0003107e0]
I0416 22:10:10.242674    4904 proxier.go:907] Setting endpoints for "services-1982/multi-endpoint-test:portname1" to [0xc000310840]
I0416 22:10:10.242674    4904 proxier.go:394] Service [&{[0 0 0 0 0 0 0 0 0 0 255 255 10 0 51 65] 80 TCP 0 100 {[]} None 10800 [] [] [] false 0 0d4ed259-985c-4bb7-8ea0-e54f5c996a53  true <nil> {}}] is stale
I0416 22:10:10.242674    4904 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc0003e99e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.51.65,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "0d4ed259-985c-4bb7-8ea0-e54f5c996a53",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 22:10:10.861237    4904 config.go:141] Calling handler.OnEndpointsUpdate
I0416 22:10:11.369314    4904 config.go:260] Calling handler.OnServiceDelete
I0416 22:15:03.117848    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 495 items received
I0416 22:15:37.148311    4904 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 2 items received
