Log file created at: 2019/04/16 23:09:28
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
Log file created at: 2019/04/16 23:09:28
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
Log file created at: 2019/04/16 23:09:31
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
E0416 23:09:31.224516    4840 proxier.go:190] Endpoint deletion failed for 10.64.2.4: Endpoint Name  not found
E0416 23:09:31.251463    4840 proxier.go:190] Endpoint deletion failed for 10.64.2.4: Endpoint Name  not found
W0416 23:09:28.640853    4840 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
E0416 23:09:31.224516    4840 proxier.go:190] Endpoint deletion failed for 10.64.2.4: Endpoint Name  not found
E0416 23:09:31.251463    4840 proxier.go:190] Endpoint deletion failed for 10.64.2.4: Endpoint Name  not found
I0416 23:09:28.638869    4840 flags.go:33] FLAG: --alsologtostderr="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --bind-address="0.0.0.0"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --cleanup="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --cleanup-iptables="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --cleanup-ipvs="true"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --cluster-cidr="10.64.0.0/14"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --config=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --config-sync-period="15m0s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --conntrack-max="0"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --conntrack-min="131072"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --enable-dsr="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --feature-gates=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --healthz-port="10256"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --help="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --hostname-override=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --iptables-sync-period="30s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --ipvs-scheduler=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --ipvs-strict-arp="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --ipvs-sync-period="30s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --kube-api-burst="10"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --kube-api-qps="5"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --kubeconfig="C:\\etc\\kubernetes\\kubeproxy.kubeconfig"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --log-backtrace-at=":0"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --log-dir=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --log-file="C:\\etc\\kubernetes\\logs\\kube-proxy.log"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --log-flush-frequency="5s"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --logtostderr="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --masquerade-all="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --master=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --metrics-port="10249"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --network-name=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --nodeport-addresses="[]"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --oom-score-adj="-999"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --profiling="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --proxy-mode="kernelspace"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --proxy-port-range=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --resource-container=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --skip-headers="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --source-vip=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --stderrthreshold="2"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --udp-timeout="250ms"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --v="4"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --version="false"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --vmodule=""
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --windows-service="true"
I0416 23:09:28.639853    4840 flags.go:33] FLAG: --write-config-to=""
I0416 23:09:28.640853    4840 service.go:62] Running kube-proxy as a Windows service!
W0416 23:09:28.640853    4840 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0416 23:09:28.641842    4840 feature_gate.go:226] feature gates: &{map[]}
I0416 23:09:28.657449    4840 service.go:72] Service running
I0416 23:09:28.662325    4840 server_windows.go:102] Using Kernelspace Proxier.
I0416 23:09:28.681864    4840 proxier.go:522] network-name flag not set. Checking environment variable
I0416 23:09:28.691624    4840 proxier.go:534] Hns Network loaded with info = &{l2bridge 4ce1cf2d-afe8-44b9-9a29-afde3183c158 L2Bridge []}
I0416 23:09:28.695568    4840 proxier.go:611] minSyncPeriod: 0s, syncPeriod: 30s, burstSyncs: 2
I0416 23:09:28.695568    4840 server.go:557] Version: v1.15.0-alpha.0.1887+bae0630ef897d6-dirty
I0416 23:09:28.695568    4840 server.go:574] setting OOM scores is unsupported in this build
I0416 23:09:28.695568    4840 healthcheck.go:309] Starting goroutine for healthz on 0.0.0.0:10256
I0416 23:09:28.697473    4840 bounded_frequency_runner.go:170] sync-runner Loop running
I0416 23:09:28.698465    4840 config.go:102] Starting endpoints config controller
I0416 23:09:28.698465    4840 controller_utils.go:1028] Waiting for caches to sync for endpoints config controller
I0416 23:09:28.698465    4840 config.go:202] Starting service config controller
I0416 23:09:28.698465    4840 controller_utils.go:1028] Waiting for caches to sync for service config controller
I0416 23:09:28.699434    4840 reflector.go:128] Starting reflector *v1.Endpoints (15m0s) from k8s.io/client-go/informers/factory.go:133
I0416 23:09:28.699434    4840 reflector.go:128] Starting reflector *v1.Service (15m0s) from k8s.io/client-go/informers/factory.go:133
I0416 23:09:28.700396    4840 reflector.go:166] Listing and watching *v1.Endpoints from k8s.io/client-go/informers/factory.go:133
I0416 23:09:28.700396    4840 reflector.go:166] Listing and watching *v1.Service from k8s.io/client-go/informers/factory.go:133
I0416 23:09:28.704296    4840 config.go:224] Calling handler.OnServiceAdd
I0416 23:09:28.704296    4840 config.go:224] Calling handler.OnServiceAdd
I0416 23:09:28.704296    4840 config.go:224] Calling handler.OnServiceAdd
I0416 23:09:28.704296    4840 config.go:224] Calling handler.OnServiceAdd
I0416 23:09:28.704296    4840 config.go:224] Calling handler.OnServiceAdd
I0416 23:09:28.704296    4840 config.go:224] Calling handler.OnServiceAdd
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0002da6c0]
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc0002da720]
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0002da780]
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0002da7e0]
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0002da840]
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0002da8a0]
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0002da900]
I0416 23:09:28.711190    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:09:28.711190    4840 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0002da960]
I0416 23:09:28.799016    4840 shared_informer.go:123] caches populated
I0416 23:09:28.799016    4840 controller_utils.go:1035] Caches are synced for endpoints config controller
I0416 23:09:28.799016    4840 config.go:110] Calling handler.OnEndpointsSynced()
I0416 23:09:28.799016    4840 proxier.go:949] Not syncing hns until Services and Endpoints have been received from master
I0416 23:09:28.799016    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:09:28.800993    4840 shared_informer.go:123] caches populated
I0416 23:09:28.800993    4840 controller_utils.go:1035] Caches are synced for service config controller
I0416 23:09:28.800993    4840 config.go:210] Calling handler.OnServiceSynced()
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "kube-system/default-http-backend:http" at 10.0.209.152:80/TCP
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "kube-system/heapster:" at 10.0.192.96:80/TCP
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "kube-system/kubernetes-dashboard:" at 10.0.145.160:443/TCP
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "kube-system/metrics-server:" at 10.0.226.182:443/TCP
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "default/kubernetes:https" at 10.0.0.1:443/TCP
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "kube-system/kube-dns:dns" at 10.0.0.10:53/UDP
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.0.0.10:53/TCP
I0416 23:09:28.800993    4840 proxier.go:332] Adding new service port "kube-system/kube-dns:metrics" at 10.0.0.10:9153/TCP
I0416 23:09:28.800993    4840 proxier.go:968] Syncing Policies
I0416 23:09:28.800993    4840 proxier.go:1002] ====Applying Policy for kube-system/default-http-backend:http====
I0416 23:09:28.822479    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:28.822479    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da960)({
 ip: (string) (len=9) "10.64.2.9",
 port: (uint16) 8080,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-09",
 hnsID: (string) (len=36) "e163d3c0-62f0-4a4a-8017-bbe8623ab1e2",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.822479    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.9",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-09",
  hnsID: (string) (len=36) "e163d3c0-62f0-4a4a-8017-bbe8623ab1e2",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/default-http-backend:http]
I0416 23:09:28.822479    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.853733    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"be50a826-4dd9-4b06-ba4f-3321d9ee55d3","HostComputeEndpoints":["e163d3c0-62f0-4a4a-8017-bbe8623ab1e2"],"FrontendVIPs":["10.0.209.152"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:28.853733    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.209.152, Id [be50a826-4dd9-4b06-ba4f-3321d9ee55d3]
I0416 23:09:28.884968    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0","HostComputeEndpoints":["e163d3c0-62f0-4a4a-8017-bbe8623ab1e2"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":30657}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:28.884968    4840 proxier.go:1149] Hns LoadBalancer resource created for nodePort resources 10.0.209.152, Id [8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0]
I0416 23:09:28.884968    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.884968    4840 proxier.go:1002] ====Applying Policy for kube-system/heapster:====
I0416 23:09:28.899617    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:28.899617    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da6c0)({
 ip: (string) (len=10) "10.64.2.11",
 port: (uint16) 8082,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0b",
 hnsID: (string) (len=36) "5f2e39c3-39ca-4bc5-b248-192acac1cd4d",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.899617    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.11",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0b",
  hnsID: (string) (len=36) "5f2e39c3-39ca-4bc5-b248-192acac1cd4d",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/heapster:]
I0416 23:09:28.899617    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.909376    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"acf0ffec-b2d5-40fc-80c2-b208c95d60f7","HostComputeEndpoints":["5f2e39c3-39ca-4bc5-b248-192acac1cd4d"],"FrontendVIPs":["10.0.192.96"],"PortMappings":[{"Protocol":6,"InternalPort":8082,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:28.909376    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.192.96, Id [acf0ffec-b2d5-40fc-80c2-b208c95d60f7]
I0416 23:09:28.909376    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.909376    4840 proxier.go:1002] ====Applying Policy for kube-system/kubernetes-dashboard:====
I0416 23:09:28.921097    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:28.921097    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da720)({
 ip: (string) (len=9) "10.64.2.3",
 port: (uint16) 8443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-03",
 hnsID: (string) (len=36) "a6195f0a-dd5a-4b16-a772-be687e082d72",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.921097    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.3",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-03",
  hnsID: (string) (len=36) "a6195f0a-dd5a-4b16-a772-be687e082d72",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kubernetes-dashboard:]
I0416 23:09:28.921097    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.943562    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0","HostComputeEndpoints":["a6195f0a-dd5a-4b16-a772-be687e082d72"],"FrontendVIPs":["10.0.145.160"],"PortMappings":[{"Protocol":6,"InternalPort":8443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:28.943562    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.145.160, Id [57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0]
I0416 23:09:28.943562    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.943562    4840 proxier.go:1002] ====Applying Policy for kube-system/metrics-server:====
I0416 23:09:28.963063    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:28.963063    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da780)({
 ip: (string) (len=10) "10.64.2.10",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0a",
 hnsID: (string) (len=36) "d6c20383-c64b-42d4-b070-d0ab27133a6a",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.963063    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.10",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0a",
  hnsID: (string) (len=36) "d6c20383-c64b-42d4-b070-d0ab27133a6a",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/metrics-server:]
I0416 23:09:28.963063    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.987530    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"abce9065-efc0-480b-871a-4ceef34184be","HostComputeEndpoints":["d6c20383-c64b-42d4-b070-d0ab27133a6a"],"FrontendVIPs":["10.0.226.182"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:28.987530    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.226.182, Id [abce9065-efc0-480b-871a-4ceef34184be]
I0416 23:09:28.987530    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:28.987530    4840 proxier.go:1002] ====Applying Policy for default/kubernetes:https====
I0416 23:09:29.001141    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:29.001141    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da7e0)({
 ip: (string) (len=12) "35.239.61.98",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-23-ef-3d-62",
 hnsID: (string) (len=36) "ec0c9e00-003b-4f4c-bbc5-df5408bff02a",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.001141    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=12) "35.239.61.98",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-23-ef-3d-62",
  hnsID: (string) (len=36) "ec0c9e00-003b-4f4c-bbc5-df5408bff02a",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [default/kubernetes:https]
I0416 23:09:29.002130    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.021253    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"76179463-c4be-49f6-ba6b-83fd0ffadea7","HostComputeEndpoints":["ec0c9e00-003b-4f4c-bbc5-df5408bff02a"],"FrontendVIPs":["10.0.0.1"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:29.021253    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.1, Id [76179463-c4be-49f6-ba6b-83fd0ffadea7]
I0416 23:09:29.021253    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.021253    4840 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns====
I0416 23:09:29.043755    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:29.043755    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da840)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.043755    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns]
I0416 23:09:29.043755    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.080758    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"234c8d11-89e7-45bb-9cec-de1d541b2c46","HostComputeEndpoints":["b27c630d-12b6-4824-80a6-7254a551e482"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":17,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:29.080758    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [234c8d11-89e7-45bb-9cec-de1d541b2c46]
I0416 23:09:29.080758    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "234c8d11-89e7-45bb-9cec-de1d541b2c46",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.080758    4840 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns-tcp====
I0416 23:09:29.095376    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:29.095376    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da8a0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.095376    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns-tcp]
I0416 23:09:29.095376    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.117863    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"231555f0-3d53-4e5f-a036-5ad05ac74eff","HostComputeEndpoints":["b27c630d-12b6-4824-80a6-7254a551e482"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:29.117863    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [231555f0-3d53-4e5f-a036-5ad05ac74eff]
I0416 23:09:29.117863    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "231555f0-3d53-4e5f-a036-5ad05ac74eff",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.117863    4840 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:metrics====
I0416 23:09:29.120827    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:29.120827    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002da900)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.120827    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:metrics]
I0416 23:09:29.120827    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.138139    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"17e0c116-37d1-4fb7-8f77-fd2cd51d69a7","HostComputeEndpoints":["b27c630d-12b6-4824-80a6-7254a551e482"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":9153,"ExternalPort":9153}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:29.138139    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [17e0c116-37d1-4fb7-8f77-fd2cd51d69a7]
I0416 23:09:29.138139    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "17e0c116-37d1-4fb7-8f77-fd2cd51d69a7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:29.138139    4840 proxier.go:945] syncProxyRules took 337.146ms
I0416 23:09:29.617451    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:29.785443    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:29.785443    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000492480]
I0416 23:09:29.785443    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0004924e0]
I0416 23:09:29.785443    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000492540]
I0416 23:09:29.785443    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000492a80]
I0416 23:09:29.785443    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000492ae0]
I0416 23:09:29.785443    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000492b40]
I0416 23:09:30.365032    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:31.139864    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:31.139864    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0005ca7e0]
I0416 23:09:31.139864    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0005cb320]
I0416 23:09:31.139864    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0005cb380]
I0416 23:09:31.139864    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0005cb3e0 0xc0005cb440]
I0416 23:09:31.139864    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0005cb4a0 0xc0005cb500]
I0416 23:09:31.139864    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0005cb560 0xc0005cb5c0]
I0416 23:09:31.139864    4840 proxier.go:394] Service [&{[0 0 0 0 0 0 0 0 0 0 255 255 10 0 0 10] 53 UDP 0 53 {[]} None 10800 [] [] [] false 0 234c8d11-89e7-45bb-9cec-de1d541b2c46  true <nil> {}}] is stale
I0416 23:09:31.139864    4840 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "234c8d11-89e7-45bb-9cec-de1d541b2c46",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.180200    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0002da840)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.180200    4840 proxier.go:185] Removing endpoints for &{10.64.2.4 53 false 02-11-0a-40-02-04 b27c630d-12b6-4824-80a6-7254a551e482 0  {}}, since no one is referencing it
I0416 23:09:31.189951    4840 hnsV2.go:168] Remote endpoint resource deleted id b27c630d-12b6-4824-80a6-7254a551e482
I0416 23:09:31.189951    4840 proxier.go:394] Service [&{[0 0 0 0 0 0 0 0 0 0 255 255 10 0 0 10] 53 TCP 0 53 {[]} None 10800 [] [] [] false 0 231555f0-3d53-4e5f-a036-5ad05ac74eff  true <nil> {}}] is stale
I0416 23:09:31.189951    4840 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "231555f0-3d53-4e5f-a036-5ad05ac74eff",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.224516    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0002da8a0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.224516    4840 proxier.go:185] Removing endpoints for &{10.64.2.4 53 false 02-11-0a-40-02-04 b27c630d-12b6-4824-80a6-7254a551e482 0  {}}, since no one is referencing it
E0416 23:09:31.224516    4840 proxier.go:190] Endpoint deletion failed for 10.64.2.4: Endpoint Name  not found
I0416 23:09:31.227540    4840 proxier.go:394] Service [&{[0 0 0 0 0 0 0 0 0 0 255 255 10 0 0 10] 9153 TCP 0 9153 {[]} None 10800 [] [] [] false 0 17e0c116-37d1-4fb7-8f77-fd2cd51d69a7  true <nil> {}}] is stale
I0416 23:09:31.227540    4840 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "17e0c116-37d1-4fb7-8f77-fd2cd51d69a7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.251463    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0002da900)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b27c630d-12b6-4824-80a6-7254a551e482",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.251463    4840 proxier.go:185] Removing endpoints for &{10.64.2.4 9153 false 02-11-0a-40-02-04 b27c630d-12b6-4824-80a6-7254a551e482 0  {}}, since no one is referencing it
E0416 23:09:31.251463    4840 proxier.go:190] Endpoint deletion failed for 10.64.2.4: Endpoint Name  not found
I0416 23:09:31.251463    4840 proxier.go:968] Syncing Policies
I0416 23:09:31.251463    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.251463    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.251463    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.251463    4840 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns====
I0416 23:09:31.270012    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:31.270012    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005cb3e0)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "a069d412-b5bc-4e90-801e-37276aa3d8cc",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.292081    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:31.292081    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005cb440)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.292081    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "a069d412-b5bc-4e90-801e-37276aa3d8cc",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns]
I0416 23:09:31.292081    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.300354    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"f7c78a97-c1f7-4e57-8dac-d265137c15c8","HostComputeEndpoints":["a069d412-b5bc-4e90-801e-37276aa3d8cc","2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":17,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:31.300354    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [f7c78a97-c1f7-4e57-8dac-d265137c15c8]
I0416 23:09:31.300354    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.300354    4840 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns-tcp====
I0416 23:09:31.303224    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:31.303224    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005cb4a0)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "a069d412-b5bc-4e90-801e-37276aa3d8cc",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.305181    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:31.305181    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005cb500)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.305181    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "a069d412-b5bc-4e90-801e-37276aa3d8cc",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns-tcp]
I0416 23:09:31.305181    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.321609    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"2fbf5e69-0599-49bd-b9fd-98b90fbd24a4","HostComputeEndpoints":["a069d412-b5bc-4e90-801e-37276aa3d8cc","2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:31.321609    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [2fbf5e69-0599-49bd-b9fd-98b90fbd24a4]
I0416 23:09:31.321609    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.321609    4840 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:metrics====
I0416 23:09:31.323740    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:31.323740    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005cb560)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "a069d412-b5bc-4e90-801e-37276aa3d8cc",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.325681    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:09:31.325681    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005cb5c0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.325681    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "a069d412-b5bc-4e90-801e-37276aa3d8cc",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:metrics]
I0416 23:09:31.325681    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.351305    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"886870bb-82ee-433a-bf7e-29f36bf6932f","HostComputeEndpoints":["a069d412-b5bc-4e90-801e-37276aa3d8cc","2ef63e7d-a9f3-4536-9f58-53a9a5cba0ee"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":9153,"ExternalPort":9153}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:09:31.351305    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [886870bb-82ee-433a-bf7e-29f36bf6932f]
I0416 23:09:31.351305    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.351305    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.351305    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:09:31.351305    4840 proxier.go:945] syncProxyRules took 211.441ms
I0416 23:09:31.351305    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:09:31.629498    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:32.376157    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:33.654608    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:34.384127    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:35.668091    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:36.393147    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:37.682845    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:38.399937    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:39.689796    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:40.411801    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:41.704162    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:42.423330    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:43.715825    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:44.432037    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:45.722880    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:46.439337    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:47.732558    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:48.447215    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:49.742569    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:50.456443    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:51.752313    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:52.464974    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:53.761435    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:54.472411    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:55.771373    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:56.480425    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:57.781282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:58.488656    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:09:59.793063    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:00.504518    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:01.361821    4840 proxier.go:968] Syncing Policies
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:01.361821    4840 proxier.go:945] syncProxyRules took 145µs
I0416 23:10:01.361821    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:10:01.800402    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:02.513226    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:03.809970    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:04.519990    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:05.818340    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:06.528994    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:07.828714    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:08.536277    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:09.838630    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:10.546170    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:11.846877    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:12.552165    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:13.857430    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:14.572145    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:15.869319    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:16.579711    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:17.879267    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:18.587669    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:19.890619    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:20.595173    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:21.906012    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:22.605376    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:23.911884    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:24.614128    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:25.922963    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:26.623517    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:27.930096    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:28.637070    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:29.941804    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:30.645528    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:31.362419    4840 proxier.go:968] Syncing Policies
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:10:31.362419    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:10:31.362419    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:10:31.952005    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:32.653501    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:33.960834    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:34.648405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:35.960679    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:36.669099    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:37.980124    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:38.676751    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:39.991079    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:40.686822    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:41.991865    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:42.695042    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:44.009618    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:44.705023    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:46.018889    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:46.713699    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:48.029603    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:48.722769    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:50.037145    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:50.730276    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:52.050001    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:52.739470    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:54.045117    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:54.748221    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:56.066967    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:56.756014    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:58.077660    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:10:58.763855    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:00.086809    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:00.774955    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:01.376920    4840 proxier.go:968] Syncing Policies
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:01.377075    4840 proxier.go:945] syncProxyRules took 154.9µs
I0416 23:11:01.377075    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:11:02.095195    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:02.783165    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:04.090063    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:04.790675    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:06.112062    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:06.802293    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:08.123037    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:08.810187    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:10.131840    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:10.820724    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:12.141270    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:12.827826    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:14.151671    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:14.836994    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:16.156851    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:16.843315    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:18.167302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:18.855841    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:20.176231    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:20.862327    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:22.186231    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:22.871614    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:24.194051    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:24.881685    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:26.202957    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:26.891215    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:28.197829    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:28.899381    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:30.204483    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:30.908526    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:31.389939    4840 proxier.go:968] Syncing Policies
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:11:31.390059    4840 proxier.go:945] syncProxyRules took 120.1µs
I0416 23:11:31.390059    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:11:32.226894    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:32.916941    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:34.235457    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:34.927207    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:36.254457    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:36.935331    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:38.262007    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:38.944409    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:40.272582    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:40.956726    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:42.273713    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:42.966627    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:44.317492    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:44.979332    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:46.328670    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:46.987460    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:48.338429    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:48.995290    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:50.348997    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:51.004058    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:52.358809    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:53.012960    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:54.356744    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:55.021241    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:56.379419    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:57.051613    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:58.391490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:11:59.059368    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:00.406282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:01.067348    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:01.390217    4840 proxier.go:968] Syncing Policies
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:01.390422    4840 proxier.go:945] syncProxyRules took 204.7µs
I0416 23:12:01.390422    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:12:02.416793    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:03.075541    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:04.424942    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:05.097412    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:06.434935    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:07.105100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:08.443027    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:09.115136    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:10.451074    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:11.128150    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:12.462338    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:13.137313    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:14.470246    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:15.147096    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:16.485650    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:17.154845    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:18.496356    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:19.162490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:20.505575    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:21.171171    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:22.514200    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:23.179116    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:24.521008    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:25.187643    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:26.530770    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:27.194837    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:28.539703    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:29.204080    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:30.542493    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:31.212761    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:31.404449    4840 proxier.go:968] Syncing Policies
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:12:31.404449    4840 proxier.go:945] syncProxyRules took 189.6µs
I0416 23:12:31.404449    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:12:32.556321    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:33.221772    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:34.562171    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:35.228106    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:36.571725    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:37.240602    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:38.578770    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:39.251659    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:40.587050    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:41.261300    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:42.595610    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:43.269861    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:44.604740    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:45.279591    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:46.615045    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:47.288196    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:48.625849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:49.297179    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:50.645517    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:51.305366    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:52.653001    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:53.313926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:54.662440    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:55.321219    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:56.670905    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:57.329903    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:58.680171    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:12:59.337802    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:00.691429    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:01.346698    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:01.405526    4840 proxier.go:968] Syncing Policies
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:01.405526    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:13:01.405526    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:13:02.699523    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:03.355644    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:04.709177    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:05.365114    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:06.716392    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:07.373539    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:08.725928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:09.381369    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:10.734504    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:11.389254    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:12.744276    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:13.402013    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:14.751662    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:15.401353    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:16.760835    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:17.423914    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:18.767821    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:19.435704    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:20.777657    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:21.443289    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:22.786835    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:23.453274    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:24.796789    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:25.461387    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:26.807437    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:27.478017    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:28.817263    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:29.486367    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:30.826179    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:31.410768    4840 proxier.go:968] Syncing Policies
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:13:31.411049    4840 proxier.go:945] syncProxyRules took 281.1µs
I0416 23:13:31.411049    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:13:31.493032    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:32.837109    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:33.501049    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:34.846811    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:35.509756    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:36.857690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:37.529974    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:38.866004    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:39.539620    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:40.876131    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:41.547995    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:42.885765    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:43.560263    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:44.897819    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:45.570045    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:46.911048    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:47.576308    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:48.924790    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:49.585341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:50.939058    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:51.593327    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:52.947893    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:53.604054    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:54.971355    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:55.613544    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:56.978841    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:57.612239    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:58.985943    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:13:59.641295    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:00.994309    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:01.411059    4840 proxier.go:968] Syncing Policies
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:01.411059    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:14:01.411059    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:14:01.658030    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:03.004249    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:03.676925    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:05.012652    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:05.687832    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:07.024490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:07.695256    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:09.024790    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:09.702575    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:11.042987    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:11.695287    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:13.053367    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:13.718687    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:15.062186    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:15.726986    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:15.739544    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:15.739544    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0000b03c0 0xc0000b0420]
I0416 23:14:15.739544    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0000b0480 0xc0000b04e0]
I0416 23:14:15.739544    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0000b0540 0xc0000b05a0]
I0416 23:14:15.739544    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0000b07e0 0xc0000b0c60]
I0416 23:14:15.739544    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0000b0d20 0xc0000b0d80]
I0416 23:14:15.739544    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0000b0de0 0xc0000b0e40]
I0416 23:14:17.069581    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:17.726506    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:19.078012    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:19.746701    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:21.087521    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:21.757235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:23.096636    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:23.764658    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:25.104085    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:25.772408    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:27.112821    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:27.780979    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:29.122731    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:29.790710    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:31.129417    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:31.416390    4840 proxier.go:968] Syncing Policies
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:14:31.416390    4840 proxier.go:945] syncProxyRules took 170.1µs
I0416 23:14:31.416390    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:14:31.803509    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:33.138408    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:33.811821    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:35.139133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:35.820055    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:37.156438    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:37.830448    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:39.165041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:39.840497    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:41.173362    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:41.849672    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:42.685755    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 23:14:43.184301    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:43.844850    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:45.192174    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:45.866144    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:47.202691    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:47.886648    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:49.212394    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:49.894919    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:51.219817    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:51.903746    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:53.228553    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:53.911825    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:55.236690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:55.921682    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:57.244699    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:57.932450    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:59.253151    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:14:59.945935    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:01.262197    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:01.421922    4840 proxier.go:968] Syncing Policies
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:01.422095    4840 proxier.go:945] syncProxyRules took 173.1µs
I0416 23:15:01.422095    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:15:01.943835    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:03.272254    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:03.969569    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:05.279826    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:05.977808    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:07.291359    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:07.985871    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:09.299614    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:09.995500    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:11.306977    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:12.003863    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:13.306157    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:14.012103    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:15.322719    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:16.019824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:17.334584    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:18.030094    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:19.341246    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:20.038453    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:21.349910    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:22.047579    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:23.358706    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:24.057224    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:25.366856    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:26.064281    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:27.376471    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:28.076331    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:29.388681    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:30.085707    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:31.396490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:31.422343    4840 proxier.go:968] Syncing Policies
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:15:31.422343    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:15:31.422343    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:15:32.093065    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:33.405962    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:34.101218    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:35.413856    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:36.110303    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:37.423225    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:38.119854    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:39.434690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:40.128011    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:41.444195    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:42.125430    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:43.453564    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:44.144236    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:45.461036    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:46.155867    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:47.469492    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:48.155621    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:49.477775    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:50.172252    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:51.487874    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:52.181801    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:53.497740    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:54.188809    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:55.504724    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:56.197614    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:57.526775    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:58.207289    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:15:59.536262    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:00.216461    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:01.424690    4840 proxier.go:968] Syncing Policies
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:01.424690    4840 proxier.go:945] syncProxyRules took 165.8µs
I0416 23:16:01.424690    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:16:01.542982    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:02.225850    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:03.555274    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:04.232833    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:05.564407    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:06.244331    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:07.572868    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:08.252256    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:09.583332    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:10.263343    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:11.591303    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:12.272388    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:13.599528    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:14.278906    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:15.594640    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:16.289277    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:17.636823    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:18.298709    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:19.658325    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:20.315442    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:21.665895    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:22.323326    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:23.673687    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:24.331361    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:25.683795    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:26.332958    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:27.701849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:28.346944    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:29.712812    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:30.356921    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:31.438695    4840 proxier.go:968] Syncing Policies
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:16:31.438695    4840 proxier.go:945] syncProxyRules took 203.3µs
I0416 23:16:31.438695    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:16:31.721577    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:32.352969    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:33.735494    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:34.376906    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:35.749690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:36.390484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:37.761249    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:38.400302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:39.770005    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:40.408693    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:41.779853    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:42.418747    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:43.788423    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:44.426534    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:45.798267    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:46.435818    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:47.808154    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:48.442387    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:49.817744    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:50.453754    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:51.825891    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:52.459976    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:53.839533    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:54.469627    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:55.850952    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:56.477421    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:57.862251    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:58.488042    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:16:59.870450    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:00.495575    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:01.451136    4840 proxier.go:968] Syncing Policies
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:01.451136    4840 proxier.go:945] syncProxyRules took 137µs
I0416 23:17:01.451136    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:17:01.880191    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:02.501715    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:03.888319    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:04.512877    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:05.896925    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:06.517436    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:07.906560    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:08.519257    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:09.916100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:10.534976    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:11.919432    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:12.543520    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:13.933797    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:14.550232    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:15.943457    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:16.558951    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:17.954894    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:18.566033    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:19.968850    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:20.574359    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:21.978286    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:22.580006    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:23.988099    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:24.584273    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:25.995797    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:26.603192    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:27.998994    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:28.612136    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:30.017920    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:30.621159    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:31.457208    4840 proxier.go:968] Syncing Policies
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:17:31.457342    4840 proxier.go:945] syncProxyRules took 133.9µs
I0416 23:17:31.457342    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:17:32.027559    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:32.628966    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:34.037488    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:34.637232    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:36.045889    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:36.644725    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:38.055971    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:38.653047    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:40.064102    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:40.661731    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:42.073464    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:42.670331    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:44.080245    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:44.669554    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:46.087554    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:46.696253    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:48.092912    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:48.707277    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:50.105100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:50.705110    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:52.115202    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:52.721197    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:54.124164    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:54.729809    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:56.132375    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:56.745188    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:58.131157    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:17:58.754556    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:00.150838    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:00.763363    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:01.470348    4840 proxier.go:968] Syncing Policies
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:01.470348    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:18:01.470348    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:18:02.158147    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:02.769372    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:04.170235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:04.780192    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:06.178939    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:06.787276    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:08.183481    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:08.793539    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:10.196784    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:10.792171    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:12.205014    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:12.811411    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:14.212449    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:14.810972    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:16.205731    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:16.829016    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:18.228320    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:18.835860    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:20.236365    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:20.842992    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:22.240332    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:22.851710    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:24.241185    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:24.859755    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:26.260185    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:26.869354    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:28.274345    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:28.877488    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:30.285914    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:30.886080    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:31.482368    4840 proxier.go:968] Syncing Policies
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:18:31.482368    4840 proxier.go:945] syncProxyRules took 128.3µs
I0416 23:18:31.482368    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:18:32.293480    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:32.893734    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:34.301864    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:34.905769    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:36.310753    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:36.914859    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:38.321806    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:38.924325    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:40.330465    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:40.932570    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:42.339201    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:42.942637    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:44.349283    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:44.952707    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:46.359481    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:46.962345    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:48.371190    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:48.970901    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:50.373663    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:50.671198    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 562 items received
I0416 23:18:50.979544    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:52.389599    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:52.988168    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:54.398216    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:54.998253    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:56.410238    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:56.993322    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:58.418589    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:18:59.014469    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:00.428140    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:01.020642    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:01.490327    4840 proxier.go:968] Syncing Policies
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:01.490466    4840 proxier.go:945] syncProxyRules took 139.3µs
I0416 23:19:01.490466    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:19:02.435643    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:03.032219    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:04.444035    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:05.039422    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:06.450427    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:07.048966    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:08.460393    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:09.056103    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:10.462800    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:11.063728    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:12.475386    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:13.072365    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:14.482566    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:15.086960    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:16.490568    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:17.094959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:18.499838    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:19.104525    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:20.508226    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:21.115115    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:22.519560    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:23.112036    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:24.526947    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:25.143068    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:26.535517    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:27.154612    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:28.551477    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:29.167625    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:30.554698    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:31.176733    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:31.499657    4840 proxier.go:968] Syncing Policies
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.499657    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:19:31.500460    4840 proxier.go:945] syncProxyRules took 802.8µs
I0416 23:19:31.500460    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:19:32.561379    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:33.194593    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:34.570458    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:35.218102    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:36.576669    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:37.230194    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:38.584903    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:39.239578    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:40.598766    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:41.254931    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:42.608394    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:43.262578    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:44.618420    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:45.272993    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:46.624132    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:47.281787    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:48.638430    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:49.291377    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:50.655017    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:51.303396    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:52.680167    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:53.311893    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:54.692138    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:55.322068    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:56.699200    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:57.331677    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:58.712077    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:19:59.340281    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:00.724305    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:01.338842    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:01.505133    4840 proxier.go:968] Syncing Policies
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:01.505254    4840 proxier.go:945] syncProxyRules took 119.9µs
I0416 23:20:01.505254    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:20:02.749334    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:03.372621    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:04.772586    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:05.397737    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:06.794980    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:07.416904    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:08.815950    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:09.433771    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:10.835788    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:11.453154    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:12.850341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:13.468017    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:14.865701    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:15.482059    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:16.879928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:17.497111    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:18.894155    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:19.509832    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:20.907045    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:21.521562    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:22.921482    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:23.534016    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:24.742066    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 23:20:24.933655    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:25.545107    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:26.947294    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:27.555781    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:28.959985    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:29.566582    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:30.974368    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:31.576698    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:31.605409    4840 proxier.go:968] Syncing Policies
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:20:31.605409    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:20:31.605409    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:20:32.985494    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:33.576602    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:34.998305    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:35.595203    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:37.006436    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:37.606257    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:39.015480    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:39.614437    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:41.026869    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:41.625403    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:43.036095    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:43.637580    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:45.047176    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:45.640718    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:47.062563    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:47.656107    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:49.074341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:49.665328    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:51.083101    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:51.689212    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:53.092620    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:53.703341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:55.102288    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:55.724671    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:57.112077    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:57.748888    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:59.117511    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:20:59.758068    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:01.132455    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:01.628572    4840 proxier.go:968] Syncing Policies
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:01.628703    4840 proxier.go:945] syncProxyRules took 130.8µs
I0416 23:21:01.628703    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:21:01.770690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:03.152385    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:03.783481    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:05.163518    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:05.791161    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:07.173407    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:07.802168    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:09.180904    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:09.811501    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:11.192042    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:11.819287    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:13.200831    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:13.823227    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:15.210759    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:15.837271    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:17.225661    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:17.847342    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:19.236740    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:19.854798    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:21.246880    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:21.865244    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:23.254338    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:23.874181    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:25.263408    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:25.884964    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:27.275829    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:27.885155    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:29.295290    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:29.901682    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:31.305079    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:31.641320    4840 proxier.go:968] Syncing Policies
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:21:31.641473    4840 proxier.go:945] syncProxyRules took 153.4µs
I0416 23:21:31.641473    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:21:31.896656    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:33.312906    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:33.922689    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:35.322338    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:35.931830    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:37.330404    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:37.941780    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:39.339043    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:39.950531    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:41.349599    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:41.958247    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:43.358825    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:43.969385    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:45.424648    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:45.964046    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:47.437074    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:47.978527    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:49.432499    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:50.017876    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:51.456443    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:52.030425    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:53.450243    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:54.039516    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:55.469715    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:56.049651    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:57.475806    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:58.063635    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:21:59.497291    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:00.070761    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:01.507204    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:01.653838    4840 proxier.go:968] Syncing Policies
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:01.653838    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:22:01.653838    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:22:02.079886    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:03.516321    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:04.089017    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:05.524015    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:06.098099    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:07.536146    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:08.105775    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:09.543100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:10.115283    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:11.541171    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:12.123493    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:13.558879    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:14.131711    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:15.572422    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:16.139756    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:17.570302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:18.141535    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:19.588161    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:20.159414    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:21.597720    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:22.177339    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:23.607497    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:24.188861    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:25.603304    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:26.197929    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:27.624313    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:28.198830    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:29.633951    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:30.216161    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:31.643638    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:31.655502    4840 proxier.go:968] Syncing Policies
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:22:31.655502    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:22:31.655502    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:22:32.225789    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:33.648023    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:34.233425    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:35.661327    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:36.244162    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:37.669465    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:38.244252    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:39.680285    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:40.263598    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:41.690011    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:42.274300    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:43.708153    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:44.282671    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:45.725187    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:46.307538    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:47.742494    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:48.323835    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:49.764343    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:50.334610    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:51.774235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:52.343702    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:53.782044    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:54.352800    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:55.791233    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:56.362891    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:57.801645    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:58.370955    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:22:59.815018    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:00.378076    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:01.661198    4840 proxier.go:968] Syncing Policies
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:01.661333    4840 proxier.go:945] syncProxyRules took 134.4µs
I0416 23:23:01.661333    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:23:01.828612    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:02.402147    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:03.837396    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:04.411908    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:05.845399    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:06.420522    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:07.856849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:08.430913    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:09.864806    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:10.449486    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:11.876279    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:12.453209    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:13.883438    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:14.460889    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:15.893569    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:16.473648    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:17.902113    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:18.481481    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:19.910776    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:20.489614    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:21.920456    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:22.485032    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:23.927951    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:24.505870    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:25.933606    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:26.504281    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:27.945115    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:28.521167    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:29.953131    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:30.529738    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:31.665077    4840 proxier.go:968] Syncing Policies
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:23:31.665077    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:23:31.665077    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:23:31.963647    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:32.538849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:33.971402    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:34.545537    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:35.979651    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:36.554149    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:37.988732    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:38.562759    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:39.996209    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:40.571014    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:42.006620    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:42.577768    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:44.012987    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:44.573983    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:46.023833    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:46.593609    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:48.027320    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:48.601135    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:50.042234    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:50.613060    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:52.040217    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:52.620953    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:54.058482    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:54.628696    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:56.065672    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:56.622230    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:58.075235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:23:58.645545    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:00.083579    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:00.654280    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:01.678607    4840 proxier.go:968] Syncing Policies
I0416 23:24:01.678607    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.678607    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.678607    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.678607    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.679409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.679409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.679409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.679409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:01.679409    4840 proxier.go:945] syncProxyRules took 802.2µs
I0416 23:24:01.679409    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:24:02.094764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:02.664035    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:04.102996    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:04.675758    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:06.104291    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:06.688300    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:08.114398    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:08.697839    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:10.118112    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:10.706364    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:12.140203    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:12.711163    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:14.147984    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:14.724427    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:16.155657    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:16.732992    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:18.155106    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:18.741695    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:20.171491    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:20.757141    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:22.185428    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:22.774010    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:24.182376    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:24.781452    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:26.208896    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:26.781739    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.209440    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.782480    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.826428    4840 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 23:24:28.826428    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:24:28.826428    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:24:28.826428    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:24:28.826428    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:24:28.826428    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:24:28.826428    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:24:28.833261    4840 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc0002db020]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc0002db080]
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0002db140]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0002db1a0]
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0002db440]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0002db4a0]
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0002db5c0 0xc0002db680]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0002db6e0 0xc0002db740]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0002db7a0 0xc0002db800]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0002db860 0xc0002db8c0]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0002db920 0xc0002db980]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0002db9e0 0xc0002dba40]
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0002dbb00]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0002dbb60]
I0416 23:24:28.833261    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0002dbc20]
I0416 23:24:28.833261    4840 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0002dbc80]
I0416 23:24:30.224032    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:30.803793    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:31.692575    4840 proxier.go:968] Syncing Policies
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:24:31.692575    4840 proxier.go:945] syncProxyRules took 144.4µs
I0416 23:24:31.692575    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:24:32.231540    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:32.755775    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 340 items received
I0416 23:24:32.797320    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:34.229765    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:34.820059    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:36.246569    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:36.829847    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:38.254146    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:38.835839    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:40.263074    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:40.844847    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:42.272556    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:42.845757    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:44.269552    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:44.860646    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:46.284893    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:46.863919    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:48.292544    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:48.879944    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:50.303928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:50.880795    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:52.312510    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:52.896415    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:54.319950    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:54.896459    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:56.328876    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:56.912268    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:58.347418    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:24:58.920289    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:00.348771    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:00.931576    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:01.707543    4840 proxier.go:968] Syncing Policies
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:01.707543    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:25:01.707543    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:25:02.370879    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:02.939765    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:04.378728    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:04.952798    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:06.389703    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:06.946690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:08.398036    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:08.969722    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:10.409882    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:10.979860    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:12.423735    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:12.989999    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:14.438663    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:14.998712    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:16.448072    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:17.005878    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:18.463077    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:19.004226    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:20.470890    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:21.025041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:22.478554    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:23.027321    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:24.486657    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:25.043233    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:26.500399    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:27.054302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:28.508761    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:29.063406    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:30.518648    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:31.075435    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:31.713575    4840 proxier.go:968] Syncing Policies
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:25:31.713712    4840 proxier.go:945] syncProxyRules took 137.2µs
I0416 23:25:31.713712    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:25:32.528237    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:33.089894    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:34.536903    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:35.099177    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:36.543518    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:37.106161    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:38.552681    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:39.115239    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:40.549704    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:41.124085    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:42.569980    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:43.122197    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:44.578332    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:45.133304    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:46.574587    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:47.147763    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:48.606663    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:49.157838    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:50.619563    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:51.167435    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:52.629447    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:53.179165    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:54.642300    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:55.186757    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:56.652827    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:57.200260    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:58.658940    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:25:59.202985    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:00.686224    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:01.218120    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:01.728247    4840 proxier.go:968] Syncing Policies
I0416 23:26:01.728247    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.728247    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.728247    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.728247    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.728247    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.728247    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.728247    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.729014    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:01.729014    4840 proxier.go:945] syncProxyRules took 767.2µs
I0416 23:26:01.729014    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:26:02.682014    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:03.225437    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:04.707423    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:05.245719    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:06.716433    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:07.254701    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:08.724230    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:09.266121    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:10.732764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:11.274216    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:12.745837    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:13.283475    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:14.753710    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:15.292269    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:16.758952    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:17.300858    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:18.771893    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:19.296824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:20.780195    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:21.316639    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:22.788018    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:23.325769    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:24.781681    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:25.333637    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:26.802000    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:27.340025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:28.808848    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:29.349916    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:30.816340    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:31.358067    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:31.739239    4840 proxier.go:968] Syncing Policies
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:26:31.739239    4840 proxier.go:945] syncProxyRules took 157.7µs
I0416 23:26:31.739239    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:26:32.824215    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:33.364719    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:34.835683    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:35.375035    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:36.848337    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:37.381582    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:38.857711    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:39.393845    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:40.860897    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:41.409234    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:42.875282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:43.417613    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:44.884844    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:45.424823    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:46.891318    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:47.431179    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:48.900534    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:49.440705    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:50.909133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:51.439493    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:52.919678    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:53.458160    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:54.922200    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:55.464949    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:56.936311    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:57.472180    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:58.944698    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:26:59.480248    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:00.953637    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:01.487567    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:01.747705    4840 proxier.go:968] Syncing Policies
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:01.747935    4840 proxier.go:945] syncProxyRules took 230.2µs
I0416 23:27:01.747935    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:27:02.961178    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:03.495306    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:04.964217    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:05.502990    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:06.985045    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:07.510879    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:08.992806    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:09.506773    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:11.002394    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:11.525685    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:13.010562    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:13.535701    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:15.019497    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:15.544876    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:17.026601    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:17.552691    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:19.036444    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:19.559133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:21.044421    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:21.569349    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:23.055897    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:23.577453    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:25.069081    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:25.586559    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:27.079930    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:27.595342    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:29.084197    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:29.602437    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:31.099837    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:31.611263    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:31.748021    4840 proxier.go:968] Syncing Policies
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:27:31.748021    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:27:31.748021    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:27:33.108059    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:33.618277    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:35.115372    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:35.626457    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:37.124494    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:37.634946    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:39.117468    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:39.632584    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:41.130002    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:41.650786    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:43.148233    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:43.660304    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:45.156175    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:45.670418    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:47.163869    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:47.684542    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:49.173777    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:49.700855    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:51.186088    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:51.710118    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:53.193404    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:53.733159    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:55.202480    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:55.741355    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:57.210636    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:57.751455    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:59.218437    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:27:59.767315    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:01.218109    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:01.750913    4840 proxier.go:968] Syncing Policies
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:01.750913    4840 proxier.go:945] syncProxyRules took 162.3µs
I0416 23:28:01.750913    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:28:01.775765    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:03.237599    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:03.785101    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:05.246532    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:05.793107    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:07.254588    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:07.807205    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:09.262311    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:09.822640    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:11.271898    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:11.830666    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:13.279567    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:13.827839    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:15.288692    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:15.847936    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:17.296989    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:17.855814    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:19.306838    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:19.864718    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:21.314501    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:21.870853    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:23.324087    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:23.881086    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:25.332172    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:25.888232    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:27.340062    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:27.896312    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:29.347187    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:29.906240    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:31.355431    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:31.755695    4840 proxier.go:968] Syncing Policies
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:28:31.755695    4840 proxier.go:945] syncProxyRules took 209.1µs
I0416 23:28:31.755695    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:28:31.913831    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:33.365515    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:33.922920    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:35.376360    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:35.933636    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:37.384664    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:37.941860    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:39.389092    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:39.953885    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:41.414919    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:41.963542    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:43.423870    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:43.972002    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:45.443217    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:45.981608    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:47.452674    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:47.990549    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:48.744704    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 23:28:49.461953    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:50.002157    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:51.469911    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:52.016119    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:53.468958    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:54.023357    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:55.477546    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:56.031714    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:57.494138    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:58.048110    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:28:59.502905    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:00.056542    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:01.511470    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:01.764083    4840 proxier.go:968] Syncing Policies
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:01.764287    4840 proxier.go:945] syncProxyRules took 203.3µs
I0416 23:29:01.764287    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:29:02.065152    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:03.524336    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:04.071524    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:05.537928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:06.080758    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:07.547090    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:08.089842    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:09.548081    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:10.099026    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:11.564975    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:12.106556    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:13.575625    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:14.115405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:15.585751    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:16.125837    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:17.594019    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:18.134446    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:19.604804    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:20.144024    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:21.615757    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:22.155182    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:23.627905    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:24.162874    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:25.636737    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:26.171028    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:27.645920    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:28.183735    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:29.655235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:30.192232    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:31.666125    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:31.776918    4840 proxier.go:968] Syncing Policies
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:29:31.776918    4840 proxier.go:945] syncProxyRules took 260.2µs
I0416 23:29:31.776918    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:29:32.201617    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:33.679836    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:34.208588    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:35.694517    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:36.216596    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:37.713763    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:38.223398    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:39.734405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:40.231448    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:41.741413    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:42.242467    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:43.749676    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:44.252354    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:45.756706    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:46.265282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:47.775302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:48.274432    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:49.784640    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:50.281858    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:51.792377    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:52.282640    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:53.801302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:54.309602    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:55.810998    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:56.316827    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:57.819699    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:58.326241    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:29:59.821047    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:00.335286    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:01.785896    4840 proxier.go:968] Syncing Policies
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:01.785896    4840 proxier.go:945] syncProxyRules took 190µs
I0416 23:30:01.785896    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:30:01.834607    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:02.343703    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:03.844505    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:04.354822    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:05.851266    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:06.362947    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:07.860286    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:08.372041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:09.870270    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:10.380654    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:11.880486    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:12.399975    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:13.887461    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:14.407658    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:15.898933    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:16.416257    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:17.910873    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:18.426347    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:19.904853    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:20.435016    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:21.929788    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:22.449006    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:23.938067    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:24.456755    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:25.945539    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:26.459853    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:27.959617    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:28.475793    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:29.972440    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:30.484849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:31.795034    4840 proxier.go:968] Syncing Policies
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:30:31.795034    4840 proxier.go:945] syncProxyRules took 190.3µs
I0416 23:30:31.795034    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:30:31.969613    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:32.494339    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:33.989822    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:34.502025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:35.998060    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:36.507953    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:38.007380    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:38.515879    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:40.018203    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:40.524359    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:42.027299    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:42.532050    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:44.033667    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:44.542728    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:46.040735    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:46.550431    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:48.050025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:48.560621    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:50.057405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:50.568400    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:52.068706    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:52.577005    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:54.077576    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:54.575088    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:56.086856    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:56.591855    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:58.096872    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:30:58.598759    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:00.103876    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:00.609116    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:01.795139    4840 proxier.go:968] Syncing Policies
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:01.795139    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:31:01.795139    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:31:02.115405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:02.617159    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:04.122614    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:04.624625    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:06.129406    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:06.633390    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:08.139477    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:08.640241    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:10.149864    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:10.649840    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:12.156893    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:12.660443    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:14.165489    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:14.669316    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:16.177012    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:16.680863    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:18.183847    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:18.687716    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:20.191472    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:20.681665    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:22.200849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:22.704823    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:24.197981    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:24.712577    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:26.214047    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:26.722646    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:28.222611    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:28.730411    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:30.232592    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:30.737714    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:31.799055    4840 proxier.go:968] Syncing Policies
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:31:31.799055    4840 proxier.go:945] syncProxyRules took 179.3µs
I0416 23:31:31.799055    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:31:32.240098    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:32.747045    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:34.246926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:34.756124    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:36.254655    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:36.763757    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:38.263677    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:38.771284    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:40.270784    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:40.781948    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:42.281340    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:42.791182    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:44.288683    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:44.803287    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:46.317806    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:46.811180    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:48.330909    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:48.805173    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:50.338776    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:50.812844    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:52.348998    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:52.835095    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:54.356100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:54.843493    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:56.363479    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:56.852973    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:58.372175    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:31:58.861495    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:00.381710    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:00.871040    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:01.804727    4840 proxier.go:968] Syncing Policies
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:01.804727    4840 proxier.go:945] syncProxyRules took 184.4µs
I0416 23:32:01.804727    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:32:02.391434    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:02.883246    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:04.399156    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:04.891300    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:06.408049    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:06.901738    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:08.425701    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:08.910587    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:10.439521    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:10.919202    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:12.448537    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:12.927959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:14.456270    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:14.936090    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:16.457066    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:16.948943    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:18.473019    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:18.955880    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:20.480670    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:20.965952    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:22.489739    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:22.973932    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:24.497412    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:24.985248    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:26.507091    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:26.993270    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:28.514127    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:29.002348    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:30.527436    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:31.010977    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:31.809495    4840 proxier.go:968] Syncing Policies
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:32:31.809495    4840 proxier.go:945] syncProxyRules took 215.9µs
I0416 23:32:31.809495    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:32:32.534657    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:33.019613    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:34.552663    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:35.028217    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:36.558886    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:37.035851    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:38.566964    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:39.044479    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:40.575623    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:41.053562    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:42.584357    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:43.061961    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:44.590906    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:45.071131    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:46.588729    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:47.081493    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:48.609212    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:49.088534    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:50.616764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:51.098092    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:52.626174    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:53.099025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:54.633563    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:55.114140    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:56.639892    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:57.123373    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:58.650042    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:32:59.132014    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:00.657987    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:01.139802    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:01.811693    4840 proxier.go:968] Syncing Policies
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:01.811693    4840 proxier.go:945] syncProxyRules took 144.9µs
I0416 23:33:01.811693    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:33:02.666751    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:03.147767    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:04.675866    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:05.156510    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:06.685293    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:07.166769    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:08.691835    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:09.183205    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:10.705288    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:11.191601    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:12.716661    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:13.199777    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:14.722997    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:15.207403    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:16.730902    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:17.215821    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:18.736445    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:19.225057    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:20.744670    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:21.224476    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:22.753372    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:23.241065    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:24.760073    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:25.250291    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:26.769744    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:27.258235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:28.769632    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:29.267639    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:30.793151    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:31.275336    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:31.826248    4840 proxier.go:968] Syncing Policies
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:33:31.826248    4840 proxier.go:945] syncProxyRules took 215.7µs
I0416 23:33:31.826248    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:33:32.799745    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:33.283920    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:34.807882    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:35.292003    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:36.815079    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:37.299524    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:38.826792    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:39.309464    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:40.837914    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:41.317971    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:42.845562    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:43.327065    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:44.853201    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:45.322405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:46.861816    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:47.343013    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:48.871740    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:49.352242    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:50.880202    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:51.359942    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:52.888530    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:53.369703    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:54.900324    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:55.377521    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:56.908323    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:57.385606    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:58.916916    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:33:59.393809    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:00.913118    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:01.403375    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:01.826415    4840 proxier.go:968] Syncing Policies
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:01.826627    4840 proxier.go:945] syncProxyRules took 211.9µs
I0416 23:34:01.826627    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:34:02.928331    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:03.411838    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:04.726008    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 569 items received
I0416 23:34:04.943338    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:05.420056    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:06.951147    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:07.432418    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:08.948262    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:09.424304    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:10.969161    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:11.446609    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:12.981104    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:13.467960    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:15.000945    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:15.480882    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:17.007623    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:17.488051    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:19.018657    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:19.497133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:21.027829    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:21.506233    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:23.039306    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:23.512940    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:25.050377    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:25.523484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:27.062688    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:27.530967    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:29.073678    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:29.539572    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:31.083050    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:31.545454    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:31.830693    4840 proxier.go:968] Syncing Policies
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:34:31.830693    4840 proxier.go:945] syncProxyRules took 154.3µs
I0416 23:34:31.830693    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:34:33.102410    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:33.556229    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:35.117558    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:35.564338    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:37.124507    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:37.572320    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:39.133769    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:39.581720    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:41.155553    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:41.576329    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:43.164225    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:43.582507    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:45.172819    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:45.604876    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:47.178855    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:47.609497    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:49.187933    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:49.619209    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:51.199277    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:51.626322    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:53.205655    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:53.633627    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:55.214285    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:55.641944    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:57.223355    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:57.661832    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:59.231964    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:34:59.675492    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:01.252649    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:01.688420    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:01.832976    4840 proxier.go:968] Syncing Policies
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:01.832976    4840 proxier.go:945] syncProxyRules took 161.9µs
I0416 23:35:01.832976    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:35:03.251243    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:03.700810    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:05.266612    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:05.711892    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:07.274588    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:07.707392    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:09.281877    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:09.728572    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:11.290487    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:11.736797    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:13.297159    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:13.746548    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:15.306813    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:15.754540    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:17.314377    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:17.765780    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:19.322973    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:19.773420    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:21.332086    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:21.781291    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:23.329479    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:23.790804    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:25.354201    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:25.798617    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:27.361850    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:27.801747    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:29.371439    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:29.819056    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:31.381305    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:31.822995    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:31.834118    4840 proxier.go:968] Syncing Policies
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:35:31.834118    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:35:31.834118    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:35:33.390569    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:33.836329    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:35.396813    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:35.848818    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:37.403928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:37.856710    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:39.418391    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:39.865132    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:41.426040    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:41.878350    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:43.433461    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:43.885113    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:45.443019    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:45.895978    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:47.450456    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:47.904000    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:49.459457    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:49.911621    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:51.467099    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:51.920564    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:53.475987    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:53.917153    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:55.483214    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:55.934583    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:57.491211    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:57.943819    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:59.499915    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:35:59.950778    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:01.506290    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:01.842717    4840 proxier.go:968] Syncing Policies
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:01.842965    4840 proxier.go:945] syncProxyRules took 248.7µs
I0416 23:36:01.842965    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:36:01.959894    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:03.514810    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:03.972584    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:05.522868    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:05.982490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:07.530465    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:07.991445    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:09.539546    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:10.000449    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:11.546836    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:12.017138    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:13.554126    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:14.026276    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:15.562724    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:16.036612    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:17.573518    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:18.041540    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:19.579826    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:20.040495    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:21.588031    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:22.060272    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:23.598175    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:24.074522    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:25.604462    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:26.077412    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:27.611009    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:28.088845    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:29.619068    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:30.098732    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:31.631214    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:31.843734    4840 proxier.go:968] Syncing Policies
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:36:31.843734    4840 proxier.go:945] syncProxyRules took 213.9µs
I0416 23:36:31.843734    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:36:32.108832    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:33.640983    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:34.124449    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:35.673129    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:36.131932    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:37.690724    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:38.142540    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:39.702420    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:40.150022    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:41.711824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:42.145356    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:43.720578    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:44.169339    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:45.728913    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:46.183875    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:47.737816    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:48.194284    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:49.748201    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:50.203736    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:51.757074    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:52.213904    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:53.768376    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:54.222308    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:55.774783    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:56.231404    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:57.786884    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:58.240933    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:36:59.796457    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:00.249078    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:01.806749    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:01.843859    4840 proxier.go:968] Syncing Policies
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:01.843859    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:37:01.843859    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:37:02.259202    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:03.815703    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:04.268933    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:05.827301    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:06.277773    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:07.836585    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:08.287643    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:09.844877    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:10.297044    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:11.855084    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:12.311425    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:13.864302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:14.323235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:15.872144    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:16.321605    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:17.882561    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:18.344397    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:19.890136    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:20.354445    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:21.899712    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:22.361339    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:23.908947    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:24.372449    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:25.917440    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:26.381366    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:27.926136    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:28.390078    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:29.939238    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:30.397493    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:31.845611    4840 proxier.go:968] Syncing Policies
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:37:31.845813    4840 proxier.go:945] syncProxyRules took 202.3µs
I0416 23:37:31.845813    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:37:31.954033    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:32.412411    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:33.962749    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:34.421454    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:35.972634    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:36.429957    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:37.980160    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:38.436354    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:39.986678    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:40.443026    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:41.993671    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:42.453295    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:44.003245    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:44.460193    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:46.012522    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:46.469689    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:48.029745    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:48.477490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:50.035939    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:50.484792    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:50.709218    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 23:37:52.045549    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:52.493420    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:54.053154    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:54.500695    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:56.061260    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:56.508306    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:58.069754    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:37:58.515676    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:00.084427    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:00.522846    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:01.851310    4840 proxier.go:968] Syncing Policies
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:01.851508    4840 proxier.go:945] syncProxyRules took 197.5µs
I0416 23:38:01.851508    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:38:02.094940    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:02.531050    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:04.103475    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:04.539222    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:06.111015    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:06.546080    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:08.120181    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:08.553806    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:10.126467    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:10.558064    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:12.134573    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:12.567708    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:14.143831    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:14.576041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:16.151755    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:16.584395    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:18.158349    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:18.592580    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:20.165524    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:20.598709    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:22.174254    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:22.605860    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:24.188016    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:24.615894    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:26.197038    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:26.627826    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:28.204049    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:28.636943    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:30.214302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:30.645548    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:31.865977    4840 proxier.go:968] Syncing Policies
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:38:31.865977    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:38:31.865977    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:38:32.224835    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:32.656879    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:34.233196    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:34.653792    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:36.241818    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:36.678713    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:38.250153    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:38.687915    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:40.258848    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:40.696538    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:42.267348    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:42.704333    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:44.275494    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:44.714021    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:46.285322    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:46.720902    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:48.294025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:48.730445    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:50.302458    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:50.738699    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:52.310590    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:52.748096    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:54.317922    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:54.755337    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:56.326937    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:56.763035    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:58.335181    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:38:58.771275    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:00.341307    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:00.778693    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:01.872442    4840 proxier.go:968] Syncing Policies
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:01.872619    4840 proxier.go:945] syncProxyRules took 177.2µs
I0416 23:39:01.872619    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:39:02.352169    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:02.787057    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:04.359302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:04.796176    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:06.369041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:06.804181    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:08.379402    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:08.812483    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:10.370959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:10.820471    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:12.402985    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:12.828205    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:14.412368    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:14.843238    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:16.421210    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:16.850934    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:18.425683    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:18.858877    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:20.437990    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:20.868343    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:22.445441    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:22.877928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:24.452679    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:24.886605    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:26.462397    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:26.894132    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.470460    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.831685    4840 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 23:39:28.831685    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:39:28.831685    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:39:28.831685    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:39:28.831685    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:39:28.831685    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:39:28.831685    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:39:28.834926    4840 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0002db860]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0002db8c0]
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0002db9e0]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0002dba40]
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0002dbb60 0xc0002dbbc0]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0002dbc20 0xc0002dbc80]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0002dbce0 0xc0002dbd40]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0002dbda0 0xc0002dbe60]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0002dbec0 0xc0002dbf20]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0002dbf80 0xc0005ca000]
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0005ca0c0]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0005ca120]
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0005ca240]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0005ca2a0]
I0416 23:39:28.834926    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc0005ca360]
I0416 23:39:28.834926    4840 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc0005ca480]
I0416 23:39:28.903767    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:30.488593    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:30.910388    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:31.873264    4840 proxier.go:968] Syncing Policies
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:39:31.873444    4840 proxier.go:945] syncProxyRules took 179.7µs
I0416 23:39:31.873444    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:39:32.501466    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:32.922336    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:34.510154    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:34.930453    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:36.519146    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:36.939144    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:38.527374    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:38.947851    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:40.534908    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:40.954623    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:42.543244    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:42.972677    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:44.550433    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:44.980235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:46.560148    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:46.987600    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:48.573186    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:48.997250    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:50.582714    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:51.003976    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:52.591972    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:53.017467    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:54.599209    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:55.023734    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:56.609513    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:57.032741    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:58.617088    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:39:59.042912    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:00.625383    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:01.049938    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:01.878928    4840 proxier.go:968] Syncing Policies
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:01.879243    4840 proxier.go:945] syncProxyRules took 314.8µs
I0416 23:40:01.879243    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:40:02.636109    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:03.062575    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:04.644118    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:05.079349    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:06.655133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:07.091678    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:08.662741    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:09.100741    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:10.672448    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:11.107503    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:12.683978    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:13.115700    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:14.691175    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:15.123877    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:16.703152    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:17.124222    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:18.710970    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:19.138213    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:20.719589    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:21.157539    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:22.728198    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:23.165898    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:24.733865    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:25.172818    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:26.740726    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:27.179514    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:28.748168    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:29.188570    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:30.744597    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:31.195708    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:31.886567    4840 proxier.go:968] Syncing Policies
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:40:31.886772    4840 proxier.go:945] syncProxyRules took 204.8µs
I0416 23:40:31.886772    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:40:32.765360    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:33.207214    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:34.775864    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:35.216066    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:36.783322    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:37.223283    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:38.791470    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:39.231654    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:40.800567    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:41.240593    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:42.803627    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:43.249376    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:44.815332    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:45.244326    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:46.825431    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:47.267239    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:48.842634    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:49.275350    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:50.860266    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:51.282148    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:52.867040    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:53.288959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:54.874830    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:55.290291    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:56.883798    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:57.307218    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:58.893155    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:40:59.314935    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:00.899183    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:01.322228    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:01.893736    4840 proxier.go:968] Syncing Policies
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:01.893915    4840 proxier.go:945] syncProxyRules took 179.2µs
I0416 23:41:01.893915    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:41:02.908377    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:03.332528    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:04.914778    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:05.327520    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:06.922852    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:07.349365    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:08.931206    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:09.356579    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:10.937900    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:11.363588    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:12.946524    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:13.370292    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:14.953886    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:15.380165    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:16.950655    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:17.388978    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:18.968955    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:19.396858    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:20.976297    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:21.406764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:22.982522    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:23.413824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:24.988522    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:25.421947    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:26.997696    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:27.431886    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:29.003610    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:29.444796    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:31.011750    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:31.454129    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:31.904490    4840 proxier.go:968] Syncing Policies
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:41:31.904490    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:41:31.904490    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:41:33.024812    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:33.462324    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:35.031505    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:35.469602    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:37.041850    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:37.477566    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:39.050672    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:39.484193    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:41.058752    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:41.493511    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:43.066764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:43.499979    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:45.073573    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:45.508085    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:47.098985    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:47.520133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:49.110679    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:49.531218    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:50.675609    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 464 items received
I0416 23:41:51.120401    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:51.539302    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:53.133286    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:53.547916    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:55.142069    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:55.559945    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:57.152102    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:57.566610    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:59.161371    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:41:59.575694    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:01.170139    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:01.582365    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:01.915344    4840 proxier.go:968] Syncing Policies
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:01.915512    4840 proxier.go:945] syncProxyRules took 167.5µs
I0416 23:42:01.915512    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:42:03.177639    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:03.595394    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:05.185018    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:05.605793    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:07.194199    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:07.624354    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:09.202181    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:09.635409    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:11.208467    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:11.642546    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:13.216601    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:13.648716    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:15.225049    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:15.663165    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:17.234704    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:17.684963    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:19.242581    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:19.691668    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:21.250585    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:21.698789    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:23.260155    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:23.706746    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:25.266923    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:25.714081    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:27.278719    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:27.723195    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:29.284665    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:29.732176    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:31.293294    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:31.739891    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:31.916183    4840 proxier.go:968] Syncing Policies
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:42:31.916183    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:42:31.916183    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:42:33.303388    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:33.746567    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:35.315068    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:35.754963    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:37.325468    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:37.762669    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:39.334448    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:39.770605    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:41.340986    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:41.778075    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:43.350254    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:43.787181    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:45.359307    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:45.795153    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:47.364584    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:47.804554    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:49.380995    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:49.813049    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:51.388923    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:51.822018    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:53.396727    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:53.835418    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:55.404845    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:55.845969    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:57.414157    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:57.854051    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:59.413276    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:42:59.862797    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:01.431663    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:01.872065    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:01.917977    4840 proxier.go:968] Syncing Policies
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:01.917977    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:43:01.917977    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:43:03.438533    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:03.878298    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:05.447452    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:05.884829    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:07.459666    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:07.888771    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:09.471656    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:09.909270    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:11.481485    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:11.919976    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:13.490989    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:13.928433    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:15.498923    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:15.927935    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:17.513082    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:17.944869    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:19.521337    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:19.951849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:21.530652    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:21.961028    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:23.538183    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:23.968415    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:25.545805    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:25.975117    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:27.554211    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:27.983327    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:29.562873    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:29.990866    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:31.572825    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:31.922640    4840 proxier.go:968] Syncing Policies
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:43:31.922847    4840 proxier.go:945] syncProxyRules took 206.4µs
I0416 23:43:31.922847    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:43:31.998813    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:33.580726    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:34.005682    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:35.594273    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:36.013580    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:37.613126    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:38.022991    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:39.617798    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:40.031788    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:41.634564    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:42.040431    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:43.657080    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:44.049026    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:45.666123    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:46.058790    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:47.679445    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:48.067215    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:49.692641    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:50.076461    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:51.702594    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:52.083980    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:53.708827    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:54.091132    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:55.668668    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 23:43:55.716768    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:56.098707    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:57.723976    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:58.106715    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:43:59.721505    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:00.113586    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:01.741427    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:01.931555    4840 proxier.go:968] Syncing Policies
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:01.931555    4840 proxier.go:945] syncProxyRules took 278.5µs
I0416 23:44:01.931555    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:44:02.116889    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:03.747997    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:04.129026    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:05.757606    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:06.137940    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:07.765975    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:08.151407    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:09.775318    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:10.159103    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:11.783993    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:12.166698    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:13.802295    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:14.174390    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:15.810939    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:16.182080    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:17.820555    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:18.198417    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:19.831081    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:20.208979    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:21.841143    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:22.219056    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:23.851729    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:24.225690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:25.858390    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:26.242131    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:27.873842    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:28.263431    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:29.881856    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:30.269173    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:31.900836    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:31.933051    4840 proxier.go:968] Syncing Policies
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:44:31.933051    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:44:31.933051    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:44:32.277756    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:33.908036    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:34.285369    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:35.917606    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:36.297885    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:37.925702    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:38.307927    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:39.939184    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:40.316120    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:41.952208    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:42.323918    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:43.959827    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:44.331385    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:45.968916    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:46.350744    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:47.978545    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:48.361798    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:49.996428    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:50.371429    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:51.996780    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:52.378541    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:54.003886    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:54.387618    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:56.011990    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:56.398672    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:58.020614    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:44:58.406344    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:00.031209    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:00.412125    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:01.934831    4840 proxier.go:968] Syncing Policies
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:01.934831    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:45:01.934831    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:45:02.053963    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:02.409941    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:04.040807    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:04.425459    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:06.054644    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:06.438908    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:08.049732    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:08.452220    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:10.072838    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:11.083928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:12.079546    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:12.469417    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:14.089017    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:14.476211    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:16.096353    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:16.482921    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:18.105047    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:18.491494    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:20.112438    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:20.488417    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:22.120057    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:22.501437    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:24.126294    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:24.506362    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:26.136805    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:26.521100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:28.140093    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:28.531619    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:30.148702    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:30.524655    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:31.949789    4840 proxier.go:968] Syncing Policies
I0416 23:45:32.206655    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.206655    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.159243    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:32.206655    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.206655    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.206655    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.206655    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.206655    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.207636    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:45:32.207636    4840 proxier.go:945] syncProxyRules took 257.847ms
I0416 23:45:32.207636    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:45:32.532265    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:34.167381    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:34.542839    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:36.166896    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:36.565104    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:38.186104    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:38.579118    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:40.195647    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:40.588491    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:42.205763    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:42.591542    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:44.202238    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:44.608134    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:46.222948    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:46.620750    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:48.219535    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:48.629178    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:50.243128    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:50.631267    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:52.252786    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:52.644875    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:54.260820    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:54.654511    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:56.267058    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:56.662479    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:58.275120    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:45:58.671087    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:00.278394    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:00.682146    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:02.208415    4840 proxier.go:968] Syncing Policies
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:02.208415    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:46:02.208415    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:46:02.293321    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:02.689799    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:04.304899    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:04.696443    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:06.314505    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:06.704591    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:08.323070    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:08.712741    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:10.332176    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:10.720813    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:12.351470    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:12.729578    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:14.364575    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:14.739528    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:16.374171    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:16.751072    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:18.380095    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:18.750434    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:20.390380    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:20.768299    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:22.398997    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:22.773737    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:24.407391    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:25.215666    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:26.414982    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:26.790256    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:28.421935    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:28.806184    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:30.434152    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:31.004217    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:32.208830    4840 proxier.go:968] Syncing Policies
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:46:32.208830    4840 proxier.go:945] syncProxyRules took 144µs
I0416 23:46:32.208830    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:46:32.446945    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:32.819489    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:34.455092    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:34.820306    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:36.464205    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:36.843109    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:38.474266    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:38.841002    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:40.489325    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:40.860766    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:42.496889    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:42.870913    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:44.508564    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:44.891899    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:46.509690    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:46.900271    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:48.528564    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:48.903039    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:50.537668    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:50.918552    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:52.546309    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:52.922209    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:54.564185    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:54.938153    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:56.570668    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:56.947770    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:58.579443    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:46:58.955406    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:00.593199    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:00.963510    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:02.214088    4840 proxier.go:968] Syncing Policies
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:02.214088    4840 proxier.go:945] syncProxyRules took 180.9µs
I0416 23:47:02.214088    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:47:02.599454    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:02.981252    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:04.593694    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:04.992235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:06.621265    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:06.997644    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:08.638959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:09.010673    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:10.648356    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:11.026577    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:12.657499    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:13.036847    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:14.665817    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:15.046764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:16.674368    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:17.056258    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:18.682265    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:19.064008    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:20.691988    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:21.072786    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:22.703341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:23.082792    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:24.712733    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:25.091314    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:26.722237    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:27.101830    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:28.731063    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:29.111286    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:30.737339    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:31.119574    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:32.214692    4840 proxier.go:968] Syncing Policies
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:47:32.214692    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:47:32.214692    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:47:32.745109    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:33.129439    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:34.755108    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:35.136160    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:36.764332    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:37.143516    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:38.772262    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:39.135994    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:40.781683    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:41.159273    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:42.791053    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:43.164945    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:44.799652    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:45.168688    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:46.808483    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:47.185697    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:48.822120    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:49.193797    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:50.832722    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:51.202814    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:52.838913    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:53.210728    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:54.846764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:55.218938    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:56.856114    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:57.214985    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:58.867206    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:47:59.234655    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:00.874392    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:01.242444    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:02.218169    4840 proxier.go:968] Syncing Policies
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:02.218169    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:48:02.218169    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:48:02.883596    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:03.251594    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:04.893504    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:05.261277    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:06.643341    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 374 items received
I0416 23:48:06.903092    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:07.271245    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:08.915328    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:09.281112    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:10.922276    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:11.289431    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:12.932053    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:13.298852    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:14.940750    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:15.308478    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:16.947928    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:17.318083    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:18.955269    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:19.327083    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:20.961904    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:21.334162    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:22.973274    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:23.345656    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:24.981837    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:25.351808    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:26.989308    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:27.358027    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:28.996219    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:29.364718    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:31.005474    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:31.373516    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:32.232599    4840 proxier.go:968] Syncing Policies
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:48:32.232599    4840 proxier.go:945] syncProxyRules took 182.1µs
I0416 23:48:32.232599    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:48:33.000923    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:33.381769    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:35.023183    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:35.393501    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:37.034240    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:37.400577    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:39.042594    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:39.413438    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:41.050506    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:41.420733    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:43.063194    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:43.430047    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:45.069191    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:45.448506    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:47.077951    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:47.459817    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:49.086246    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:49.466290    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:51.094800    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:51.476037    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:53.104362    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:53.483875    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:55.111605    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:55.489474    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:57.120072    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:57.497283    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:59.127895    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:48:59.505039    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:01.136366    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:01.515066    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:02.245652    4840 proxier.go:968] Syncing Policies
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:02.245652    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:49:02.245652    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:49:03.144903    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:03.520737    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:05.152564    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:05.527794    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:07.159618    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:07.535088    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:09.170880    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:09.543596    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:11.165566    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:11.550786    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:13.186188    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:13.559883    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:15.194307    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:15.572892    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:17.201845    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:17.595194    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:19.209586    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:19.605263    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:21.218336    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:21.613389    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:23.228722    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:23.627622    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:25.236106    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:25.633687    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:27.244532    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:27.640711    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:29.253742    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:29.652389    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:31.272896    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:31.660509    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:32.246523    4840 proxier.go:968] Syncing Policies
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:49:32.246523    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:49:32.246523    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:49:33.282783    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:33.669650    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:35.290739    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:35.676549    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:37.296115    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:37.683199    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:39.309114    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:39.689672    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:41.318256    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:41.699002    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:43.328634    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:43.706172    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:45.339105    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:45.715289    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:47.348196    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:47.725704    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:49.356689    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:49.731558    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:51.364701    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:51.740627    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:53.372112    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:53.748450    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:55.371212    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:55.755930    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:57.386669    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:57.763460    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:59.398547    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:49:59.773143    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:01.405664    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:01.772647    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:02.252289    4840 proxier.go:968] Syncing Policies
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:02.252459    4840 proxier.go:945] syncProxyRules took 169.8µs
I0416 23:50:02.252459    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:50:03.415784    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:03.792221    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:05.423389    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:05.803689    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:07.432827    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:07.817583    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:09.441128    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:09.826966    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:11.451930    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:11.838913    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:13.462273    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:13.840876    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:15.471428    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:15.853212    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:17.488088    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:17.853977    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:19.498705    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:19.879773    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:21.508796    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:21.890346    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:23.514108    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:23.899948    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:25.530457    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:25.909365    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:27.540918    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:27.905996    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:29.550490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:29.933003    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:31.565403    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:31.938285    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:32.272611    4840 proxier.go:968] Syncing Policies
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:50:32.272611    4840 proxier.go:945] syncProxyRules took 2.1135ms
I0416 23:50:32.272611    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:50:33.603486    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:33.955662    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:35.585208    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:35.972060    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:37.595688    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:37.973041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:39.624275    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:39.985981    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:41.630341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:41.986530    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:43.644436    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:44.005696    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:45.653496    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:46.014788    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:47.677578    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:48.025892    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:49.686871    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:50.034991    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:51.695271    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:52.042965    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:53.702585    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:54.050417    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:55.712368    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:56.059836    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:57.722661    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:58.069938    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:50:59.730569    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:00.081045    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:01.740732    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:02.095659    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:02.287267    4840 proxier.go:968] Syncing Policies
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:02.287469    4840 proxier.go:945] syncProxyRules took 201.9µs
I0416 23:51:02.287469    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:51:03.749080    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:04.105508    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:05.771441    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:06.115455    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:07.779008    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:08.125131    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:09.788444    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:10.121053    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:11.800595    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:12.142844    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:13.812210    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:14.152045    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:15.822303    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:16.162377    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:17.832366    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:18.171085    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:19.841170    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:20.179209    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:21.861138    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:22.189000    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:23.870051    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:24.195959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:25.880467    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:26.204431    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:27.894256    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:28.214559    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:29.943107    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:30.224762    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:31.956148    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:32.239602    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:32.297545    4840 proxier.go:968] Syncing Policies
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:51:32.297545    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:51:32.297545    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:51:33.970501    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:34.340965    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:35.996539    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:36.257625    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:37.998887    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:38.265692    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:40.008207    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:40.274397    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:42.118339    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:42.285850    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:44.041465    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:44.295579    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:46.056528    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:46.301707    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:48.073982    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:48.306482    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:50.084135    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:50.313661    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:52.133764    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:52.332471    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:54.104603    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:54.340745    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:56.116359    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:56.351725    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:58.122808    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:51:58.352041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:00.133274    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:00.370717    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:02.134836    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:02.310313    4840 proxier.go:968] Syncing Policies
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:02.310313    4840 proxier.go:945] syncProxyRules took 153.7µs
I0416 23:52:02.310313    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:52:02.383679    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:04.151866    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:04.392282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:06.163241    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:06.400844    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:08.172754    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:08.412104    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:10.182701    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:10.420275    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:12.203309    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:12.434396    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:14.215932    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:14.441569    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:16.225929    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:16.449565    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:18.235429    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:18.458616    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:20.241586    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:20.465793    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:22.249282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:22.477334    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:24.260242    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:24.485354    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:26.269715    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:26.493661    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:28.277005    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:28.500553    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:30.286530    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:30.510252    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:32.297341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:32.318209    4840 proxier.go:968] Syncing Policies
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:52:32.318209    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:52:32.318209    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:52:32.518311    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:34.293498    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:34.526234    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:36.319715    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:36.533792    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:38.330503    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:38.541196    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:40.337844    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:40.549460    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:42.346758    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:42.560371    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:44.354584    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:44.568347    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:46.361263    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:46.578410    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:48.370551    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:48.586721    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:50.378783    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:50.594616    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:52.390720    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:52.601663    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:54.397445    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:54.611988    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:56.405613    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:56.620019    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:58.414888    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:52:58.628469    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:00.422837    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:00.638924    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:02.324477    4840 proxier.go:968] Syncing Policies
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:02.324477    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:53:02.324477    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:53:02.432341    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:02.646658    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:04.441228    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:04.656905    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:06.449131    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:06.663865    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:08.458469    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:08.673043    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:10.466685    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:10.680501    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:12.475323    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:12.687405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:14.483153    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:14.697212    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:16.486365    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:16.708036    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:18.502413    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:18.714902    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:20.509053    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:20.723380    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:22.518634    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:22.732706    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:24.526377    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:24.741449    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:26.533267    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:26.748969    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:28.541500    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:28.758081    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:30.541589    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:30.764738    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:32.328816    4840 proxier.go:968] Syncing Policies
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:53:32.328816    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:53:32.328816    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:53:32.560864    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:32.775055    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:34.568591    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:34.768785    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:36.578645    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:36.792248    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:38.589242    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:38.800625    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:40.598278    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:40.810710    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:42.609765    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:42.819803    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:44.619575    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:44.827669    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:46.630486    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:46.836246    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:48.641806    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:48.843405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:50.650438    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:50.851916    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:51.701252    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 344 items received
I0416 23:53:52.658150    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:52.860804    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:53.700300    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 0 items received
I0416 23:53:54.669827    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:54.869604    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:56.681774    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:56.877100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:58.693320    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:53:58.887075    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:00.706344    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:00.895515    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:02.341724    4840 proxier.go:968] Syncing Policies
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:02.341724    4840 proxier.go:945] syncProxyRules took 224.1µs
I0416 23:54:02.341724    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:54:02.715462    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:02.904477    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:04.725968    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:04.918640    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:06.723379    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:06.929287    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:08.754139    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:08.937735    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:10.758994    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:10.945054    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:12.771995    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:12.954001    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:14.782319    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:14.963590    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:16.792905    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:16.972265    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:18.800180    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:18.979759    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:20.808293    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:20.988465    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:22.817062    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:23.005527    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:24.826870    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:25.017032    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:26.833727    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:27.023589    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.845511    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.900540    4840 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 23:54:28.900540    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:54:28.900540    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:54:28.900540    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:54:28.900540    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:54:28.900540    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:54:28.900540    4840 config.go:241] Calling handler.OnServiceUpdate
I0416 23:54:28.903484    4840 reflector.go:249] k8s.io/client-go/informers/factory.go:133: forcing resync
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0002dade0]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc0002dae40]
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0002daf60 0xc0002dafc0]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0002db020 0xc0002db080]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0002db0e0 0xc0002db140]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc0002db1a0 0xc0002db200]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc0002db320 0xc0002db440]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc0002db4a0 0xc0002db500]
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0002db5c0]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0002db680]
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0002db740]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0002db7a0]
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc0002db8c0]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc0002db920]
I0416 23:54:28.903484    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0002db9e0]
I0416 23:54:28.903484    4840 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc0002dba40]
I0416 23:54:29.033337    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:30.867260    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:31.043758    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:32.359011    4840 proxier.go:968] Syncing Policies
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:54:32.359214    4840 proxier.go:945] syncProxyRules took 202.5µs
I0416 23:54:32.359214    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:54:32.869743    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:33.051908    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:34.884864    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:35.061565    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:36.894116    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:37.070320    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:38.900728    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:39.079308    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:40.908394    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:41.080998    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:42.919373    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:43.094148    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:44.927038    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:45.102706    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:46.935989    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:47.111711    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:48.945297    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:49.122839    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:50.954266    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:51.134496    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:52.964574    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:53.142255    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:54.975250    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:55.151518    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:56.983964    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:57.161832    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:58.990912    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:54:59.156862    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:00.999653    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:01.175963    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:02.362288    4840 proxier.go:968] Syncing Policies
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:02.362475    4840 proxier.go:945] syncProxyRules took 187.6µs
I0416 23:55:02.362475    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:55:03.010182    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:03.184379    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:05.034885    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:05.194385    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:07.035263    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:07.200496    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:09.043580    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:09.209776    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:11.056825    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:11.216778    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:13.071923    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:13.226024    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:15.080571    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:15.235106    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:17.087128    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:17.241898    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:19.097056    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:19.250851    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:21.103217    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:21.257405    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:23.111133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:23.265904    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:25.119294    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:25.275776    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:27.127133    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:27.273165    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:29.135779    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:29.290094    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:31.144047    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:31.298834    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:32.367646    4840 proxier.go:968] Syncing Policies
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:55:32.367928    4840 proxier.go:945] syncProxyRules took 282µs
I0416 23:55:32.367928    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:55:33.150316    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:33.307787    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:35.160463    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:35.315993    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:37.166685    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:37.325332    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:39.183714    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:39.333475    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:41.190757    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:41.343238    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:43.200140    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:43.337372    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:45.213417    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:45.359568    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:47.223631    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:47.367912    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:49.232012    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:49.375822    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:51.240178    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:51.384025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:53.255745    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:53.394905    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:55.260072    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:55.402564    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:57.268120    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:57.414034    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:59.276219    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:55:59.421685    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:01.283795    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:01.429195    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:02.369654    4840 proxier.go:968] Syncing Policies
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:02.369829    4840 proxier.go:945] syncProxyRules took 175.6µs
I0416 23:56:02.369829    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:56:03.294265    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:03.436859    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:05.300115    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:05.444726    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:07.308577    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:07.451921    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:09.303959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:09.458539    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:11.323861    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:11.467582    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:13.332401    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:13.477234    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:15.341327    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:15.485214    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:17.349712    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:17.492881    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:19.355646    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:19.502796    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:21.356459    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:21.511643    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:23.380692    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:23.519703    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:25.393216    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:25.528683    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:27.401535    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:27.535973    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:29.408910    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:29.543061    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:31.417971    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:31.550102    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:32.384821    4840 proxier.go:968] Syncing Policies
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:32.384821    4840 proxier.go:945] syncProxyRules took 165.1µs
I0416 23:56:32.384821    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:56:33.426648    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:33.559211    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:35.433259    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:35.565761    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:37.440637    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:37.573310    4840 config.go:141] Calling handler.OnEndpointsUpdate
E0416 23:56:38.614782    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname1. Not applying any policy
E0416 23:56:38.614782    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
E0416 23:56:38.624526    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname1. Not applying any policy
E0416 23:56:38.624526    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
E0416 23:56:38.614782    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname1. Not applying any policy
E0416 23:56:38.614782    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
E0416 23:56:38.624526    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname1. Not applying any policy
E0416 23:56:38.624526    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
I0416 23:56:38.614782    4840 config.go:224] Calling handler.OnServiceAdd
I0416 23:56:38.614782    4840 proxier.go:332] Adding new service port "services-8454/multi-endpoint-test:portname1" at 10.0.34.227:80/TCP
I0416 23:56:38.614782    4840 proxier.go:332] Adding new service port "services-8454/multi-endpoint-test:portname2" at 10.0.34.227:81/TCP
I0416 23:56:38.614782    4840 proxier.go:968] Syncing Policies
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname1====
I0416 23:56:38.614782    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-8454/multi-endpoint-test:portname1]
E0416 23:56:38.614782    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname1. Not applying any policy
I0416 23:56:38.614782    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname2====
I0416 23:56:38.614782    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-8454/multi-endpoint-test:portname2]
E0416 23:56:38.614782    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
I0416 23:56:38.614782    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.614782    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:56:38.614782    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:56:38.623554    4840 config.go:124] Calling handler.OnEndpointsAdd
I0416 23:56:38.623554    4840 proxier.go:968] Syncing Policies
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname1====
I0416 23:56:38.624526    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-8454/multi-endpoint-test:portname1]
E0416 23:56:38.624526    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname1. Not applying any policy
I0416 23:56:38.624526    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname2====
I0416 23:56:38.624526    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-8454/multi-endpoint-test:portname2]
E0416 23:56:38.624526    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:38.624526    4840 proxier.go:945] syncProxyRules took 972.5µs
I0416 23:56:38.624526    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:56:39.435010    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:39.577122    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:41.452499    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:41.575134    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:43.458733    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:43.597397    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:45.472151    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:45.604659    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:46.104087    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:46.104087    4840 proxier.go:907] Setting endpoints for "services-8454/multi-endpoint-test:portname1" to [0xc0002dade0]
I0416 23:56:46.104087    4840 proxier.go:968] Syncing Policies
I0416 23:56:46.104087    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:46.104087    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:46.104087    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:46.104087    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:46.105070    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:46.105070    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname1====
I0416 23:56:46.109946    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:56:46.109946    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002dade0)({
 ip: (string) (len=9) "10.64.1.6",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-06",
 hnsID: (string) (len=36) "089dd27b-8d55-487b-8134-ebb98fdfca22",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:46.109946    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.1.6",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-8C-B2-02",
  hnsID: (string) (len=36) "089dd27b-8d55-487b-8134-ebb98fdfca22",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-8454/multi-endpoint-test:portname1]
I0416 23:56:46.109946    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0001a8480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:47.481586    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:47.625470    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:49.496965    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:49.648298    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:51.501771    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:51.659776    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:53.511085    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:53.666129    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:55.519148    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:55.673304    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:57.515495    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:57.681966    4840 config.go:141] Calling handler.OnEndpointsUpdate
E0416 23:56:59.392367    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
E0416 23:56:59.392367    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
I0416 23:56:59.392367    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"f7172f37-958c-4b3d-967d-2fd0c4415ac4","HostComputeEndpoints":["089dd27b-8d55-487b-8134-ebb98fdfca22"],"FrontendVIPs":["10.0.34.227"],"PortMappings":[{"Protocol":6,"InternalPort":100,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:56:59.392367    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.34.227, Id [f7172f37-958c-4b3d-967d-2fd0c4415ac4]
I0416 23:56:59.392367    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0001a8480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7172f37-958c-4b3d-967d-2fd0c4415ac4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:59.392367    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname2====
I0416 23:56:59.392367    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-8454/multi-endpoint-test:portname2]
E0416 23:56:59.392367    4840 proxier.go:1103] Endpoint information not available for service services-8454/multi-endpoint-test:portname2. Not applying any policy
I0416 23:56:59.392367    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:59.393335    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:59.393335    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:56:59.393335    4840 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-8454/multi-endpoint-test"
I0416 23:56:59.393335    4840 proxier.go:945] syncProxyRules took 13.2888967s
I0416 23:56:59.393335    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:56:59.528073    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:56:59.691643    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:01.547647    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:01.699781    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:03.561237    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:03.708965    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:05.569675    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:05.722497    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:07.577862    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:07.731155    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:09.587625    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:09.742780    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:11.599005    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:11.750429    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:13.632137    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:13.759082    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:15.652036    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:15.766290    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:17.656996    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:17.776494    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:18.241920    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:18.241920    4840 proxier.go:907] Setting endpoints for "services-8454/multi-endpoint-test:portname1" to [0xc0005ca120]
I0416 23:57:18.241920    4840 proxier.go:907] Setting endpoints for "services-8454/multi-endpoint-test:portname1" to [0xc0005ca1e0]
I0416 23:57:18.241920    4840 proxier.go:907] Setting endpoints for "services-8454/multi-endpoint-test:portname2" to [0xc0005ca240]
I0416 23:57:18.241920    4840 proxier.go:394] Service [&{[0 0 0 0 0 0 0 0 0 0 255 255 10 0 34 227] 80 TCP 0 100 {[]} None 10800 [] [] [] false 0 f7172f37-958c-4b3d-967d-2fd0c4415ac4  true <nil> {}}] is stale
I0416 23:57:18.241920    4840 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc0001a8480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7172f37-958c-4b3d-967d-2fd0c4415ac4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:19.331023    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:19.534603    4840 config.go:260] Calling handler.OnServiceDelete
I0416 23:57:31.637824    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0002dade0)({
 ip: (string) (len=9) "10.64.1.6",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-06",
 hnsID: (string) (len=36) "089dd27b-8d55-487b-8134-ebb98fdfca22",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:31.637824    4840 proxier.go:968] Syncing Policies
I0416 23:57:31.637824    4840 proxier.go:907] Setting endpoints for "services-8454/multi-endpoint-test:portname1" to [0xc0005ca300]
I0416 23:57:31.637824    4840 proxier.go:907] Setting endpoints for "services-8454/multi-endpoint-test:portname2" to [0xc0005ca360]
I0416 23:57:31.637824    4840 proxier.go:907] Setting endpoints for "services-8454/multi-endpoint-test:portname2" to [0xc0005ca480]
I0416 23:57:31.637824    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:160] Calling handler.OnEndpointsDelete
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.637824    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:31.637824    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:31.637824    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname1====
I0416 23:57:31.641737    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:57:31.641737    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005ca1e0)({
 ip: (string) (len=9) "10.64.1.6",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-06",
 hnsID: (string) (len=36) "089dd27b-8d55-487b-8134-ebb98fdfca22",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:31.641737    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.1.6",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-8C-B2-02",
  hnsID: (string) (len=36) "089dd27b-8d55-487b-8134-ebb98fdfca22",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-8454/multi-endpoint-test:portname1]
I0416 23:57:31.641737    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0001a8480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:31.729576    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:31.844831    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:33.738283    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:33.855321    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:35.740067    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:35.863754    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:37.757502    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:37.873366    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:39.767623    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:39.881071    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:41.777070    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:41.891560    4840 config.go:141] Calling handler.OnEndpointsUpdate
E0416 23:57:47.070852    4840 proxier.go:1124] Policy creation failed: hcnCreateLoadBalancer failed in Win32: The switch-port was not found. (0x803b0007) {"Success":false,"Error":"The switch-port was not found. ","ErrorCode":2151350279}
E0416 23:57:47.070852    4840 proxier.go:1124] Policy creation failed: hcnCreateLoadBalancer failed in Win32: The switch-port was not found. (0x803b0007) {"Success":false,"Error":"The switch-port was not found. ","ErrorCode":2151350279}
I0416 23:57:43.788358    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:43.900679    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:45.793588    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:45.909011    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:46.814521    4840 proxier.go:137] Hns loadbalancer policy resource, {"ID":"c9f99105-762b-4cb3-b718-082942970e04","HostComputeEndpoints":["089dd27b-8d55-487b-8134-ebb98fdfca22"],"FrontendVIPs":["10.0.34.227"],"PortMappings":[{"Protocol":6,"InternalPort":100,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0416 23:57:46.814521    4840 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.34.227, Id [c9f99105-762b-4cb3-b718-082942970e04]
I0416 23:57:46.814521    4840 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0001a8480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "c9f99105-762b-4cb3-b718-082942970e04",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:46.814521    4840 proxier.go:1002] ====Applying Policy for services-8454/multi-endpoint-test:portname2====
I0416 23:57:46.865337    4840 proxier.go:137] Hns Endpoint resource, {}
I0416 23:57:46.865337    4840 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0005ca240)({
 ip: (string) (len=9) "10.64.1.7",
 port: (uint16) 101,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-07",
 hnsID: (string) (len=36) "21b06977-3290-4977-a83a-803256b2ab7d",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:46.866290    4840 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.1.7",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-8C-BB-C2",
  hnsID: (string) (len=36) "21b06977-3290-4977-a83a-803256b2ab7d",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-8454/multi-endpoint-test:portname2]
I0416 23:57:46.866290    4840 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0001a8ea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 81,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 101,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
E0416 23:57:47.070852    4840 proxier.go:1124] Policy creation failed: hcnCreateLoadBalancer failed in Win32: The switch-port was not found. (0x803b0007) {"Success":false,"Error":"The switch-port was not found. ","ErrorCode":2151350279}
I0416 23:57:47.072360    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.072360    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.072360    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.072360    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.072360    4840 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-8454/multi-endpoint-test"
I0416 23:57:47.072360    4840 proxier.go:945] syncProxyRules took 28.8298592s
I0416 23:57:47.072360    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:57:47.072360    4840 proxier.go:350] Removing service port "services-8454/multi-endpoint-test:portname1"
I0416 23:57:47.072360    4840 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc0001a8480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "c9f99105-762b-4cb3-b718-082942970e04",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.084037    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0005ca1e0)({
 ip: (string) (len=9) "10.64.1.6",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-06",
 hnsID: (string) (len=36) "089dd27b-8d55-487b-8134-ebb98fdfca22",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.084037    4840 proxier.go:350] Removing service port "services-8454/multi-endpoint-test:portname2"
I0416 23:57:47.084037    4840 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc0001a8ea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.34.227,
 port: (int) 81,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 101,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.084037    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0005ca240)({
 ip: (string) (len=9) "10.64.1.7",
 port: (uint16) 101,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-07",
 hnsID: (string) (len=36) "21b06977-3290-4977-a83a-803256b2ab7d",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.084037    4840 proxier.go:398] Endpoints are orphaned. Cleaning up
I0416 23:57:47.084037    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0005ca1e0)({
 ip: (string) (len=9) "10.64.1.6",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-06",
 hnsID: (string) (len=36) "089dd27b-8d55-487b-8134-ebb98fdfca22",
 refCount: (uint16) 0,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.084037    4840 proxier.go:398] Endpoints are orphaned. Cleaning up
I0416 23:57:47.084037    4840 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0005ca240)({
 ip: (string) (len=9) "10.64.1.7",
 port: (uint16) 101,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-07",
 hnsID: (string) (len=36) "21b06977-3290-4977-a83a-803256b2ab7d",
 refCount: (uint16) 0,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.084037    4840 proxier.go:968] Syncing Policies
I0416 23:57:47.084037    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:945] syncProxyRules took 12.6551ms
I0416 23:57:47.085015    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:57:47.085015    4840 proxier.go:968] Syncing Policies
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085015    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085976    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:57:47.085976    4840 proxier.go:945] syncProxyRules took 961.2µs
I0416 23:57:47.085976    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:57:47.803205    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:47.917463    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:49.815163    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:49.926198    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:51.824669    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:51.933800    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:53.834407    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:53.942428    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:55.843631    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:55.952920    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:57.860025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:57.966734    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:59.869874    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:57:59.982353    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:01.878998    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:01.992504    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:03.888259    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:04.000109    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:05.896368    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:06.009977    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:07.908237    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:08.018016    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:09.915973    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:10.027107    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:11.924070    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:12.035177    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:13.931565    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:14.042893    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:15.937956    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:16.049606    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:17.100728    4840 proxier.go:968] Syncing Policies
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:17.100728    4840 proxier.go:945] syncProxyRules took 243.8µs
I0416 23:58:17.100728    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:58:17.944553    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:18.059802    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:19.952119    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:20.066193    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:21.961781    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:22.074211    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:23.973854    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:24.087510    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:25.982799    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:26.094538    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:27.990616    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:28.102359    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:29.998509    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:30.108273    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:32.007362    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:32.117135    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:34.014094    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:34.123933    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:36.038650    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:36.131997    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:38.047187    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:38.140135    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:40.054718    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:40.147863    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:42.063480    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:42.154282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:44.073913    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:44.172959    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:46.082754    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:46.181686    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:47.101348    4840 proxier.go:968] Syncing Policies
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:58:47.101348    4840 proxier.go:945] syncProxyRules took 157.7µs
I0416 23:58:47.101348    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:58:48.091827    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:48.189699    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:50.095687    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:50.196156    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:52.109082    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:52.203223    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:54.115285    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:54.212501    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:56.123432    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:56.221623    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:58.129142    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:58:58.230025    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:00.138202    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:00.235992    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:02.148755    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:02.249375    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:04.157010    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:04.258758    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:06.166135    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:06.267458    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:08.175687    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:08.278147    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:10.181384    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:10.286351    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:12.193829    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:12.305030    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:14.206492    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:14.313765    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:16.214847    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:16.324237    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:17.102308    4840 proxier.go:968] Syncing Policies
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:17.102308    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:59:17.102308    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:59:18.224865    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:18.335024    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:20.233490    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:20.341887    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:22.242904    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:22.339798    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:24.251022    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:24.360140    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:26.260973    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:26.367444    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:28.270550    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:28.377487    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:30.279876    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:30.388537    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:32.288475    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:32.395849    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:34.297752    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:34.405041    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:36.305498    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:36.413051    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:38.313874    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:38.421040    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:40.320635    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:40.426488    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:42.328664    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:42.435785    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:44.335758    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:44.430780    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:46.343975    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:46.450699    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:47.103894    4840 proxier.go:968] Syncing Policies
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0416 23:59:47.103894    4840 proxier.go:945] syncProxyRules took 0s
I0416 23:59:47.103894    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0416 23:59:48.354093    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:48.458247    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:50.355099    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:50.466111    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:52.373375    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:52.469680    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:54.384260    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:54.484285    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:56.394603    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:56.492755    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:58.422071    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0416 23:59:58.501168    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:00.455999    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:00.509472    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:02.468439    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:02.518150    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:04.476459    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:04.537134    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:06.490010    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:06.549446    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:08.499089    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:08.558086    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:10.507062    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:10.568127    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:12.516713    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:12.576123    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:14.524994    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:14.581795    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:16.531459    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:16.593148    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:17.104464    4840 proxier.go:968] Syncing Policies
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:17.104464    4840 proxier.go:945] syncProxyRules took 0s
I0417 00:00:17.104464    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:00:18.538742    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:18.600912    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:20.547354    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:20.611159    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:22.555551    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:22.622504    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:24.561158    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:24.630413    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:26.570967    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:26.637384    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:28.576875    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:28.644196    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:30.584841    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:30.654891    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:32.586583    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:32.663975    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:34.605845    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:34.670921    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:35.692790    4840 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 408 items received
I0417 00:00:36.626774    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:36.687100    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:38.627282    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:38.695923    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:40.645532    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:40.694867    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:42.639534    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:42.712751    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:44.663022    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:44.712304    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:46.670009    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:46.735099    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:47.105002    4840 proxier.go:968] Syncing Policies
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:00:47.105002    4840 proxier.go:945] syncProxyRules took 0s
I0417 00:00:47.105002    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:00:48.677440    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:48.744247    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:50.685587    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:50.751673    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:52.693715    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:52.759722    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:54.700360    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:54.766676    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:56.709153    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:56.784794    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:58.716235    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:00:58.792658    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:00.725473    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:00.800552    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:02.732226    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:02.796076    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:04.739707    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:04.803292    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:06.747393    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:06.829637    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:08.755040    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:08.832671    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:10.763899    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:10.848801    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:12.774246    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:12.856773    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:14.782881    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:14.866517    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:16.791907    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:16.875477    4840 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:01:17.114409    4840 proxier.go:968] Syncing Policies
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004197a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "be50a826-4dd9-4b06-ba4f-3321d9ee55d3",
 nodePorthnsID: (string) (len=36) "8f7a6666-f3a1-4497-bf2e-4c9f7ef6ded0",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "57f59e87-f68e-44ee-8b02-c4fe9c6cb6d0",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000432120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "abce9065-efc0-480b-871a-4ceef34184be",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419440)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "886870bb-82ee-433a-bf7e-29f36bf6932f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0004199e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "acf0ffec-b2d5-40fc-80c2-b208c95d60f7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002745a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76179463-c4be-49f6-ba6b-83fd0ffadea7",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002750e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f7c78a97-c1f7-4e57-8dac-d265137c15c8",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000419320)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2fbf5e69-0599-49bd-b9fd-98b90fbd24a4",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:01:17.114409    4840 proxier.go:945] syncProxyRules took 187µs
I0417 00:01:17.114409    4840 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
Log file created at: 2019/04/17 00:03:09
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
Log file created at: 2019/04/17 00:03:09
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
W0417 00:03:09.916626    3324 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0417 00:03:09.839958    3324 flags.go:33] FLAG: --alsologtostderr="false"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --bind-address="0.0.0.0"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --cleanup="false"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --cleanup-iptables="false"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --cleanup-ipvs="true"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --cluster-cidr="10.64.0.0/14"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --config=""
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --config-sync-period="15m0s"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --conntrack-max="0"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --conntrack-min="131072"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --enable-dsr="false"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --feature-gates=""
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --healthz-port="10256"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --help="false"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --hostname-override=""
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I0417 00:03:09.900109    3324 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --iptables-sync-period="30s"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --ipvs-scheduler=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --ipvs-strict-arp="false"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --ipvs-sync-period="30s"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --kube-api-burst="10"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --kube-api-qps="5"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --kubeconfig="C:\\etc\\kubernetes\\kubeproxy.kubeconfig"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --log-backtrace-at=":0"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --log-dir=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --log-file="C:\\etc\\kubernetes\\logs\\kube-proxy.log"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --log-flush-frequency="5s"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --logtostderr="false"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --masquerade-all="false"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --master=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --metrics-port="10249"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --network-name=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --nodeport-addresses="[]"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --oom-score-adj="-999"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --profiling="false"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --proxy-mode="kernelspace"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --proxy-port-range=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --resource-container=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --skip-headers="false"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --source-vip=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --stderrthreshold="2"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --udp-timeout="250ms"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --v="4"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --version="false"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --vmodule=""
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --windows-service="true"
I0417 00:03:09.909601    3324 flags.go:33] FLAG: --write-config-to=""
I0417 00:03:09.912688    3324 service.go:62] Running kube-proxy as a Windows service!
I0417 00:03:09.913669    3324 service.go:72] Service running
W0417 00:03:09.916626    3324 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0417 00:03:09.918536    3324 feature_gate.go:226] feature gates: &{map[]}
I0417 00:03:10.116778    3324 server_windows.go:102] Using Kernelspace Proxier.
I0417 00:03:10.431207    3324 proxier.go:522] network-name flag not set. Checking environment variable
I0417 00:03:10.440949    3324 proxier.go:534] Hns Network loaded with info = &{l2bridge 4ce1cf2d-afe8-44b9-9a29-afde3183c158 L2Bridge []}
I0417 00:03:10.444862    3324 proxier.go:611] minSyncPeriod: 0s, syncPeriod: 30s, burstSyncs: 2
I0417 00:03:10.445839    3324 server.go:557] Version: v1.15.0-alpha.0.1887+bae0630ef897d6-dirty
I0417 00:03:10.445839    3324 server.go:574] setting OOM scores is unsupported in this build
I0417 00:03:10.482941    3324 healthcheck.go:309] Starting goroutine for healthz on 0.0.0.0:10256
I0417 00:03:10.484895    3324 config.go:202] Starting service config controller
I0417 00:03:10.484895    3324 controller_utils.go:1028] Waiting for caches to sync for service config controller
I0417 00:03:10.484895    3324 config.go:102] Starting endpoints config controller
I0417 00:03:10.484895    3324 controller_utils.go:1028] Waiting for caches to sync for endpoints config controller
I0417 00:03:10.492731    3324 bounded_frequency_runner.go:170] sync-runner Loop running
I0417 00:03:10.505394    3324 reflector.go:128] Starting reflector *v1.Service (15m0s) from k8s.io/client-go/informers/factory.go:133
I0417 00:03:10.505394    3324 reflector.go:166] Listing and watching *v1.Service from k8s.io/client-go/informers/factory.go:133
I0417 00:03:10.507424    3324 reflector.go:128] Starting reflector *v1.Endpoints (15m0s) from k8s.io/client-go/informers/factory.go:133
I0417 00:03:10.507424    3324 reflector.go:166] Listing and watching *v1.Endpoints from k8s.io/client-go/informers/factory.go:133
I0417 00:03:10.567925    3324 config.go:224] Calling handler.OnServiceAdd
I0417 00:03:10.567925    3324 config.go:224] Calling handler.OnServiceAdd
I0417 00:03:10.567925    3324 config.go:224] Calling handler.OnServiceAdd
I0417 00:03:10.567925    3324 config.go:224] Calling handler.OnServiceAdd
I0417 00:03:10.567925    3324 config.go:224] Calling handler.OnServiceAdd
I0417 00:03:10.567925    3324 config.go:224] Calling handler.OnServiceAdd
I0417 00:03:10.568871    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.568871    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.568871    3324 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000299680 0xc0002996e0]
I0417 00:03:10.575723    3324 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000299740 0xc0002997a0]
I0417 00:03:10.575723    3324 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000299800 0xc000299860]
I0417 00:03:10.575723    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.575723    3324 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc0002998c0]
I0417 00:03:10.575723    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.575723    3324 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc000299920]
I0417 00:03:10.575723    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.575723    3324 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000299980]
I0417 00:03:10.575723    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.575723    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.575723    3324 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc0002999e0]
I0417 00:03:10.575723    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:03:10.575723    3324 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc000299a40]
I0417 00:03:10.585460    3324 shared_informer.go:123] caches populated
I0417 00:03:10.585460    3324 controller_utils.go:1035] Caches are synced for endpoints config controller
I0417 00:03:10.585460    3324 config.go:110] Calling handler.OnEndpointsSynced()
I0417 00:03:10.586482    3324 proxier.go:949] Not syncing hns until Services and Endpoints have been received from master
I0417 00:03:10.586482    3324 proxier.go:945] syncProxyRules took 1.0223ms
I0417 00:03:10.586482    3324 shared_informer.go:123] caches populated
I0417 00:03:10.586482    3324 controller_utils.go:1035] Caches are synced for service config controller
I0417 00:03:10.586482    3324 config.go:210] Calling handler.OnServiceSynced()
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "kube-system/metrics-server:" at 10.0.226.182:443/TCP
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "default/kubernetes:https" at 10.0.0.1:443/TCP
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "kube-system/kube-dns:dns" at 10.0.0.10:53/UDP
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.0.0.10:53/TCP
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "kube-system/kube-dns:metrics" at 10.0.0.10:9153/TCP
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "kube-system/default-http-backend:http" at 10.0.209.152:80/TCP
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "kube-system/heapster:" at 10.0.192.96:80/TCP
I0417 00:03:10.590353    3324 proxier.go:332] Adding new service port "kube-system/kubernetes-dashboard:" at 10.0.145.160:443/TCP
I0417 00:03:10.590353    3324 proxier.go:968] Syncing Policies
I0417 00:03:10.590353    3324 proxier.go:1002] ====Applying Policy for default/kubernetes:https====
I0417 00:03:10.617696    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.619646    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299980)({
 ip: (string) (len=12) "35.239.61.98",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-23-ef-3d-62",
 hnsID: (string) (len=36) "662cb0a5-0e58-454a-bcac-8dd58539811e",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.619646    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=12) "35.239.61.98",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-23-ef-3d-62",
  hnsID: (string) (len=36) "662cb0a5-0e58-454a-bcac-8dd58539811e",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [default/kubernetes:https]
I0417 00:03:10.621658    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.630380    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"b86bd5dd-ac99-4eed-bb46-39cb79311bfd","HostComputeEndpoints":["662cb0a5-0e58-454a-bcac-8dd58539811e"],"FrontendVIPs":["10.0.0.1"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.630380    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.1, Id [b86bd5dd-ac99-4eed-bb46-39cb79311bfd]
I0417 00:03:10.630380    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.630380    3324 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns====
I0417 00:03:10.637214    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.637214    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299680)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "c343491d-bb8a-4667-906e-ab81f203fe80",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.654800    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.654800    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002996e0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "5cf3fc48-3f57-41e0-9692-9dce10d204ee",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.654800    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "c343491d-bb8a-4667-906e-ab81f203fe80",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "5cf3fc48-3f57-41e0-9692-9dce10d204ee",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns]
I0417 00:03:10.655763    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.662612    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"93d7da3b-3d4b-4b04-be92-e640ba860f3f","HostComputeEndpoints":["c343491d-bb8a-4667-906e-ab81f203fe80","5cf3fc48-3f57-41e0-9692-9dce10d204ee"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":17,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.663586    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [93d7da3b-3d4b-4b04-be92-e640ba860f3f]
I0417 00:03:10.663586    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.663586    3324 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns-tcp====
I0417 00:03:10.664568    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.664568    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299740)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "c343491d-bb8a-4667-906e-ab81f203fe80",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.666517    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.666517    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002997a0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "5cf3fc48-3f57-41e0-9692-9dce10d204ee",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.666517    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "c343491d-bb8a-4667-906e-ab81f203fe80",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "5cf3fc48-3f57-41e0-9692-9dce10d204ee",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns-tcp]
I0417 00:03:10.666517    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.687009    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"714602ac-9ac5-49e6-a5b3-f9c47d96e989","HostComputeEndpoints":["c343491d-bb8a-4667-906e-ab81f203fe80","5cf3fc48-3f57-41e0-9692-9dce10d204ee"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.687009    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [714602ac-9ac5-49e6-a5b3-f9c47d96e989]
I0417 00:03:10.687009    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.687009    3324 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:metrics====
I0417 00:03:10.688981    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.688981    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299800)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "c343491d-bb8a-4667-906e-ab81f203fe80",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.690918    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.690918    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299860)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "5cf3fc48-3f57-41e0-9692-9dce10d204ee",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.690918    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "c343491d-bb8a-4667-906e-ab81f203fe80",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "5cf3fc48-3f57-41e0-9692-9dce10d204ee",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:metrics]
I0417 00:03:10.690918    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.706560    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"364c7817-c33d-43e5-98fa-22f8cc8b2349","HostComputeEndpoints":["c343491d-bb8a-4667-906e-ab81f203fe80","5cf3fc48-3f57-41e0-9692-9dce10d204ee"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":9153,"ExternalPort":9153}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.706560    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [364c7817-c33d-43e5-98fa-22f8cc8b2349]
I0417 00:03:10.706560    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.706560    3324 proxier.go:1002] ====Applying Policy for kube-system/default-http-backend:http====
I0417 00:03:10.726651    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.726651    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002998c0)({
 ip: (string) (len=9) "10.64.2.9",
 port: (uint16) 8080,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-09",
 hnsID: (string) (len=36) "80a27db7-8cc9-49b0-af20-f6b4f4540fcb",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.726651    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.9",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-09",
  hnsID: (string) (len=36) "80a27db7-8cc9-49b0-af20-f6b4f4540fcb",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/default-http-backend:http]
I0417 00:03:10.726651    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.742032    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"b7be6797-93b7-4048-9a7d-67c3836c3bdf","HostComputeEndpoints":["80a27db7-8cc9-49b0-af20-f6b4f4540fcb"],"FrontendVIPs":["10.0.209.152"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.742032    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.209.152, Id [b7be6797-93b7-4048-9a7d-67c3836c3bdf]
I0417 00:03:10.760820    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"450e6dff-ede9-4de7-8fe3-1b9aa36dbc84","HostComputeEndpoints":["80a27db7-8cc9-49b0-af20-f6b4f4540fcb"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":30657}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.760820    3324 proxier.go:1149] Hns LoadBalancer resource created for nodePort resources 10.0.209.152, Id [450e6dff-ede9-4de7-8fe3-1b9aa36dbc84]
I0417 00:03:10.760820    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.760820    3324 proxier.go:1002] ====Applying Policy for kube-system/heapster:====
I0417 00:03:10.775879    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.775879    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0002999e0)({
 ip: (string) (len=10) "10.64.2.11",
 port: (uint16) 8082,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0b",
 hnsID: (string) (len=36) "95822f9c-a36a-4802-b5c1-2814bc06ef6c",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.775879    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.11",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0b",
  hnsID: (string) (len=36) "95822f9c-a36a-4802-b5c1-2814bc06ef6c",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/heapster:]
I0417 00:03:10.775879    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.795355    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"f5655f88-ee39-40a6-8d40-af7d9d0ac03f","HostComputeEndpoints":["95822f9c-a36a-4802-b5c1-2814bc06ef6c"],"FrontendVIPs":["10.0.192.96"],"PortMappings":[{"Protocol":6,"InternalPort":8082,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.795355    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.192.96, Id [f5655f88-ee39-40a6-8d40-af7d9d0ac03f]
I0417 00:03:10.795355    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.795355    3324 proxier.go:1002] ====Applying Policy for kube-system/kubernetes-dashboard:====
I0417 00:03:10.812976    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.812976    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299a40)({
 ip: (string) (len=9) "10.64.2.3",
 port: (uint16) 8443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-03",
 hnsID: (string) (len=36) "5b7fa8dd-16a3-4d96-b418-c10e66f55d70",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.812976    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.3",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-03",
  hnsID: (string) (len=36) "5b7fa8dd-16a3-4d96-b418-c10e66f55d70",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kubernetes-dashboard:]
I0417 00:03:10.842311    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.859894    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"9e346627-8ff6-479e-b224-4f3a661f652f","HostComputeEndpoints":["5b7fa8dd-16a3-4d96-b418-c10e66f55d70"],"FrontendVIPs":["10.0.145.160"],"PortMappings":[{"Protocol":6,"InternalPort":8443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.859894    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.145.160, Id [9e346627-8ff6-479e-b224-4f3a661f652f]
I0417 00:03:10.859894    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.859894    3324 proxier.go:1002] ====Applying Policy for kube-system/metrics-server:====
I0417 00:03:10.882309    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:03:10.882309    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299920)({
 ip: (string) (len=10) "10.64.2.10",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0a",
 hnsID: (string) (len=36) "35763114-086a-4635-bdae-9cff48973db5",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.882309    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.10",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0a",
  hnsID: (string) (len=36) "35763114-086a-4635-bdae-9cff48973db5",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/metrics-server:]
I0417 00:03:10.882309    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.900861    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"04d7a268-204d-4622-ad63-383abdd7a327","HostComputeEndpoints":["35763114-086a-4635-bdae-9cff48973db5"],"FrontendVIPs":["10.0.226.182"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:03:10.900861    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.226.182, Id [04d7a268-204d-4622-ad63-383abdd7a327]
I0417 00:03:10.900861    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:10.900861    3324 proxier.go:945] syncProxyRules took 314.3787ms
I0417 00:03:11.621063    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:11.655346    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:13.604319    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:13.654087    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:15.613178    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:15.661223    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:17.623935    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:17.679126    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:19.629612    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:19.689880    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:21.641235    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:21.689535    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:23.648273    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:23.706374    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:25.654979    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:25.712587    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:27.662584    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:27.721683    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:29.672699    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:29.729341    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:31.680735    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:31.737872    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:33.689252    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:33.745523    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:35.680497    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:35.744460    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:37.703075    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:37.759882    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:39.718164    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:39.770516    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:40.512064    3324 proxier.go:968] Syncing Policies
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:03:40.512064    3324 proxier.go:945] syncProxyRules took 10.5014ms
I0417 00:03:40.512064    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:03:41.725081    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:41.783271    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:43.732864    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:43.791080    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:45.740460    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:45.797258    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:47.749698    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:47.806360    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:49.759277    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:49.816654    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:51.769534    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:51.844779    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:53.778333    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:53.859385    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:55.789725    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:55.853506    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:57.796703    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:57.871391    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:59.807321    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:03:59.883084    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:01.810511    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:01.890099    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:03.845280    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:03.900140    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:05.855070    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:05.904406    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:07.866142    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:07.915693    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:09.878064    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:09.910379    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:10.521025    3324 proxier.go:968] Syncing Policies
I0417 00:04:10.521025    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521025    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521660    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521660    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521660    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521660    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521660    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521660    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:10.521660    3324 proxier.go:945] syncProxyRules took 634.7µs
I0417 00:04:10.521660    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:04:11.886559    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:11.931403    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:13.907356    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:13.942896    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:15.921815    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:15.952213    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:17.930888    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:17.947792    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:19.939992    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:19.969573    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:21.949104    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:21.979836    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:23.950339    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:23.995415    3324 config.go:141] Calling handler.OnEndpointsUpdate
Log file created at: 2019/04/17 00:04:26
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
E0417 00:04:26.266370    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname1. Not applying any policy
E0417 00:04:26.266370    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
E0417 00:04:26.266370    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname1. Not applying any policy
E0417 00:04:26.266370    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
I0417 00:04:25.968490    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:25.998692    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:26.201976    3324 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:04:26.201976    3324 proxier.go:968] Syncing Policies
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.201976    3324 proxier.go:945] syncProxyRules took 0s
I0417 00:04:26.201976    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:04:26.266370    3324 config.go:224] Calling handler.OnServiceAdd
I0417 00:04:26.266370    3324 proxier.go:332] Adding new service port "services-4436/multi-endpoint-test:portname1" at 10.0.203.230:80/TCP
I0417 00:04:26.266370    3324 proxier.go:332] Adding new service port "services-4436/multi-endpoint-test:portname2" at 10.0.203.230:81/TCP
I0417 00:04:26.266370    3324 proxier.go:968] Syncing Policies
I0417 00:04:26.266370    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.266370    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.266370    3324 proxier.go:1002] ====Applying Policy for services-4436/multi-endpoint-test:portname1====
I0417 00:04:26.266370    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-4436/multi-endpoint-test:portname1]
E0417 00:04:26.266370    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname1. Not applying any policy
I0417 00:04:26.266370    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.266370    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.266370    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.266370    3324 proxier.go:1002] ====Applying Policy for services-4436/multi-endpoint-test:portname2====
I0417 00:04:26.266370    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-4436/multi-endpoint-test:portname2]
E0417 00:04:26.266370    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
I0417 00:04:26.266370    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.266370    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.267345    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:26.267345    3324 proxier.go:945] syncProxyRules took 975.8µs
I0417 00:04:26.267345    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:04:27.981897    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:28.007566    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:29.991718    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:30.014116    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:32.001441    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:32.033989    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:34.005057    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:34.045000    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:36.019825    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:36.052159    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:38.030978    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:38.061361    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:40.044475    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:40.071060    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:42.072641    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:42.081418    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:43.657841    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:43.657841    3324 proxier.go:907] Setting endpoints for "services-4436/multi-endpoint-test:portname1" to [0xc000299bc0]
I0417 00:04:43.675577    3324 proxier.go:968] Syncing Policies
I0417 00:04:43.675577    3324 proxier.go:1002] ====Applying Policy for services-4436/multi-endpoint-test:portname1====
I0417 00:04:43.679453    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:04:43.679453    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000299bc0)({
 ip: (string) (len=9) "10.64.1.8",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-08",
 hnsID: (string) (len=36) "bdaae77f-1e38-4e75-abe6-435fe0463bc7",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:43.679453    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.1.8",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-8C-B9-05",
  hnsID: (string) (len=36) "bdaae77f-1e38-4e75-abe6-435fe0463bc7",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-4436/multi-endpoint-test:portname1]
I0417 00:04:43.679453    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00035aea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:44.062904    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:44.090059    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:46.071666    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:46.100424    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:48.080919    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:48.120891    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:50.090924    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:50.123182    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:52.100191    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:52.144170    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:54.119230    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:54.152567    3324 config.go:141] Calling handler.OnEndpointsUpdate
E0417 00:04:57.192925    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
E0417 00:04:57.192925    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
E0417 00:04:57.192925    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
E0417 00:04:57.192925    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
I0417 00:04:56.127143    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:56.160893    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:57.189981    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"f5bdf8e9-d261-4f89-9e8a-c4e8f0c0da41","HostComputeEndpoints":["bdaae77f-1e38-4e75-abe6-435fe0463bc7"],"FrontendVIPs":["10.0.203.230"],"PortMappings":[{"Protocol":6,"InternalPort":100,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:04:57.189981    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.203.230, Id [f5bdf8e9-d261-4f89-9e8a-c4e8f0c0da41]
I0417 00:04:57.191927    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00035aea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5bdf8e9-d261-4f89-9e8a-c4e8f0c0da41",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.191927    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.191927    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.191927    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.191927    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.191927    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.191927    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:1002] ====Applying Policy for services-4436/multi-endpoint-test:portname2====
I0417 00:04:57.192925    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-4436/multi-endpoint-test:portname2]
E0417 00:04:57.192925    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
I0417 00:04:57.192925    3324 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-4436/multi-endpoint-test"
I0417 00:04:57.192925    3324 proxier.go:945] syncProxyRules took 13.5173485s
I0417 00:04:57.192925    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:04:57.192925    3324 proxier.go:968] Syncing Policies
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:1002] ====Applying Policy for services-4436/multi-endpoint-test:portname2====
I0417 00:04:57.192925    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-4436/multi-endpoint-test:portname2]
E0417 00:04:57.192925    3324 proxier.go:1103] Endpoint information not available for service services-4436/multi-endpoint-test:portname2. Not applying any policy
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00035aea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5bdf8e9-d261-4f89-9e8a-c4e8f0c0da41",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.192925    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.193878    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:04:57.193878    3324 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-4436/multi-endpoint-test"
I0417 00:04:57.193878    3324 proxier.go:945] syncProxyRules took 952.9µs
I0417 00:04:57.193878    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:04:58.140734    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:04:58.188910    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:00.149192    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:00.191169    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:00.995795    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:00.995795    3324 proxier.go:907] Setting endpoints for "services-4436/multi-endpoint-test:portname1" to [0xc0006a6540]
I0417 00:05:00.995795    3324 proxier.go:907] Setting endpoints for "services-4436/multi-endpoint-test:portname2" to [0xc0006a65a0]
I0417 00:05:00.995795    3324 proxier.go:907] Setting endpoints for "services-4436/multi-endpoint-test:portname1" to [0xc0006a6600]
I0417 00:05:00.995795    3324 proxier.go:394] Service [&{[0 0 0 0 0 0 0 0 0 0 255 255 10 0 203 230] 80 TCP 0 100 {[]} None 10800 [] [] [] false 0 f5bdf8e9-d261-4f89-9e8a-c4e8f0c0da41  true <nil> {}}] is stale
I0417 00:05:00.995795    3324 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc00035aea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5bdf8e9-d261-4f89-9e8a-c4e8f0c0da41",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:02.014270    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:02.219986    3324 config.go:260] Calling handler.OnServiceDelete
I0417 00:05:14.032214    3324 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc000299bc0)({
 ip: (string) (len=9) "10.64.1.8",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-08",
 hnsID: (string) (len=36) "bdaae77f-1e38-4e75-abe6-435fe0463bc7",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:14.032214    3324 proxier.go:968] Syncing Policies
I0417 00:05:14.032214    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:14.033218    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:14.033218    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:14.033218    3324 proxier.go:1002] ====Applying Policy for services-4436/multi-endpoint-test:portname2====
I0417 00:05:14.033218    3324 proxier.go:907] Setting endpoints for "services-4436/multi-endpoint-test:portname2" to [0xc0000b03c0]
I0417 00:05:14.033218    3324 proxier.go:907] Setting endpoints for "services-4436/multi-endpoint-test:portname1" to [0xc0000b0480]
I0417 00:05:14.033218    3324 proxier.go:907] Setting endpoints for "services-4436/multi-endpoint-test:portname2" to [0xc0000b0540]
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:160] Calling handler.OnEndpointsDelete
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.033218    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.038072    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:05:14.038072    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0006a65a0)({
 ip: (string) (len=9) "10.64.1.9",
 port: (uint16) 101,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-09",
 hnsID: (string) (len=36) "088ef3c0-4eb7-4d03-ae3c-1604853042aa",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:14.038072    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.1.9",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-8C-B4-08",
  hnsID: (string) (len=36) "088ef3c0-4eb7-4d03-ae3c-1604853042aa",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-4436/multi-endpoint-test:portname2]
I0417 00:05:14.038072    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00035afc0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 81,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 101,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:14.175622    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:14.204503    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:16.166413    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:16.208843    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:18.184251    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:18.201290    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:20.187724    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:20.221363    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:22.193951    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:22.225748    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:24.200011    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:24.232250    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:26.205954    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:26.237662    3324 config.go:141] Calling handler.OnEndpointsUpdate
E0417 00:05:29.180103    3324 proxier.go:1124] Policy creation failed: hcnCreateLoadBalancer failed in Win32: The switch-port was not found. (0x803b0007) {"Success":false,"Error":"The switch-port was not found. ","ErrorCode":2151350279}
E0417 00:05:29.180103    3324 proxier.go:1124] Policy creation failed: hcnCreateLoadBalancer failed in Win32: The switch-port was not found. (0x803b0007) {"Success":false,"Error":"The switch-port was not found. ","ErrorCode":2151350279}
I0417 00:05:28.211785    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:28.243950    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:28.996809    3324 proxier.go:137] Hns loadbalancer policy resource, {"ID":"7addaa81-8d11-4bea-83d4-ca419ac63e71","HostComputeEndpoints":["088ef3c0-4eb7-4d03-ae3c-1604853042aa"],"FrontendVIPs":["10.0.203.230"],"PortMappings":[{"Protocol":6,"InternalPort":101,"ExternalPort":81}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:05:28.996809    3324 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.203.230, Id [7addaa81-8d11-4bea-83d4-ca419ac63e71]
I0417 00:05:28.996809    3324 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00035afc0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 81,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 101,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "7addaa81-8d11-4bea-83d4-ca419ac63e71",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:28.996809    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:28.996809    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:28.996809    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:28.996809    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:28.996809    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:28.996809    3324 proxier.go:1002] ====Applying Policy for services-4436/multi-endpoint-test:portname1====
I0417 00:05:29.014270    3324 proxier.go:137] Hns Endpoint resource, {}
I0417 00:05:29.014270    3324 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc0006a6600)({
 ip: (string) (len=9) "10.64.1.8",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-08",
 hnsID: (string) (len=36) "bdaae77f-1e38-4e75-abe6-435fe0463bc7",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.014270    3324 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.1.8",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-8C-B9-05",
  hnsID: (string) (len=36) "bdaae77f-1e38-4e75-abe6-435fe0463bc7",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-4436/multi-endpoint-test:portname1]
I0417 00:05:29.014270    3324 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00035aea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
E0417 00:05:29.180103    3324 proxier.go:1124] Policy creation failed: hcnCreateLoadBalancer failed in Win32: The switch-port was not found. (0x803b0007) {"Success":false,"Error":"The switch-port was not found. ","ErrorCode":2151350279}
I0417 00:05:29.180103    3324 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-4436/multi-endpoint-test"
I0417 00:05:29.180103    3324 proxier.go:945] syncProxyRules took 28.2431142s
I0417 00:05:29.180103    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:05:29.180103    3324 proxier.go:350] Removing service port "services-4436/multi-endpoint-test:portname1"
I0417 00:05:29.180103    3324 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc00035aea0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.181246    3324 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0006a6600)({
 ip: (string) (len=9) "10.64.1.8",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-08",
 hnsID: (string) (len=36) "bdaae77f-1e38-4e75-abe6-435fe0463bc7",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.181246    3324 proxier.go:350] Removing service port "services-4436/multi-endpoint-test:portname2"
I0417 00:05:29.181246    3324 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc00035afc0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.203.230,
 port: (int) 81,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 101,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "7addaa81-8d11-4bea-83d4-ca419ac63e71",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.219625    3324 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0006a65a0)({
 ip: (string) (len=9) "10.64.1.9",
 port: (uint16) 101,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-09",
 hnsID: (string) (len=36) "088ef3c0-4eb7-4d03-ae3c-1604853042aa",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.219625    3324 proxier.go:398] Endpoints are orphaned. Cleaning up
I0417 00:05:29.219625    3324 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0006a65a0)({
 ip: (string) (len=9) "10.64.1.9",
 port: (uint16) 101,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-09",
 hnsID: (string) (len=36) "088ef3c0-4eb7-4d03-ae3c-1604853042aa",
 refCount: (uint16) 0,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.219625    3324 proxier.go:398] Endpoints are orphaned. Cleaning up
I0417 00:05:29.219625    3324 proxier.go:131] Endpoint Cleanup, (*winkernel.endpointsInfo)(0xc0006a6600)({
 ip: (string) (len=9) "10.64.1.8",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-08",
 hnsID: (string) (len=36) "bdaae77f-1e38-4e75-abe6-435fe0463bc7",
 refCount: (uint16) 0,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.219625    3324 proxier.go:968] Syncing Policies
I0417 00:05:29.219625    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:945] syncProxyRules took 40.5429ms
I0417 00:05:29.220613    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:05:29.220613    3324 proxier.go:968] Syncing Policies
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:29.220613    3324 proxier.go:945] syncProxyRules took 0s
I0417 00:05:29.220613    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:05:30.220248    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:30.251498    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:32.229382    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:32.258680    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:34.237243    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:34.264561    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:36.246624    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:36.273322    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:38.253407    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:38.281195    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:40.264066    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:40.290442    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:42.270461    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:42.300526    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:44.278375    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:44.308153    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:46.295734    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:46.315298    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:48.305088    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:48.325119    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:50.310645    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:50.330623    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:52.321449    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:52.344963    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:54.327291    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:54.352598    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:56.327707    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:56.361101    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:58.343787    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:58.369564    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:05:59.211455    3324 proxier.go:968] Syncing Policies
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:05:59.211455    3324 proxier.go:945] syncProxyRules took 0s
I0417 00:05:59.211455    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:06:00.352678    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:00.378700    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:02.352727    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:02.379621    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:04.373814    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:04.396900    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:06.390472    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:06.407291    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:08.384919    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:08.419464    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:10.408217    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:10.427806    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:12.421287    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:12.446270    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:14.431435    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:14.448619    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:16.444755    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:16.463370    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:18.451370    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:18.477835    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:20.459198    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:20.476151    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:22.463638    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:22.494584    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:24.477086    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:24.501584    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:26.496872    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:26.513495    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:28.494726    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:28.508463    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:29.220973    3324 proxier.go:968] Syncing Policies
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:29.220973    3324 proxier.go:945] syncProxyRules took 0s
I0417 00:06:29.220973    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:06:30.519629    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:30.520443    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:32.528043    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:32.540206    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:34.539121    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:34.546035    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:36.549107    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:36.555893    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:38.556755    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:38.567038    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:40.564772    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:40.584899    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:42.589495    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:42.595386    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:44.598458    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:44.605717    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:46.605793    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:46.606792    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:48.613574    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:48.621830    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:50.609341    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:50.631004    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:52.632505    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:52.639374    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:54.631838    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:54.640246    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:56.647219    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:56.647873    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:58.654529    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:58.664017    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:06:59.220777    3324 proxier.go:968] Syncing Policies
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:06:59.220777    3324 proxier.go:945] syncProxyRules took 0s
I0417 00:06:59.220777    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:07:00.661981    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:00.671130    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:02.668245    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:02.681823    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:04.671956    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:04.689402    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:06.685508    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:06.686545    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:08.692754    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:08.706706    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:10.699760    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:10.713733    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:12.708064    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:12.708932    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:14.718210    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:14.735522    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:16.724741    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:16.744857    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:18.732447    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:18.755868    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:20.727678    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:20.764402    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:22.746795    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:22.773149    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:24.753734    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:24.770795    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:26.762257    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:26.764357    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:28.770189    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:28.787082    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:29.221061    3324 proxier.go:968] Syncing Policies
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:29.221061    3324 proxier.go:945] syncProxyRules took 0s
I0417 00:07:29.221061    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:07:30.766842    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:30.797595    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:32.783277    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:32.806853    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:34.795762    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:34.812839    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:36.811880    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:36.841896    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:38.819335    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:38.856742    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:40.831271    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:40.863621    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:42.839915    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:42.877269    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:44.846353    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:44.880368    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:46.844526    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:46.902375    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:48.861370    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:48.913507    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:50.872249    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:50.923006    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:52.884241    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:52.932797    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:54.888278    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:54.943715    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:56.901775    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:56.954711    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:58.911233    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:58.963831    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:07:59.227742    3324 proxier.go:968] Syncing Policies
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:07:59.227996    3324 proxier.go:945] syncProxyRules took 254.1µs
I0417 00:07:59.227996    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:08:00.925355    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:00.973916    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:02.933533    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:02.982772    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:04.940135    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:04.992416    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:06.946913    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:07.000889    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:08.950998    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:09.009306    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:10.977129    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:11.023839    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:12.976533    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:13.033775    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:14.989812    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:15.043355    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:16.995529    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:17.051900    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:19.001614    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:19.060741    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:21.009265    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:21.058505    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:23.016547    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:23.077354    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:25.020390    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:25.085991    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:27.034190    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:27.098479    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:29.041466    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:29.107593    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:29.237522    3324 proxier.go:968] Syncing Policies
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfb00)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "364c7817-c33d-43e5-98fa-22f8cc8b2349",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfd40)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f5655f88-ee39-40a6-8d40-af7d9d0ac03f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df9e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "714602ac-9ac5-49e6-a5b3-f9c47d96e989",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af680)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b86bd5dd-ac99-4eed-bb46-39cb79311bfd",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002df8c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "93d7da3b-3d4b-4b04-be92-e640ba860f3f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002dfc20)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b7be6797-93b7-4048-9a7d-67c3836c3bdf",
 nodePorthnsID: (string) (len=36) "450e6dff-ede9-4de7-8fe3-1b9aa36dbc84",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0003ae7e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "9e346627-8ff6-479e-b224-4f3a661f652f",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002af560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "04d7a268-204d-4622-ad63-383abdd7a327",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:08:29.237522    3324 proxier.go:945] syncProxyRules took 187µs
I0417 00:08:29.237522    3324 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:08:31.048399    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:31.115648    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:33.056788    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:33.115940    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:35.048803    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:35.119136    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:37.070126    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:37.140442    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:39.076531    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:39.149076    3324 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:08:39.517356    3324 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 2 items received
Log file created at: 2019/04/17 00:10:13
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
Log file created at: 2019/04/17 00:10:13
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
W0417 00:10:13.570170     432 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0417 00:10:13.524329     432 flags.go:33] FLAG: --alsologtostderr="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --bind-address="0.0.0.0"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --cleanup="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --cleanup-iptables="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --cleanup-ipvs="true"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --cluster-cidr="10.64.0.0/14"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --config=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --config-sync-period="15m0s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --conntrack-max="0"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --conntrack-min="131072"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --enable-dsr="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --feature-gates=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --healthz-port="10256"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --help="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --hostname-override=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --iptables-sync-period="30s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --ipvs-scheduler=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --ipvs-strict-arp="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --ipvs-sync-period="30s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --kube-api-burst="10"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --kube-api-qps="5"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --kubeconfig="C:\\etc\\kubernetes\\kubeproxy.kubeconfig"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --log-backtrace-at=":0"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --log-dir=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --log-file="C:\\etc\\kubernetes\\logs\\kube-proxy.log"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --log-flush-frequency="5s"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --logtostderr="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --masquerade-all="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --master=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --metrics-port="10249"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --network-name=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --nodeport-addresses="[]"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --oom-score-adj="-999"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --profiling="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --proxy-mode="kernelspace"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --proxy-port-range=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --resource-container=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --skip-headers="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --source-vip=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --stderrthreshold="2"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --udp-timeout="250ms"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --v="4"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --version="false"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --vmodule=""
I0417 00:10:13.560375     432 flags.go:33] FLAG: --windows-service="true"
I0417 00:10:13.560375     432 flags.go:33] FLAG: --write-config-to=""
I0417 00:10:13.563291     432 service.go:62] Running kube-proxy as a Windows service!
I0417 00:10:13.564299     432 service.go:72] Service running
W0417 00:10:13.570170     432 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0417 00:10:13.572088     432 feature_gate.go:226] feature gates: &{map[]}
I0417 00:10:13.854273     432 server_windows.go:102] Using Kernelspace Proxier.
I0417 00:10:13.994415     432 proxier.go:522] network-name flag not set. Checking environment variable
I0417 00:10:14.022727     432 proxier.go:534] Hns Network loaded with info = &{l2bridge 4ce1cf2d-afe8-44b9-9a29-afde3183c158 L2Bridge []}
I0417 00:10:14.025671     432 proxier.go:611] minSyncPeriod: 0s, syncPeriod: 30s, burstSyncs: 2
I0417 00:10:14.026642     432 server.go:557] Version: v1.15.0-alpha.0.1887+bae0630ef897d6-dirty
I0417 00:10:14.026642     432 server.go:574] setting OOM scores is unsupported in this build
I0417 00:10:14.029563     432 healthcheck.go:309] Starting goroutine for healthz on 0.0.0.0:10256
I0417 00:10:14.035492     432 config.go:202] Starting service config controller
I0417 00:10:14.035492     432 controller_utils.go:1028] Waiting for caches to sync for service config controller
I0417 00:10:14.035492     432 config.go:102] Starting endpoints config controller
I0417 00:10:14.035492     432 controller_utils.go:1028] Waiting for caches to sync for endpoints config controller
I0417 00:10:14.035942     432 bounded_frequency_runner.go:170] sync-runner Loop running
I0417 00:10:14.044268     432 reflector.go:128] Starting reflector *v1.Endpoints (15m0s) from k8s.io/client-go/informers/factory.go:133
I0417 00:10:14.044268     432 reflector.go:166] Listing and watching *v1.Endpoints from k8s.io/client-go/informers/factory.go:133
I0417 00:10:14.049148     432 reflector.go:128] Starting reflector *v1.Service (15m0s) from k8s.io/client-go/informers/factory.go:133
I0417 00:10:14.049148     432 reflector.go:166] Listing and watching *v1.Service from k8s.io/client-go/informers/factory.go:133
I0417 00:10:14.066671     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.066671     432 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc000238a20]
I0417 00:10:14.068633     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.068633     432 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc000238a80]
I0417 00:10:14.068633     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.068633     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.068633     432 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc000238ae0 0xc000238b40]
I0417 00:10:14.068633     432 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc000238ba0 0xc000238c00]
I0417 00:10:14.068633     432 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc000238c60 0xc000238cc0]
I0417 00:10:14.068633     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.068633     432 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc000238d20]
I0417 00:10:14.068633     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.068633     432 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc000238d80]
I0417 00:10:14.068633     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.068633     432 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000238de0]
I0417 00:10:14.068633     432 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:10:14.078399     432 config.go:224] Calling handler.OnServiceAdd
I0417 00:10:14.078399     432 config.go:224] Calling handler.OnServiceAdd
I0417 00:10:14.078399     432 config.go:224] Calling handler.OnServiceAdd
I0417 00:10:14.078399     432 config.go:224] Calling handler.OnServiceAdd
I0417 00:10:14.078399     432 config.go:224] Calling handler.OnServiceAdd
I0417 00:10:14.078399     432 config.go:224] Calling handler.OnServiceAdd
I0417 00:10:14.136004     432 shared_informer.go:123] caches populated
I0417 00:10:14.136004     432 shared_informer.go:123] caches populated
I0417 00:10:14.136004     432 controller_utils.go:1035] Caches are synced for service config controller
I0417 00:10:14.136004     432 controller_utils.go:1035] Caches are synced for endpoints config controller
I0417 00:10:14.136004     432 config.go:210] Calling handler.OnServiceSynced()
I0417 00:10:14.136004     432 config.go:110] Calling handler.OnEndpointsSynced()
I0417 00:10:14.137957     432 proxier.go:949] Not syncing hns until Services and Endpoints have been received from master
I0417 00:10:14.137957     432 proxier.go:945] syncProxyRules took 1.9529ms
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "default/kubernetes:https" at 10.0.0.1:443/TCP
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "kube-system/kube-dns:dns" at 10.0.0.10:53/UDP
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.0.0.10:53/TCP
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "kube-system/kube-dns:metrics" at 10.0.0.10:9153/TCP
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "kube-system/default-http-backend:http" at 10.0.209.152:80/TCP
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "kube-system/heapster:" at 10.0.192.96:80/TCP
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "kube-system/kubernetes-dashboard:" at 10.0.145.160:443/TCP
I0417 00:10:14.144794     432 proxier.go:332] Adding new service port "kube-system/metrics-server:" at 10.0.226.182:443/TCP
I0417 00:10:14.144794     432 proxier.go:968] Syncing Policies
I0417 00:10:14.144794     432 proxier.go:1002] ====Applying Policy for kube-system/default-http-backend:http====
I0417 00:10:14.166317     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.167291     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238a20)({
 ip: (string) (len=9) "10.64.2.9",
 port: (uint16) 8080,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-09",
 hnsID: (string) (len=36) "cace153e-907e-4b8f-8458-d3140b8c6978",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.167291     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.9",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-09",
  hnsID: (string) (len=36) "cace153e-907e-4b8f-8458-d3140b8c6978",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/default-http-backend:http]
I0417 00:10:14.169231     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.190726     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"18aea178-79d4-44d3-a1ac-553b310edbc0","HostComputeEndpoints":["cace153e-907e-4b8f-8458-d3140b8c6978"],"FrontendVIPs":["10.0.209.152"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.190726     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.209.152, Id [18aea178-79d4-44d3-a1ac-553b310edbc0]
I0417 00:10:14.216150     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"973153e8-033e-42dc-a3c4-15616e0947d7","HostComputeEndpoints":["cace153e-907e-4b8f-8458-d3140b8c6978"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":30657}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.216150     432 proxier.go:1149] Hns LoadBalancer resource created for nodePort resources 10.0.209.152, Id [973153e8-033e-42dc-a3c4-15616e0947d7]
I0417 00:10:14.216150     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.216150     432 proxier.go:1002] ====Applying Policy for kube-system/heapster:====
I0417 00:10:14.247382     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.247382     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238d20)({
 ip: (string) (len=10) "10.64.2.11",
 port: (uint16) 8082,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0b",
 hnsID: (string) (len=36) "ed572478-ec77-409c-92fb-fb5652b80c7e",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.247382     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.11",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0b",
  hnsID: (string) (len=36) "ed572478-ec77-409c-92fb-fb5652b80c7e",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/heapster:]
I0417 00:10:14.247382     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.259557     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"6cf6974b-3479-4c59-b0ea-ee3da847aa36","HostComputeEndpoints":["ed572478-ec77-409c-92fb-fb5652b80c7e"],"FrontendVIPs":["10.0.192.96"],"PortMappings":[{"Protocol":6,"InternalPort":8082,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.260535     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.192.96, Id [6cf6974b-3479-4c59-b0ea-ee3da847aa36]
I0417 00:10:14.260535     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.260535     432 proxier.go:1002] ====Applying Policy for kube-system/kubernetes-dashboard:====
I0417 00:10:14.285839     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.285839     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238d80)({
 ip: (string) (len=9) "10.64.2.3",
 port: (uint16) 8443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-03",
 hnsID: (string) (len=36) "77eda9b2-b9fc-47af-b5b8-3e56c5a88fef",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.285839     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.3",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-03",
  hnsID: (string) (len=36) "77eda9b2-b9fc-47af-b5b8-3e56c5a88fef",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kubernetes-dashboard:]
I0417 00:10:14.285839     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.298628     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"3e6a18ac-7bec-4e35-b3f3-2f62d74a8443","HostComputeEndpoints":["77eda9b2-b9fc-47af-b5b8-3e56c5a88fef"],"FrontendVIPs":["10.0.145.160"],"PortMappings":[{"Protocol":6,"InternalPort":8443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.298628     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.145.160, Id [3e6a18ac-7bec-4e35-b3f3-2f62d74a8443]
I0417 00:10:14.298628     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.298628     432 proxier.go:1002] ====Applying Policy for kube-system/metrics-server:====
I0417 00:10:14.320628     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.320628     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238a80)({
 ip: (string) (len=10) "10.64.2.10",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0a",
 hnsID: (string) (len=36) "4a8537e2-57dd-4b8c-9be7-be9e3fd9680e",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.320628     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.10",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0a",
  hnsID: (string) (len=36) "4a8537e2-57dd-4b8c-9be7-be9e3fd9680e",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/metrics-server:]
I0417 00:10:14.320628     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.338377     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"8fcbdc19-cbb1-4443-bc73-9ad97f79f26e","HostComputeEndpoints":["4a8537e2-57dd-4b8c-9be7-be9e3fd9680e"],"FrontendVIPs":["10.0.226.182"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.338377     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.226.182, Id [8fcbdc19-cbb1-4443-bc73-9ad97f79f26e]
I0417 00:10:14.338377     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.338377     432 proxier.go:1002] ====Applying Policy for default/kubernetes:https====
I0417 00:10:14.364336     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.364336     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238de0)({
 ip: (string) (len=12) "35.239.61.98",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-23-ef-3d-62",
 hnsID: (string) (len=36) "c174fbf4-9513-4e62-9bc6-73529f8400bd",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.364336     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=12) "35.239.61.98",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-23-ef-3d-62",
  hnsID: (string) (len=36) "c174fbf4-9513-4e62-9bc6-73529f8400bd",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [default/kubernetes:https]
I0417 00:10:14.364336     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.383260     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07","HostComputeEndpoints":["c174fbf4-9513-4e62-9bc6-73529f8400bd"],"FrontendVIPs":["10.0.0.1"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.383260     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.1, Id [8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07]
I0417 00:10:14.383260     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.383260     432 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns====
I0417 00:10:14.405086     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.405086     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238ae0)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "c9503053-dc6d-415f-894f-22e80f1cd79b",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.439730     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.439730     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238b40)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "53b86861-637b-4741-873c-0402f5326820",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.439730     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "c9503053-dc6d-415f-894f-22e80f1cd79b",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "53b86861-637b-4741-873c-0402f5326820",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns]
I0417 00:10:14.439730     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.462442     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"f9973323-2313-4684-a030-aab2f72c58ad","HostComputeEndpoints":["c9503053-dc6d-415f-894f-22e80f1cd79b","53b86861-637b-4741-873c-0402f5326820"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":17,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.462442     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [f9973323-2313-4684-a030-aab2f72c58ad]
I0417 00:10:14.462442     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.462442     432 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns-tcp====
I0417 00:10:14.465614     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.465614     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238ba0)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "c9503053-dc6d-415f-894f-22e80f1cd79b",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.467558     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.468571     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238c00)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "53b86861-637b-4741-873c-0402f5326820",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.468571     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "c9503053-dc6d-415f-894f-22e80f1cd79b",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "53b86861-637b-4741-873c-0402f5326820",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns-tcp]
I0417 00:10:14.468571     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.489003     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"76974f2c-c1a4-4fe1-a105-c4ac171d1a16","HostComputeEndpoints":["c9503053-dc6d-415f-894f-22e80f1cd79b","53b86861-637b-4741-873c-0402f5326820"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.489003     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [76974f2c-c1a4-4fe1-a105-c4ac171d1a16]
I0417 00:10:14.490033     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.490033     432 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:metrics====
I0417 00:10:14.492944     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.492944     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238c60)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "c9503053-dc6d-415f-894f-22e80f1cd79b",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.494902     432 proxier.go:137] Hns Endpoint resource, {}
I0417 00:10:14.494902     432 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000238cc0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "53b86861-637b-4741-873c-0402f5326820",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.495870     432 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "c9503053-dc6d-415f-894f-22e80f1cd79b",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "53b86861-637b-4741-873c-0402f5326820",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:metrics]
I0417 00:10:14.495870     432 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.513420     432 proxier.go:137] Hns loadbalancer policy resource, {"ID":"2a058ece-e6b3-4012-8e98-0242100443c1","HostComputeEndpoints":["c9503053-dc6d-415f-894f-22e80f1cd79b","53b86861-637b-4741-873c-0402f5326820"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":9153,"ExternalPort":9153}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:10:14.513420     432 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [2a058ece-e6b3-4012-8e98-0242100443c1]
I0417 00:10:14.513420     432 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:14.514448     432 proxier.go:945] syncProxyRules took 376.4911ms
I0417 00:10:15.407857     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:15.510501     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:17.386831     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:17.526589     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:19.397294     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:19.534271     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:21.403258     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:21.539686     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:23.410225     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:23.549149     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:25.416627     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:25.555911     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:27.424182     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:27.564042     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:29.437442     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:29.579011     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:31.444573     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:31.585156     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:33.451707     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:33.594257     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:35.459343     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:35.602220     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:37.465033     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:37.615911     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:39.475302     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:39.639332     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:41.481806     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:41.649574     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:43.489554     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:43.682201     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:44.098722     432 proxier.go:968] Syncing Policies
I0417 00:10:44.098722     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.098722     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.098722     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.098722     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.098722     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.098722     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.099729     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.099729     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:10:44.099729     432 proxier.go:945] syncProxyRules took 62.5067ms
I0417 00:10:44.099729     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:10:45.497686     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:45.691892     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:47.506433     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:47.701468     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:49.500603     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:49.722919     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:51.517034     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:51.733991     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:53.531977     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:53.727897     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:55.538514     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:55.751572     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:57.545312     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:57.752325     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:59.554970     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:10:59.771047     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:01.563524     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:01.779810     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:03.571249     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:03.795287     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:05.578806     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:05.800992     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:07.587484     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:07.811836     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:09.593644     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:09.810923     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:11.603646     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:11.828750     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:13.613850     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:13.825140     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:14.111490     432 proxier.go:968] Syncing Policies
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:14.111490     432 proxier.go:945] syncProxyRules took 0s
I0417 00:11:14.111490     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:11:15.633283     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:15.851676     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:17.644638     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:17.860647     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:19.655732     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:19.869867     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:21.665284     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:21.877884     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:23.679928     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:23.887022     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:25.686283     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:25.894034     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:27.693478     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:27.905460     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:29.699471     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:29.938937     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:31.705597     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:31.948630     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:33.718913     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:33.959132     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:35.726506     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:35.966574     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:37.733664     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:37.976214     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:39.741777     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:39.987325     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:41.749110     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:41.994829     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:43.757616     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:44.003379     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:44.117120     432 proxier.go:968] Syncing Policies
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:11:44.117120     432 proxier.go:945] syncProxyRules took 173.5µs
I0417 00:11:44.117120     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:11:45.765769     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:46.012307     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:47.758786     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:48.022567     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:49.781526     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:50.036843     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:51.792076     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:52.045639     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:53.792843     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:54.056298     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:55.807558     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:56.065787     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:57.814596     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:58.073476     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:11:59.809419     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:00.081719     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:01.827795     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:02.090956     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:03.837335     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:04.098692     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:05.832807     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:06.107988     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:07.851851     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:08.117758     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:09.858226     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:10.124435     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:11.866959     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:12.132078     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:13.875232     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:14.117244     432 proxier.go:968] Syncing Policies
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:14.117244     432 proxier.go:945] syncProxyRules took 0s
I0417 00:12:14.117244     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:12:14.141675     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:15.882739     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:16.149176     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:17.891341     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:18.158556     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:19.902217     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:20.173628     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:21.909054     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:22.167442     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:23.913274     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:24.186992     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:25.931650     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:26.195896     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:27.940404     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:28.205284     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:29.947857     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:30.215028     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:31.957421     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:32.223632     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:33.965178     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:34.232617     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:35.971316     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:36.241058     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:37.977966     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:38.249420     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:39.984874     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:40.256100     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:41.992796     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:42.265900     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:44.000912     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:44.129565     432 proxier.go:968] Syncing Policies
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:12:44.129565     432 proxier.go:945] syncProxyRules took 0s
I0417 00:12:44.129565     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:12:44.274783     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:46.010479     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:46.283894     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:48.019297     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:48.292989     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:50.026710     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:50.301934     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:52.034831     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:52.311183     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:54.042489     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:54.317364     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:56.048652     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:56.324519     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:58.044133     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:12:58.334267     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:00.064701     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:00.326606     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:02.064252     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:02.350134     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:04.081002     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:04.359803     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:06.088767     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:06.370932     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:08.098897     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:08.380644     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:10.104679     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:10.383413     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:12.111225     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:12.404155     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:14.118669     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:14.129607     432 proxier.go:968] Syncing Policies
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:14.129607     432 proxier.go:945] syncProxyRules took 0s
I0417 00:13:14.129607     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:13:14.412229     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:16.125510     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:16.421218     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:18.135694     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:18.429186     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:20.142587     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:20.437052     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:22.149447     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:22.445208     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:24.162912     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:24.454269     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:26.173951     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:26.462106     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:28.179760     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:28.468582     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:30.186317     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:30.479034     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:32.194135     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:32.486026     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:34.202817     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:34.495026     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:36.210435     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:36.503134     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:38.217509     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:38.512715     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:40.219117     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:40.521790     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:42.228854     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:42.527517     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:44.139329     432 proxier.go:968] Syncing Policies
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:13:44.139329     432 proxier.go:945] syncProxyRules took 0s
I0417 00:13:44.139329     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:13:44.227187     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:44.525901     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:46.244961     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:46.548255     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:48.254988     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:48.555629     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:50.276336     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:50.579082     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:52.286431     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:52.596462     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:54.294173     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:54.603605     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:56.302582     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:56.612244     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:58.309358     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:13:58.625685     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:00.316969     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:00.634725     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:02.326083     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:02.642142     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:04.333743     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:04.650097     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:06.341848     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:06.659483     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:08.348523     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:08.667014     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:10.358967     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:10.675409     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:12.370036     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:12.676787     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:14.140042     432 proxier.go:968] Syncing Policies
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e5a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "76974f2c-c1a4-4fe1-a105-c4ac171d1a16",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e6c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2a058ece-e6b3-4012-8e98-0242100443c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025de60)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "18aea178-79d4-44d3-a1ac-553b310edbc0",
 nodePorthnsID: (string) (len=36) "973153e8-033e-42dc-a3c4-15616e0947d7",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "6cf6974b-3479-4c59-b0ea-ee3da847aa36",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "3e6a18ac-7bec-4e35-b3f3-2f62d74a8443",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00025e240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8fcbdc19-cbb1-4443-bc73-9ad97f79f26e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "8ed13fe7-0ce0-49e6-ae8b-a7fc34e9fd07",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc00024e480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "f9973323-2313-4684-a030-aab2f72c58ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:14:14.140042     432 proxier.go:945] syncProxyRules took 0s
I0417 00:14:14.140042     432 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:14:14.378765     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:14.695148     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:16.389802     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:16.704122     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:18.395878     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:18.712996     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:20.404070     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:20.720492     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:22.410888     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:22.730091     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:24.420880     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:24.737221     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:26.429716     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:26.751337     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:28.438110     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:28.760603     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:30.450496     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:30.751837     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:32.466333     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:32.759471     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:34.473815     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:34.783382     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:36.480480     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:36.792697     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:38.488610     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:38.803136     432 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:14:39.058718     432 service.go:85] Service stopping
Log file created at: 2019/04/17 00:16:16
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
Log file created at: 2019/04/17 00:16:16
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
W0417 00:16:16.269966    1248 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0417 00:16:16.167440    1248 flags.go:33] FLAG: --alsologtostderr="false"
I0417 00:16:16.227794    1248 flags.go:33] FLAG: --bind-address="0.0.0.0"
I0417 00:16:16.227794    1248 flags.go:33] FLAG: --cleanup="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --cleanup-iptables="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --cleanup-ipvs="true"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --cluster-cidr="10.64.0.0/14"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --config=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --config-sync-period="15m0s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --conntrack-max="0"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --conntrack-max-per-core="32768"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --conntrack-min="131072"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --enable-dsr="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --feature-gates=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --healthz-port="10256"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --help="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --hostname-override=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --iptables-masquerade-bit="14"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --iptables-min-sync-period="0s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --iptables-sync-period="30s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --ipvs-exclude-cidrs="[]"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --ipvs-min-sync-period="0s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --ipvs-scheduler=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --ipvs-strict-arp="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --ipvs-sync-period="30s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --kube-api-burst="10"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --kube-api-qps="5"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --kubeconfig="C:\\etc\\kubernetes\\kubeproxy.kubeconfig"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --log-backtrace-at=":0"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --log-dir=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --log-file="C:\\etc\\kubernetes\\logs\\kube-proxy.log"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --log-flush-frequency="5s"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --logtostderr="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --masquerade-all="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --master=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --metrics-port="10249"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --network-name=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --nodeport-addresses="[]"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --oom-score-adj="-999"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --profiling="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --proxy-mode="kernelspace"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --proxy-port-range=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --resource-container=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --skip-headers="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --source-vip=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --stderrthreshold="2"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --udp-timeout="250ms"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --v="4"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --version="false"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --vmodule=""
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --windows-service="true"
I0417 00:16:16.236464    1248 flags.go:33] FLAG: --write-config-to=""
I0417 00:16:16.240714    1248 service.go:62] Running kube-proxy as a Windows service!
I0417 00:16:16.241612    1248 service.go:72] Service running
W0417 00:16:16.269966    1248 server.go:215] WARNING: all flags other than --config, --write-config-to, and --cleanup are deprecated. Please begin using a config file ASAP.
I0417 00:16:16.271929    1248 feature_gate.go:226] feature gates: &{map[]}
I0417 00:16:16.499463    1248 server_windows.go:102] Using Kernelspace Proxier.
I0417 00:16:16.758266    1248 proxier.go:522] network-name flag not set. Checking environment variable
I0417 00:16:16.772069    1248 proxier.go:534] Hns Network loaded with info = &{l2bridge 4ce1cf2d-afe8-44b9-9a29-afde3183c158 L2Bridge []}
I0417 00:16:16.775758    1248 proxier.go:611] minSyncPeriod: 0s, syncPeriod: 30s, burstSyncs: 2
I0417 00:16:16.777744    1248 server.go:557] Version: v1.15.0-alpha.0.1887+bae0630ef897d6-dirty
I0417 00:16:16.777744    1248 server.go:574] setting OOM scores is unsupported in this build
I0417 00:16:16.780728    1248 healthcheck.go:309] Starting goroutine for healthz on 0.0.0.0:10256
I0417 00:16:16.788506    1248 config.go:202] Starting service config controller
I0417 00:16:16.788506    1248 controller_utils.go:1028] Waiting for caches to sync for service config controller
I0417 00:16:16.788506    1248 config.go:102] Starting endpoints config controller
I0417 00:16:16.788506    1248 controller_utils.go:1028] Waiting for caches to sync for endpoints config controller
I0417 00:16:16.792391    1248 bounded_frequency_runner.go:170] sync-runner Loop running
I0417 00:16:16.804180    1248 reflector.go:128] Starting reflector *v1.Endpoints (15m0s) from k8s.io/client-go/informers/factory.go:133
I0417 00:16:16.805113    1248 reflector.go:166] Listing and watching *v1.Endpoints from k8s.io/client-go/informers/factory.go:133
I0417 00:16:16.816918    1248 reflector.go:128] Starting reflector *v1.Service (15m0s) from k8s.io/client-go/informers/factory.go:133
I0417 00:16:16.816918    1248 reflector.go:166] Listing and watching *v1.Service from k8s.io/client-go/informers/factory.go:133
I0417 00:16:16.885172    1248 config.go:224] Calling handler.OnServiceAdd
I0417 00:16:16.885172    1248 config.go:224] Calling handler.OnServiceAdd
I0417 00:16:16.885172    1248 config.go:224] Calling handler.OnServiceAdd
I0417 00:16:16.885172    1248 config.go:224] Calling handler.OnServiceAdd
I0417 00:16:16.885172    1248 config.go:224] Calling handler.OnServiceAdd
I0417 00:16:16.885172    1248 config.go:224] Calling handler.OnServiceAdd
I0417 00:16:16.885172    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.889071    1248 shared_informer.go:123] caches populated
I0417 00:16:16.889071    1248 controller_utils.go:1035] Caches are synced for endpoints config controller
I0417 00:16:16.889071    1248 config.go:110] Calling handler.OnEndpointsSynced()
I0417 00:16:16.891976    1248 proxier.go:949] Not syncing hns until Services and Endpoints have been received from master
I0417 00:16:16.891976    1248 proxier.go:945] syncProxyRules took 2.9047ms
I0417 00:16:16.891976    1248 shared_informer.go:123] caches populated
I0417 00:16:16.891976    1248 controller_utils.go:1035] Caches are synced for service config controller
I0417 00:16:16.891976    1248 config.go:210] Calling handler.OnServiceSynced()
I0417 00:16:16.885172    1248 proxier.go:907] Setting endpoints for "default/kubernetes:https" to [0xc000120d20]
I0417 00:16:16.900812    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.900812    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.900812    1248 proxier.go:907] Setting endpoints for "kube-system/heapster:" to [0xc00006c900]
I0417 00:16:16.900812    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.900812    1248 proxier.go:907] Setting endpoints for "kube-system/kubernetes-dashboard:" to [0xc00006ca20]
I0417 00:16:16.900812    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.900812    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.900812    1248 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns" to [0xc00006ca80 0xc00006cae0]
I0417 00:16:16.900812    1248 proxier.go:907] Setting endpoints for "kube-system/kube-dns:dns-tcp" to [0xc00006cb40 0xc00006cba0]
I0417 00:16:16.900812    1248 proxier.go:907] Setting endpoints for "kube-system/kube-dns:metrics" to [0xc00006cc00 0xc00006cc60]
I0417 00:16:16.900812    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.900812    1248 proxier.go:907] Setting endpoints for "kube-system/default-http-backend:http" to [0xc00006ccc0]
I0417 00:16:16.900812    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:16:16.900812    1248 proxier.go:907] Setting endpoints for "kube-system/metrics-server:" to [0xc00006cd20]
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "kube-system/kube-dns:dns" at 10.0.0.10:53/UDP
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.0.0.10:53/TCP
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "kube-system/kube-dns:metrics" at 10.0.0.10:9153/TCP
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "kube-system/default-http-backend:http" at 10.0.209.152:80/TCP
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "kube-system/heapster:" at 10.0.192.96:80/TCP
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "kube-system/kubernetes-dashboard:" at 10.0.145.160:443/TCP
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "kube-system/metrics-server:" at 10.0.226.182:443/TCP
I0417 00:16:16.906697    1248 proxier.go:332] Adding new service port "default/kubernetes:https" at 10.0.0.1:443/TCP
I0417 00:16:16.906697    1248 proxier.go:968] Syncing Policies
I0417 00:16:16.906697    1248 proxier.go:1002] ====Applying Policy for kube-system/metrics-server:====
I0417 00:16:16.939816    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:16.941758    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006cd20)({
 ip: (string) (len=10) "10.64.2.10",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0a",
 hnsID: (string) (len=36) "97759997-9f7c-4de8-b4a3-ed9d1a8ab15f",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:16.941758    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.10",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0a",
  hnsID: (string) (len=36) "97759997-9f7c-4de8-b4a3-ed9d1a8ab15f",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/metrics-server:]
I0417 00:16:16.942834    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:16.964233    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"75f39f91-d46b-46f1-b48e-d1330949369e","HostComputeEndpoints":["97759997-9f7c-4de8-b4a3-ed9d1a8ab15f"],"FrontendVIPs":["10.0.226.182"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:16.964233    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.226.182, Id [75f39f91-d46b-46f1-b48e-d1330949369e]
I0417 00:16:16.964233    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:16.964233    1248 proxier.go:1002] ====Applying Policy for default/kubernetes:https====
I0417 00:16:16.983755    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:16.983755    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc000120d20)({
 ip: (string) (len=12) "35.239.61.98",
 port: (uint16) 443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-23-ef-3d-62",
 hnsID: (string) (len=36) "e16ec7b2-6d06-4180-9204-9c237ca81fed",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:16.983755    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=12) "35.239.61.98",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-23-ef-3d-62",
  hnsID: (string) (len=36) "e16ec7b2-6d06-4180-9204-9c237ca81fed",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [default/kubernetes:https]
I0417 00:16:16.983755    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.003415    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"b0842340-5f92-4adc-a931-bbdeb28071ee","HostComputeEndpoints":["e16ec7b2-6d06-4180-9204-9c237ca81fed"],"FrontendVIPs":["10.0.0.1"],"PortMappings":[{"Protocol":6,"InternalPort":443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.003415    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.1, Id [b0842340-5f92-4adc-a931-bbdeb28071ee]
I0417 00:16:17.003415    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.003415    1248 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns====
I0417 00:16:17.023971    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.023971    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006ca80)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "2369593b-48f3-4d80-a6ca-9fef6c2ce874",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.057068    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.057068    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006cae0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b3bcb4e9-8026-4759-8035-082e1d650170",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.057068    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "2369593b-48f3-4d80-a6ca-9fef6c2ce874",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "b3bcb4e9-8026-4759-8035-082e1d650170",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns]
I0417 00:16:17.057068    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.083634    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"661edda6-cdbe-447c-a537-75c28c036609","HostComputeEndpoints":["2369593b-48f3-4d80-a6ca-9fef6c2ce874","b3bcb4e9-8026-4759-8035-082e1d650170"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":17,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.083634    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [661edda6-cdbe-447c-a537-75c28c036609]
I0417 00:16:17.083634    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.083634    1248 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:dns-tcp====
I0417 00:16:17.085856    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.085856    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006cb40)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "2369593b-48f3-4d80-a6ca-9fef6c2ce874",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.088801    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.088801    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006cba0)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 53,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b3bcb4e9-8026-4759-8035-082e1d650170",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.089704    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "2369593b-48f3-4d80-a6ca-9fef6c2ce874",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "b3bcb4e9-8026-4759-8035-082e1d650170",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:dns-tcp]
I0417 00:16:17.089704    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.115088    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"e97b3e70-c6dc-47ee-bb12-0cff9caff93c","HostComputeEndpoints":["2369593b-48f3-4d80-a6ca-9fef6c2ce874","b3bcb4e9-8026-4759-8035-082e1d650170"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":53,"ExternalPort":53}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.115088    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [e97b3e70-c6dc-47ee-bb12-0cff9caff93c]
I0417 00:16:17.115088    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.115088    1248 proxier.go:1002] ====Applying Policy for kube-system/kube-dns:metrics====
I0417 00:16:17.117097    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.117097    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006cc00)({
 ip: (string) (len=10) "10.64.2.12",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0c",
 hnsID: (string) (len=36) "2369593b-48f3-4d80-a6ca-9fef6c2ce874",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.160069    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.160069    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006cc60)({
 ip: (string) (len=9) "10.64.2.4",
 port: (uint16) 9153,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-04",
 hnsID: (string) (len=36) "b3bcb4e9-8026-4759-8035-082e1d650170",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.160069    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=2 cap=2) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.12",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0c",
  hnsID: (string) (len=36) "2369593b-48f3-4d80-a6ca-9fef6c2ce874",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 },
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.4",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-04",
  hnsID: (string) (len=36) "b3bcb4e9-8026-4759-8035-082e1d650170",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kube-dns:metrics]
I0417 00:16:17.160069    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.175635    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"b3af1d0f-1488-4023-aeed-a02f239d528d","HostComputeEndpoints":["2369593b-48f3-4d80-a6ca-9fef6c2ce874","b3bcb4e9-8026-4759-8035-082e1d650170"],"FrontendVIPs":["10.0.0.10"],"PortMappings":[{"Protocol":6,"InternalPort":9153,"ExternalPort":9153}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.175635    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.0.10, Id [b3af1d0f-1488-4023-aeed-a02f239d528d]
I0417 00:16:17.175635    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.175635    1248 proxier.go:1002] ====Applying Policy for kube-system/default-http-backend:http====
I0417 00:16:17.197155    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.197155    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006ccc0)({
 ip: (string) (len=9) "10.64.2.9",
 port: (uint16) 8080,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-09",
 hnsID: (string) (len=36) "778a665c-08c5-401e-ab89-112d15daf046",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.197155    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.9",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-09",
  hnsID: (string) (len=36) "778a665c-08c5-401e-ab89-112d15daf046",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/default-http-backend:http]
I0417 00:16:17.197155    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.220854    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"b1f7f6eb-40e7-4f50-9cd0-453b9ae97810","HostComputeEndpoints":["778a665c-08c5-401e-ab89-112d15daf046"],"FrontendVIPs":["10.0.209.152"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.220854    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.209.152, Id [b1f7f6eb-40e7-4f50-9cd0-453b9ae97810]
I0417 00:16:17.243349    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"92ad12ac-b4a4-4e8b-acbe-e3afd38251a6","HostComputeEndpoints":["778a665c-08c5-401e-ab89-112d15daf046"],"PortMappings":[{"Protocol":6,"InternalPort":8080,"ExternalPort":30657}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.243349    1248 proxier.go:1149] Hns LoadBalancer resource created for nodePort resources 10.0.209.152, Id [92ad12ac-b4a4-4e8b-acbe-e3afd38251a6]
I0417 00:16:17.243349    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.243349    1248 proxier.go:1002] ====Applying Policy for kube-system/heapster:====
I0417 00:16:17.266485    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.266485    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006c900)({
 ip: (string) (len=10) "10.64.2.11",
 port: (uint16) 8082,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-0b",
 hnsID: (string) (len=36) "1b6efc0c-5888-4db3-85af-736d16cb6674",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.266485    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.2.11",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-0b",
  hnsID: (string) (len=36) "1b6efc0c-5888-4db3-85af-736d16cb6674",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/heapster:]
I0417 00:16:17.266485    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.284551    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"2c09153b-8b69-4dec-8f64-c7731a0cb6ad","HostComputeEndpoints":["1b6efc0c-5888-4db3-85af-736d16cb6674"],"FrontendVIPs":["10.0.192.96"],"PortMappings":[{"Protocol":6,"InternalPort":8082,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.284551    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.192.96, Id [2c09153b-8b69-4dec-8f64-c7731a0cb6ad]
I0417 00:16:17.284551    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.284551    1248 proxier.go:1002] ====Applying Policy for kube-system/kubernetes-dashboard:====
I0417 00:16:17.309926    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:16:17.309926    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00006ca20)({
 ip: (string) (len=9) "10.64.2.3",
 port: (uint16) 8443,
 isLocal: (bool) false,
 macAddress: (string) (len=17) "02-11-0a-40-02-03",
 hnsID: (string) (len=36) "ee883b6f-88b9-44f1-b933-c1d08163d9d5",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.309926    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=9) "10.64.2.3",
  port: (uint16) 0,
  isLocal: (bool) false,
  macAddress: (string) (len=17) "02-11-0a-40-02-03",
  hnsID: (string) (len=36) "ee883b6f-88b9-44f1-b933-c1d08163d9d5",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [kube-system/kubernetes-dashboard:]
I0417 00:16:17.310391    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.342635    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"88187b7e-050f-4565-aa2d-114cad8ae0c1","HostComputeEndpoints":["ee883b6f-88b9-44f1-b933-c1d08163d9d5"],"FrontendVIPs":["10.0.145.160"],"PortMappings":[{"Protocol":6,"InternalPort":8443,"ExternalPort":443}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:16:17.342635    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.145.160, Id [88187b7e-050f-4565-aa2d-114cad8ae0c1]
I0417 00:16:17.343635    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.343635    1248 proxier.go:945] syncProxyRules took 451.6592ms
I0417 00:16:17.343635    1248 proxier.go:968] Syncing Policies
I0417 00:16:17.343635    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.343635    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.343635    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.343635    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.343635    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.343635    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:945] syncProxyRules took 634.3µs
I0417 00:16:17.344269    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:16:17.344269    1248 proxier.go:968] Syncing Policies
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:17.344269    1248 proxier.go:945] syncProxyRules took 0s
I0417 00:16:17.344269    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:16:17.490564    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:17.835792    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:19.468992    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:19.845857    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:21.484027    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:21.862890    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:23.491204    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:23.873912    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:25.503447    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:25.887884    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:27.498461    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:27.891514    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:29.516989    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:29.909967    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:31.510328    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:31.915654    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:33.530649    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:33.930046    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:35.539264    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:35.939607    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:37.546186    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:37.947266    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:39.556796    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:39.955413    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:41.560699    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:41.951801    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:43.564928    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:43.964428    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:45.574145    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:45.977351    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:47.348282    1248 proxier.go:968] Syncing Policies
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:16:47.348428    1248 proxier.go:945] syncProxyRules took 146.4µs
I0417 00:16:47.348428    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:16:47.588543    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:47.996459    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:49.598612    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:50.013801    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:51.610478    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:52.026175    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:53.619435    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:54.034494    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:55.627098    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:56.045505    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:57.635046    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:58.042209    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:16:59.639357    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:00.064956    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:01.651743    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:02.073876    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:03.661815    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:04.083791    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:05.670451    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:06.102098    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:07.679530    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:08.114071    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:09.683776    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:10.123658    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:11.694347    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:12.132271    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:13.704910    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:14.158263    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:15.714520    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:16.170502    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:17.356649    1248 proxier.go:968] Syncing Policies
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:17.356649    1248 proxier.go:945] syncProxyRules took 0s
I0417 00:17:17.356649    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:17:17.724326    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:18.191907    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:19.732723    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:20.206802    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:21.740170    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:22.217388    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:23.750827    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:24.228390    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:25.759637    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:26.237656    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:27.766394    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:28.245788    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:29.774649    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:30.253364    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:31.783535    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:32.259771    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:33.794619    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:34.268996    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:35.806848    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:36.279937    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:37.816762    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:38.288632    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:39.822726    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:40.291443    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:41.829250    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:42.306154    1248 config.go:141] Calling handler.OnEndpointsUpdate
Log file created at: 2019/04/17 00:17:44
Running on machine: e2e-test-peterhornyack-windows-node-group-31s1
Binary: Built with gc go1.12.1 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
E0417 00:17:44.347226    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname1. Not applying any policy
E0417 00:17:44.347226    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
E0417 00:17:44.347226    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname1. Not applying any policy
E0417 00:17:44.347226    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
I0417 00:17:43.838188    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:44.254454    1248 config.go:124] Calling handler.OnEndpointsAdd
I0417 00:17:44.254454    1248 proxier.go:968] Syncing Policies
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.254454    1248 proxier.go:945] syncProxyRules took 0s
I0417 00:17:44.254454    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:17:44.314994    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:44.347226    1248 config.go:224] Calling handler.OnServiceAdd
I0417 00:17:44.347226    1248 proxier.go:332] Adding new service port "services-1766/multi-endpoint-test:portname1" at 10.0.198.190:80/TCP
I0417 00:17:44.347226    1248 proxier.go:332] Adding new service port "services-1766/multi-endpoint-test:portname2" at 10.0.198.190:81/TCP
I0417 00:17:44.347226    1248 proxier.go:968] Syncing Policies
I0417 00:17:44.347226    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.347226    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.347226    1248 proxier.go:1002] ====Applying Policy for services-1766/multi-endpoint-test:portname1====
I0417 00:17:44.347226    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1766/multi-endpoint-test:portname1]
E0417 00:17:44.347226    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname1. Not applying any policy
I0417 00:17:44.347226    1248 proxier.go:1002] ====Applying Policy for services-1766/multi-endpoint-test:portname2====
I0417 00:17:44.347226    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1766/multi-endpoint-test:portname2]
E0417 00:17:44.347226    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
I0417 00:17:44.348257    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.348257    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.348257    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.348257    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.348257    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.348257    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:17:44.348257    1248 proxier.go:945] syncProxyRules took 1.0306ms
I0417 00:17:44.348257    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:17:45.849032    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:46.325579    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:47.857709    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:48.335271    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:49.860444    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:50.344288    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:51.876993    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:52.354680    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:53.884913    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:54.365395    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:55.893255    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:56.378936    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:57.904149    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:58.387049    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:17:59.921575    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:00.397114    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:01.930123    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:02.404600    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:03.938623    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:04.416494    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:05.006075    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:05.006075    1248 proxier.go:907] Setting endpoints for "services-1766/multi-endpoint-test:portname1" to [0xc00058d5c0]
I0417 00:18:05.070509    1248 proxier.go:968] Syncing Policies
I0417 00:18:05.071510    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:05.071510    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:05.071510    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:05.071510    1248 proxier.go:1002] ====Applying Policy for services-1766/multi-endpoint-test:portname1====
I0417 00:18:05.075420    1248 proxier.go:137] Hns Endpoint resource, {}
I0417 00:18:05.075420    1248 proxier.go:131] Endpoint resource found, (*winkernel.endpointsInfo)(0xc00058d5c0)({
 ip: (string) (len=10) "10.64.1.10",
 port: (uint16) 100,
 isLocal: (bool) true,
 macAddress: (string) (len=17) "02-11-0a-40-01-0a",
 hnsID: (string) (len=36) "8bb189d9-3e35-4337-b98c-82bba7e432e5",
 refCount: (uint16) 1,
 providerAddress: (string) "",
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:05.075420    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) (len=1 cap=1) {
 (winkernel.endpointsInfo) {
  ip: (string) (len=10) "10.64.1.10",
  port: (uint16) 0,
  isLocal: (bool) true,
  macAddress: (string) (len=17) "00-15-5D-8C-BC-6E",
  hnsID: (string) (len=36) "8bb189d9-3e35-4337-b98c-82bba7e432e5",
  refCount: (uint16) 0,
  providerAddress: (string) "",
  hns: (winkernel.hnsV2) {
  }
 }
}
] for service [services-1766/multi-endpoint-test:portname1]
I0417 00:18:05.075420    1248 proxier.go:1107] Trying to Apply Policies for service (*winkernel.serviceInfo)(0xc000749560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.198.190,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) "",
 nodePorthnsID: (string) "",
 policyApplied: (bool) false,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:05.946796    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:06.425048    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:07.944306    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:08.432532    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:09.966105    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:10.447711    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:11.963984    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:12.461380    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:13.983821    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:14.472834    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:15.992288    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:16.471866    1248 config.go:141] Calling handler.OnEndpointsUpdate
E0417 00:18:18.492308    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
E0417 00:18:18.492308    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
E0417 00:18:18.492308    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
E0417 00:18:18.492308    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
I0417 00:18:17.987871    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:18.491543    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:18.492308    1248 proxier.go:137] Hns loadbalancer policy resource, {"ID":"c9998176-2f7b-48f2-a9e3-60d16a8a86d3","HostComputeEndpoints":["8bb189d9-3e35-4337-b98c-82bba7e432e5"],"FrontendVIPs":["10.0.198.190"],"PortMappings":[{"Protocol":6,"InternalPort":100,"ExternalPort":80}],"SchemaVersion":{"Major":2,"Minor":0}}
I0417 00:18:18.492308    1248 proxier.go:1129] Hns LoadBalancer resource created for cluster ip resources 10.0.198.190, Id [c9998176-2f7b-48f2-a9e3-60d16a8a86d3]
I0417 00:18:18.492308    1248 proxier.go:131] +++Policy Successfully applied for service +++, (*winkernel.serviceInfo)(0xc000749560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.198.190,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "c9998176-2f7b-48f2-a9e3-60d16a8a86d3",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:1002] ====Applying Policy for services-1766/multi-endpoint-test:portname2====
I0417 00:18:18.492308    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1766/multi-endpoint-test:portname2]
E0417 00:18:18.492308    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-1766/multi-endpoint-test"
I0417 00:18:18.492308    1248 proxier.go:945] syncProxyRules took 13.4217994s
I0417 00:18:18.492308    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:18:18.492308    1248 proxier.go:968] Syncing Policies
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002526c0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.192.96,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8082,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "2c09153b-8b69-4dec-8f64-c7731a0cb6ad",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252000)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.226.182,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "75f39f91-d46b-46f1-b48e-d1330949369e",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252120)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.1,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b0842340-5f92-4adc-a931-bbdeb28071ee",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000749560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.198.190,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "c9998176-2f7b-48f2-a9e3-60d16a8a86d3",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:1002] ====Applying Policy for services-1766/multi-endpoint-test:portname2====
I0417 00:18:18.492308    1248 proxier.go:1095] Associated endpoints [([]winkernel.endpointsInfo) <nil>
] for service [services-1766/multi-endpoint-test:portname2]
E0417 00:18:18.492308    1248 proxier.go:1103] Endpoint information not available for service services-1766/multi-endpoint-test:portname2. Not applying any policy
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252240)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "UDP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "661edda6-cdbe-447c-a537-75c28c036609",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252360)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 53,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 53,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "e97b3e70-c6dc-47ee-bb12-0cff9caff93c",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002527e0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.145.160,
 port: (int) 443,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 8443,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "88187b7e-050f-4565-aa2d-114cad8ae0c1",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc000252480)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.0.10,
 port: (int) 9153,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 9153,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b3af1d0f-1488-4023-aeed-a02f239d528d",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 proxier.go:973] Policy already applied for (*winkernel.serviceInfo)(0xc0002525a0)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.209.152,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 30657,
 targetPort: (int) 8080,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "b1f7f6eb-40e7-4f50-9cd0-453b9ae97810",
 nodePorthnsID: (string) (len=36) "92ad12ac-b4a4-4e8b-acbe-e3afd38251a6",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:18.492308    1248 healthcheck.go:235] Not saving endpoints for unknown healthcheck "services-1766/multi-endpoint-test"
I0417 00:18:18.492308    1248 proxier.go:945] syncProxyRules took 0s
I0417 00:18:18.492308    1248 bounded_frequency_runner.go:221] sync-runner: ran, next possible in 0s, periodic in 30s
I0417 00:18:20.013077    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:20.500720    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:22.025127    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:22.512363    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:23.466156    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:23.466156    1248 proxier.go:907] Setting endpoints for "services-1766/multi-endpoint-test:portname1" to [0xc00058c060]
I0417 00:18:23.466156    1248 proxier.go:907] Setting endpoints for "services-1766/multi-endpoint-test:portname2" to [0xc00058c0c0]
I0417 00:18:23.466156    1248 proxier.go:907] Setting endpoints for "services-1766/multi-endpoint-test:portname1" to [0xc00058c120]
I0417 00:18:23.466156    1248 proxier.go:394] Service [&{[0 0 0 0 0 0 0 0 0 0 255 255 10 0 198 190] 80 TCP 0 100 {[]} None 10800 [] [] [] false 0 c9998176-2f7b-48f2-a9e3-60d16a8a86d3  true <nil> {}}] is stale
I0417 00:18:23.466156    1248 proxier.go:131] Service Cleanup, (*winkernel.serviceInfo)(0xc000749560)({
 clusterIP: (net.IP) (len=16 cap=16) 10.0.198.190,
 port: (int) 80,
 protocol: (v1.Protocol) (len=3) "TCP",
 nodePort: (int) 0,
 targetPort: (int) 100,
 loadBalancerStatus: (v1.LoadBalancerStatus) &LoadBalancerStatus{Ingress:[],},
 sessionAffinityType: (v1.ServiceAffinity) (len=4) "None",
 stickyMaxAgeSeconds: (int) 10800,
 externalIPs: ([]*winkernel.externalIPInfo) <nil>,
 loadBalancerIngressIPs: ([]*winkernel.loadBalancerIngressInfo) <nil>,
 loadBalancerSourceRanges: ([]string) {
 },
 onlyNodeLocalEndpoints: (bool) false,
 healthCheckNodePort: (int) 0,
 hnsID: (string) (len=36) "c9998176-2f7b-48f2-a9e3-60d16a8a86d3",
 nodePorthnsID: (string) "",
 policyApplied: (bool) true,
 remoteEndpoint: (*winkernel.endpointsInfo)(<nil>),
 hns: (winkernel.hnsV2) {
 }
})
I0417 00:18:23.988250    1248 config.go:141] Calling handler.OnEndpointsUpdate
I0417 00:18:24.588047    1248 config.go:260] Calling handler.OnServiceDelete
I0417 00:24:03.477491    1248 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Endpoints total 471 items received
I0417 00:25:15.422412    1248 reflector.go:384] k8s.io/client-go/informers/factory.go:133: Watch close - *v1.Service total 2 items received
